
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0B4B26D80CE6E7A35BAF9681AF2B22A8'
    
_lr_action_items = {'THEN':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,102,103,104,105,106,107,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,278,279,303,305,306,307,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-58,184,-83,-105,-106,-111,187,-170,-162,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,187,-81,-57,187,-82,-76,]),'EXIT':([0,3,10,18,20,22,31,36,37,42,82,83,85,88,131,152,160,161,163,182,184,224,226,227,236,237,275,300,320,323,325,330,331,334,338,],[1,1,1,-6,-4,-2,-5,-8,-7,-3,1,-115,-113,1,-24,-9,1,1,-116,-18,1,1,-112,-179,1,1,1,1,1,1,1,1,1,1,1,]),'NUM':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[2,2,2,2,-6,-4,2,-2,-5,2,-8,-7,-3,2,2,2,2,2,2,2,2,-115,-113,2,2,2,2,-131,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-24,-9,2,2,-116,-128,-130,-126,-127,-129,-125,2,-18,2,2,2,2,2,2,2,2,2,-112,-179,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'RESULT':([0,3,10,18,20,22,31,36,37,42,82,83,85,88,131,152,160,161,163,182,184,224,226,227,236,237,275,300,320,323,325,330,331,334,338,],[4,4,4,-6,-4,-2,-5,-8,-7,-3,4,-115,-113,4,-24,-9,4,4,-116,-18,4,4,-112,-179,4,4,4,4,4,4,4,4,4,4,4,]),'LENGTH':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[19,19,19,19,-6,-4,19,-2,-5,19,-8,-7,-3,19,19,19,19,19,19,19,19,-115,-113,19,19,19,19,-131,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-24,-9,19,19,-116,-128,-130,-126,-127,-129,-125,19,-18,19,19,19,19,19,19,19,19,19,-112,-179,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'RBRACKET':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,133,136,139,140,142,143,144,166,174,175,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,252,253,256,258,259,271,272,273,279,282,283,285,303,306,307,308,311,312,336,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-58,-105,-106,-111,-170,-35,-37,-34,-38,-33,-36,-32,-162,230,-63,245,-63,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-54,286,-53,289,-48,303,-62,-64,-81,307,-39,-40,-57,-82,-76,-43,-51,327,-52,]),'FALSE':([4,21,33,51,57,62,68,69,78,87,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,170,171,172,177,178,179,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[44,44,44,44,44,44,44,44,44,44,44,44,-131,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-128,-130,-126,-127,-129,-125,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ID':([0,1,3,4,7,8,10,18,20,21,22,31,32,33,36,37,39,42,51,57,60,62,68,69,72,74,77,78,82,83,85,87,88,93,94,98,99,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,148,152,153,160,161,163,170,171,172,177,178,179,181,182,183,184,187,208,210,212,213,214,215,220,222,224,226,227,228,229,231,232,236,237,240,241,246,262,267,275,280,284,286,287,288,293,299,300,320,323,324,325,327,328,330,331,334,338,],[39,39,39,39,39,39,39,-6,-4,39,-2,-5,39,39,-8,-7,-17,-3,39,39,39,39,39,39,-15,39,39,39,39,-115,-113,39,39,39,39,-131,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-24,39,39,-9,39,39,39,-116,-128,-130,-126,-127,-129,-125,39,-18,39,39,39,39,-16,39,39,39,39,39,39,39,-112,-179,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'DCL':([0,3,18,20,22,31,36,37,42,85,131,152,182,226,227,300,320,323,325,330,331,334,338,],[8,8,-6,-4,-2,-5,-8,-7,-3,-113,-24,-9,-18,-112,-179,8,8,8,8,8,8,8,8,]),'LOWER':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[9,9,9,9,-6,-4,9,-2,-5,9,-8,-7,-3,9,9,9,9,9,9,9,9,-115,-113,9,9,9,9,-131,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-24,-9,9,9,-116,-128,-130,-126,-127,-129,-125,9,-18,9,9,9,9,9,9,9,9,9,-112,-179,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'DO':([0,3,10,18,20,22,31,36,37,42,82,83,85,88,131,152,160,161,163,182,184,224,226,227,236,237,275,300,320,323,325,330,331,334,338,],[10,10,10,-6,-4,-2,-5,-8,-7,-3,10,-115,-113,10,-24,-9,10,10,-116,-18,10,10,-112,-179,10,10,10,10,10,10,10,10,10,10,10,]),'LOC':([39,133,135,136,137,138,139,140,141,142,143,144,147,149,150,217,283,285,289,297,309,310,335,],[-17,-35,-30,-37,-41,-29,-34,-38,-45,-33,-36,-32,-28,-46,-31,-44,-39,-40,-47,319,-49,-55,-50,]),'GE':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,120,-58,-105,-106,-111,-170,-162,120,-100,120,120,120,120,-98,-95,-93,-99,-101,-94,120,-97,120,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'CCONST':([4,21,33,51,57,62,68,69,78,87,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,170,171,172,177,178,179,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[49,49,49,49,49,49,49,49,49,49,49,49,-131,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-128,-130,-126,-127,-129,-125,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'RETURNS':([269,298,],[301,301,]),'AND':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,121,-58,-105,-106,-111,-170,-162,121,-100,121,-92,121,121,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'TRUE':([4,21,33,51,57,62,68,69,78,87,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,170,171,172,177,178,179,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[65,65,65,65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-128,-130,-126,-127,-129,-125,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'BY':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,263,264,265,279,303,306,307,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-58,-105,-106,-111,-170,-162,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-152,291,-155,-81,-57,-82,-76,]),'ARRAY':([39,72,74,99,129,148,210,267,286,324,327,],[-17,-15,145,145,145,145,-16,145,145,145,145,]),'PRINT':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[16,16,16,16,-6,-4,16,-2,-5,16,-8,-7,-3,16,16,16,16,16,16,16,16,-115,-113,16,16,16,16,-131,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-24,-9,16,16,-116,-128,-130,-126,-127,-129,-125,16,-18,16,16,16,16,16,16,16,16,16,-112,-179,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'MINUS':([4,6,15,21,29,30,33,39,40,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,62,65,66,67,68,69,78,87,90,93,94,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,166,170,171,172,177,178,179,181,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,213,214,215,222,225,229,230,231,232,240,241,245,246,255,280,284,287,288,293,303,307,328,],[51,-160,-159,51,-56,92,51,-17,-60,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,51,-71,-74,115,51,51,51,51,-58,51,51,-131,-105,-106,-111,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-170,-162,-128,-130,-126,-127,-129,-125,51,51,115,-100,115,115,115,115,-98,115,115,-99,-101,115,115,-97,115,115,-78,-169,51,51,51,51,51,51,-161,51,-59,51,51,51,51,-75,51,-56,51,51,51,51,51,-57,-76,51,]),'ICONST':([4,21,33,51,57,62,68,69,78,87,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,170,171,172,177,178,179,181,187,208,212,213,214,215,218,222,229,231,232,240,241,246,280,284,287,288,291,293,328,],[52,52,52,52,52,52,52,52,52,52,52,52,-131,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-128,-130,-126,-127,-129,-125,52,52,52,52,52,52,52,259,52,52,52,52,52,52,52,52,52,52,52,314,52,52,]),'COMMA':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,70,71,72,73,74,75,76,90,99,100,101,104,105,106,126,127,128,133,135,136,137,138,139,140,141,142,143,144,146,147,149,150,165,166,174,175,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,216,217,219,225,230,233,234,235,245,247,252,253,256,257,267,268,270,272,273,274,279,283,285,289,296,297,303,306,307,308,309,310,311,312,313,319,322,335,336,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,130,-25,-15,132,130,153,-10,-58,130,183,-19,-105,-106,-111,208,-170,-163,-35,-30,-37,-41,-29,-34,-38,-45,-33,-36,-32,-13,-28,-46,-31,208,-162,231,-63,231,-63,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-27,-16,-26,-12,-44,-11,-161,-59,-22,-23,-20,-75,-164,-54,287,-53,-14,130,299,-184,-62,-64,-21,-81,-39,-40,-47,-186,-189,-57,-82,-76,-43,-49,-55,-51,328,-163,-188,-185,-50,-52,]),'CHAR':([39,72,74,99,129,148,210,214,220,262,267,286,287,324,327,328,],[-17,-15,140,140,140,140,-16,140,140,140,140,140,140,140,140,140,]),'NULL':([4,21,33,51,57,62,68,69,78,87,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,170,171,172,177,178,179,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[53,53,53,53,53,53,53,53,53,53,53,53,-131,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-128,-130,-126,-127,-129,-125,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'FI':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,83,85,90,104,105,106,127,163,166,184,185,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,226,230,236,237,238,242,245,275,277,279,281,303,306,307,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-115,-113,-58,-105,-106,-111,-170,-116,-162,-135,239,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-112,-59,-134,-137,276,279,-75,-136,-85,-81,306,-57,-82,-76,]),'PLUS':([6,15,29,30,39,40,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-56,97,-17,-60,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,122,-58,-105,-106,-111,-170,-162,122,-100,122,122,122,122,-98,122,122,-99,-101,122,122,-97,122,122,-78,-169,-161,-59,-75,-56,-57,-76,]),'ELSIF':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,243,244,245,279,303,304,306,307,326,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-58,-105,-106,-111,-170,-162,241,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,280,-84,-75,-81,-57,-86,-82,-76,-87,]),'RETURN':([0,3,10,18,20,22,31,36,37,42,82,83,85,88,131,152,160,161,163,182,184,224,226,227,236,237,275,300,320,323,325,330,331,334,338,],[21,21,21,-6,-4,-2,-5,-8,-7,-3,21,-115,-113,21,-24,-9,21,21,-116,-18,21,21,-112,-179,21,21,21,21,21,21,21,21,21,21,21,]),'IN':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,156,158,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,221,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,109,-58,-105,-106,-111,-170,220,-151,-162,-103,-100,-90,-92,109,109,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,262,-161,-59,-75,-56,-57,-76,]),'$end':([3,14,18,20,22,31,36,37,42,85,131,152,182,226,227,],[-1,0,-6,-4,-2,-5,-8,-7,-3,-113,-24,-9,-18,-112,-179,]),'OR':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,111,-58,-105,-106,-111,-170,-162,111,-100,-90,-92,111,111,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'NEQ':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,112,-58,-105,-106,-111,-170,-162,112,-100,112,-92,112,112,-98,-95,-93,-99,-101,-94,112,-97,-91,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'OD':([82,83,85,161,163,224,226,],[162,-115,-113,223,-116,266,-112,]),'END':([18,20,22,31,36,37,42,85,131,152,182,226,227,323,330,334,338,],[-6,-4,-2,-5,-8,-7,-3,-113,-24,-9,-18,-112,-179,332,337,340,341,]),'CONCAT':([6,15,29,30,39,40,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-56,91,-17,-60,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,113,-58,-105,-106,-111,-170,-162,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'NOT':([4,6,15,21,33,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,62,65,66,67,68,69,78,87,90,93,94,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,166,170,171,172,177,178,179,181,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,213,214,215,222,225,229,230,231,232,240,241,245,246,255,280,284,287,288,293,303,307,328,],[57,-160,-159,57,57,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,57,-71,-74,114,57,57,57,57,-58,57,57,-131,-105,-106,-111,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-170,-162,-128,-130,-126,-127,-129,-125,57,57,-103,-100,-90,-92,114,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,57,57,57,57,57,57,-161,57,-59,57,57,57,57,-75,57,-56,57,57,57,57,57,-57,-76,57,]),'SUCC':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[25,25,25,25,-6,-4,25,-2,-5,25,-8,-7,-3,25,25,25,25,25,25,25,25,-115,-113,25,25,25,25,-131,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-24,-9,25,25,-116,-128,-130,-126,-127,-129,-125,25,-18,25,25,25,25,25,25,25,25,25,-112,-179,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'GT':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,117,-58,-105,-106,-111,-170,-162,117,-100,117,117,117,117,-98,-95,-93,-99,-101,-94,117,-97,117,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'PRED':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[27,27,27,27,-6,-4,27,-2,-5,27,-8,-7,-3,27,27,27,27,27,27,27,27,-115,-113,27,27,27,27,-131,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-24,-9,27,27,-116,-128,-130,-126,-127,-129,-125,27,-18,27,27,27,27,27,27,27,27,27,-112,-179,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'COLON':([6,15,26,29,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,80,90,104,105,106,127,166,173,175,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,249,250,255,279,303,306,307,313,],[-160,-159,88,-114,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,160,-58,-105,-106,-111,-170,-162,229,-61,246,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,284,-61,-56,-81,-57,-82,-76,-61,]),'TO':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,263,264,265,279,294,295,303,306,307,314,318,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-58,-105,-106,-111,-170,-162,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-152,293,-155,-81,293,293,-57,-82,-76,-153,293,]),'MOD':([6,15,29,30,39,40,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-56,96,-17,-60,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,119,-58,-105,-106,-111,-170,-162,119,-100,119,119,119,119,119,119,119,-99,-101,119,119,119,119,119,-78,-169,-161,-59,-75,-56,-57,-76,]),'IF':([0,3,4,10,18,20,21,22,31,33,36,37,42,62,68,69,78,82,83,85,87,88,93,94,98,108,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[33,33,62,33,-6,-4,62,-2,-5,62,-8,-7,-3,62,62,62,62,33,-115,-113,62,33,62,62,-131,62,-24,-9,33,33,-116,-128,-130,-126,-127,-129,-125,62,-18,33,62,62,62,62,62,62,62,33,-112,-179,62,62,62,33,33,62,62,62,33,62,62,62,62,62,33,33,33,33,62,33,33,33,33,]),'WHILE':([6,10,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,84,90,104,105,106,127,133,136,139,140,142,143,144,154,155,157,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,261,265,279,283,285,290,292,303,306,307,315,316,317,329,],[-160,78,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,78,-58,-105,-106,-111,-170,-35,-37,-34,-38,-33,-36,-32,-145,-146,-144,-162,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-157,-155,-81,-39,-40,-156,-150,-57,-82,-76,-154,-148,-149,-147,]),'SYN':([0,3,18,20,22,31,36,37,42,85,131,152,182,226,227,300,320,323,325,330,331,334,338,],[32,32,-6,-4,-2,-5,-8,-7,-3,-113,-24,-9,-18,-112,-179,32,32,32,32,32,32,32,32,]),'BOOL':([39,72,74,99,129,148,210,214,220,262,267,286,287,324,327,328,],[-17,-15,136,136,136,136,-16,136,136,136,136,136,136,136,136,136,]),'SEMI':([6,11,12,13,15,21,24,28,35,38,39,40,41,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,63,65,66,67,71,73,75,76,79,81,84,86,90,100,101,103,104,105,106,127,133,135,136,137,138,139,140,141,142,143,144,146,147,149,150,154,155,157,159,162,164,166,167,168,176,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,211,216,217,219,223,225,230,233,234,235,239,245,257,261,265,266,269,274,276,279,283,285,289,290,292,298,302,303,306,307,309,310,315,316,317,321,329,332,335,337,339,340,341,],[-160,-117,85,-123,-159,-167,-121,-119,-118,-122,-17,-120,-165,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-168,-71,-74,-79,-25,131,152,-10,-143,161,-142,-166,-58,182,-19,-83,-105,-106,-111,-170,-35,-30,-37,-41,-29,-34,-38,-45,-33,-36,-32,-13,-28,-46,-31,-145,-146,-144,-158,-140,-141,-162,226,227,-124,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-27,-26,-12,-44,-11,-139,-161,-59,-22,-23,-20,-133,-75,-14,-157,-155,-138,300,-21,-132,-81,-39,-40,-47,-156,-150,320,325,-57,-82,-76,-49,-55,-154,-148,-149,331,-147,-183,-50,-181,-187,-182,-180,]),'ARROW':([4,6,15,21,29,30,33,39,40,51,57,58,59,61,62,68,69,78,87,90,93,94,98,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,166,170,171,172,177,178,179,181,187,207,208,212,213,214,215,222,225,229,230,231,232,240,241,246,255,280,284,287,288,293,303,328,],[60,-160,-159,60,-56,90,60,-17,-60,60,60,-56,-60,90,60,60,60,60,60,-58,60,60,-131,90,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-170,-162,-128,-130,-126,-127,-129,-125,60,60,-169,60,60,60,60,60,60,-161,60,-59,60,60,60,60,60,-56,60,60,60,60,60,-57,60,]),'INT':([39,72,74,99,129,148,210,214,220,262,267,286,287,324,327,328,],[-17,-15,143,143,143,143,-16,143,143,143,143,143,143,143,143,143,]),'UPPER':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[34,34,34,34,-6,-4,34,-2,-5,34,-8,-7,-3,34,34,34,34,34,34,34,34,-115,-113,34,34,34,34,-131,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-24,-9,34,34,-116,-128,-130,-126,-127,-129,-125,34,-18,34,34,34,34,34,34,34,34,34,-112,-179,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'PROC':([88,],[169,]),'CHARS':([39,72,74,99,129,148,210,267,286,324,327,],[-17,-15,151,151,151,151,-16,151,151,151,151,]),'DIVIDE':([6,15,29,30,39,40,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-56,89,-17,-60,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,110,-58,-105,-106,-111,-170,-162,110,-100,110,110,110,110,110,110,110,-99,-101,110,110,110,110,110,-78,-169,-161,-59,-75,-56,-57,-76,]),'LT':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,116,-58,-105,-106,-111,-170,-162,116,-100,116,116,116,116,-98,-95,-93,-99,-101,-94,116,-97,116,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'LBRACKET':([6,15,29,30,39,40,44,46,47,49,50,52,53,54,56,58,59,61,64,65,66,90,106,127,145,151,166,206,207,225,230,245,255,303,307,],[-160,-159,-56,93,-17,-60,-70,-67,-65,-72,-66,-69,-73,-68,-77,-56,-60,93,108,-71,-74,-58,93,-170,214,218,-162,-78,-169,-161,-59,-75,-56,-57,-76,]),'TIMES':([6,15,29,30,39,40,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-56,95,-17,-60,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,118,-58,-105,-106,-111,-170,-162,118,-100,118,118,118,118,118,118,118,-99,-101,118,118,118,118,118,-78,-169,-161,-59,-75,-56,-57,-76,]),'FOR':([10,],[77,]),'SCONST':([4,21,33,51,57,62,68,69,78,87,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,170,171,172,177,178,179,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[66,66,66,66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-128,-130,-126,-127,-129,-125,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RPAREN':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,69,87,90,104,105,106,125,126,127,128,133,135,136,137,138,139,140,141,142,143,144,147,149,150,165,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,217,225,228,230,245,247,248,251,268,270,272,279,283,285,288,289,296,297,303,306,307,308,309,310,313,319,322,333,335,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,127,166,-58,-105,-106,-111,206,207,-170,-163,-35,-30,-37,-41,-29,-34,-38,-45,-33,-36,-32,-28,-46,-31,225,-162,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-44,-161,269,-59,-75,-164,283,285,298,-184,-62,-81,-39,-40,166,-47,-186,-189,-57,-82,-76,-43,-49,-55,-163,-188,-185,339,-50,]),'ELSE':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,83,85,90,104,105,106,127,163,166,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,226,230,236,243,244,245,279,303,304,306,307,326,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-115,-113,-58,-105,-106,-111,-170,-116,-162,-135,237,240,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-112,-59,-134,240,-84,-75,-81,-57,-86,-82,-76,-87,]),'REF':([39,72,74,99,129,148,210,267,286,324,327,],[-17,-15,148,148,148,148,-16,148,148,148,148,]),'DOWN':([6,15,39,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,156,158,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,263,264,265,279,295,303,306,307,314,],[-160,-159,-17,-80,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,-79,-58,-105,-106,-111,-170,221,-151,-162,-103,-100,-90,-92,-104,-102,-98,-95,-93,-99,-101,-94,-89,-97,-91,-96,-78,-169,-161,-59,-75,-152,294,-155,-81,318,-57,-82,-76,-153,]),'READ':([0,3,4,10,18,20,21,22,31,33,36,37,42,51,57,60,62,68,69,78,82,83,85,87,88,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,131,152,160,161,163,170,171,172,177,178,179,181,182,184,187,208,212,213,214,215,222,224,226,227,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[17,17,17,17,-6,-4,17,-2,-5,17,-8,-7,-3,17,17,17,17,17,17,17,17,-115,-113,17,17,17,17,-131,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-24,-9,17,17,-116,-128,-130,-126,-127,-129,-125,17,-18,17,17,17,17,17,17,17,17,17,-112,-179,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'TYPE':([0,3,18,20,22,31,36,37,42,85,131,152,182,226,227,300,320,323,325,330,331,334,338,],[7,7,-6,-4,-2,-5,-8,-7,-3,-113,-24,-9,-18,-112,-179,7,7,7,7,7,7,7,7,]),'LPAREN':([2,4,5,9,16,17,19,21,23,25,27,29,33,34,39,51,57,58,62,68,69,78,87,93,94,98,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,133,134,136,137,138,139,140,142,143,144,169,170,171,172,177,178,179,181,187,208,212,213,214,215,222,229,231,232,240,241,246,254,255,256,260,261,280,283,284,285,287,288,290,293,301,328,],[-171,68,69,-175,-178,-177,-176,68,87,-173,-172,-42,68,-174,-17,68,68,-42,68,68,68,68,68,68,68,-131,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-35,212,-37,-42,213,-34,-38,-33,-36,-32,228,-128,-130,-126,-127,-129,-125,68,68,68,68,68,68,68,68,68,68,68,68,68,68,288,-42,213,-42,213,68,-39,68,-40,68,68,213,68,324,68,]),'EQ':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,123,-58,-105,-106,-111,-170,-162,123,-100,123,-92,123,123,-98,-95,-93,-99,-101,-94,123,-97,-91,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),'ASSIGN':([6,15,29,30,39,40,58,70,72,89,90,91,92,95,96,97,99,127,133,135,136,137,138,139,140,141,142,143,144,146,147,149,150,156,158,166,180,207,210,217,225,230,283,285,289,303,309,310,335,],[-160,-159,-56,98,-17,-60,-56,129,-15,170,-58,171,172,177,178,179,181,-170,-35,-30,-37,-41,-29,-34,-38,-45,-33,-36,-32,215,-28,-46,-31,222,-151,-162,232,-169,-16,-44,-161,-59,-39,-40,-47,-57,-49,-55,-50,]),'LE':([6,15,39,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,65,66,67,90,104,105,106,127,166,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,225,230,245,255,303,307,],[-160,-159,-17,-70,-88,-67,-65,-109,-72,-66,-69,-73,-68,-107,-110,-56,-60,-108,-71,-74,124,-58,-105,-106,-111,-170,-162,124,-100,124,124,124,124,-98,-95,-93,-99,-101,-94,124,-97,124,-96,-78,-169,-161,-59,-75,-56,-57,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'conditional_expression':([4,21,33,62,68,69,78,87,93,94,108,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'parameter_list':([69,87,288,],[126,165,165,]),'declaration':([8,153,],[76,219,]),'iteration':([77,],[157,]),'expression':([4,21,33,62,68,69,78,87,93,94,108,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[63,86,103,103,125,128,103,128,175,176,189,234,244,247,250,250,250,257,265,272,273,234,277,103,282,103,272,250,313,265,250,]),'builtin_name':([0,3,4,10,21,33,51,57,60,62,68,69,78,82,87,88,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,160,161,181,184,187,208,212,213,214,215,222,224,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'string_length':([218,],[258,]),'result_action':([0,3,10,82,88,160,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'assigning_operator':([30,],[94,]),'discrete_expression':([222,293,],[263,315,]),'value_array_slice':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'boolean_mode':([74,99,129,148,214,220,262,267,286,287,324,327,328,],[142,142,142,142,142,142,142,142,142,142,142,142,142,]),'referenced_location':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'integer_mode':([74,99,129,148,214,220,262,267,286,287,324,327,328,],[144,144,144,144,144,144,144,144,144,144,144,144,144,]),'mode':([74,99,129,148,267,286,324,327,],[146,180,209,217,297,310,297,310,]),'mode_name':([74,99,129,148,267,286,324,327,],[147,147,147,147,147,147,147,147,]),'then_clause':([102,],[185,]),'loop_counter':([77,],[156,]),'constant_expression':([181,232,],[233,274,]),'array_mode':([74,99,129,148,267,286,324,327,],[149,149,149,149,149,149,149,149,]),'parenthesized_expression':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'upper_bound':([229,284,],[271,308,]),'literal_range':([212,213,214,287,288,328,],[248,251,252,252,248,252,]),'discrete_mode_name':([0,3,4,10,21,33,51,57,60,62,68,69,74,78,82,87,88,93,94,99,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,148,160,161,181,184,187,208,212,213,214,215,220,222,224,229,231,232,236,237,240,241,246,262,267,275,280,284,286,287,288,293,300,320,323,324,325,327,328,330,331,334,338,],[23,23,23,23,23,23,23,23,23,23,23,23,134,23,23,23,23,23,23,134,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,134,134,23,23,23,23,23,23,23,23,254,23,134,23,23,23,23,23,23,23,23,23,23,134,134,23,23,23,134,254,23,23,23,23,23,134,23,134,254,23,23,23,23,]),'reference_mode':([74,99,129,148,267,286,324,327,],[135,135,135,135,135,135,135,135,]),'step_enumeration':([77,],[154,]),'result_spec':([269,298,],[302,321,]),'label_id':([0,3,10,82,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[26,26,80,80,80,80,80,80,80,80,26,26,26,26,26,26,26,26,]),'do_action':([0,3,10,82,88,160,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'lower_bound':([93,212,213,214,287,288,328,],[173,249,249,249,249,249,249,]),'identifier':([0,1,3,4,7,8,10,21,32,33,51,57,60,62,68,69,74,77,78,82,87,88,93,94,99,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,132,148,153,160,161,181,183,184,187,208,212,213,214,215,220,222,224,228,229,231,232,236,237,240,241,246,262,267,275,280,284,286,287,288,293,299,300,320,323,324,325,327,328,330,331,334,338,],[29,41,29,58,72,72,29,58,72,58,58,58,58,58,58,58,137,158,58,29,58,58,58,58,137,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,137,210,72,137,72,58,29,58,72,29,58,58,58,58,255,58,260,58,29,72,58,58,58,29,29,58,58,58,260,137,29,58,58,137,255,58,58,72,29,29,29,137,29,137,255,29,29,29,29,]),'control_part':([10,],[81,]),'discrete_mode':([74,99,129,148,214,220,262,267,286,287,324,327,328,],[138,138,138,138,256,261,290,138,138,256,138,138,256,]),'location':([0,3,4,10,21,33,51,57,60,62,68,69,78,82,87,88,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,160,161,181,184,187,208,212,213,214,215,222,224,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[30,30,61,30,61,61,61,61,106,61,61,61,61,30,61,30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,30,30,61,30,61,61,61,61,61,61,61,30,61,61,61,30,30,61,61,61,30,61,61,61,61,61,30,30,30,30,61,30,30,30,30,]),'initialization':([146,],[216,]),'builtin_call':([0,3,4,10,21,33,51,57,60,62,68,69,78,82,87,88,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,160,161,181,184,187,208,212,213,214,215,222,224,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'boolean_expression':([33,62,78,241,280,],[102,107,159,278,305,]),'expression_list':([93,108,],[174,188,]),'step_value':([264,],[295,]),'identifier_list':([7,8,32,132,153,183,228,299,],[70,74,99,70,74,99,267,267,]),'then_expression':([107,278,305,],[186,304,326,]),'for_control':([10,],[84,]),'else_clause':([185,],[238,]),'binop':([4,21,33,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[67,67,67,67,67,67,67,67,67,67,67,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'composite_mode':([74,99,129,148,267,286,324,327,],[150,150,150,150,150,150,150,150,]),'elsif_expression':([186,],[243,]),'action':([0,3,10,82,88,160,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[12,12,12,12,167,167,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'discrete_range_mode':([74,99,129,148,214,220,262,267,286,287,324,327,328,],[133,133,133,133,133,133,133,133,133,133,133,133,133,]),'statement_list':([0,300,320,325,331,],[3,323,330,334,338,]),'procedure_statement':([0,3,300,320,323,325,330,331,334,338,],[37,37,37,37,37,37,37,37,37,37,]),'formal_parameter_list':([228,],[268,]),'operand':([4,21,33,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'if_action':([0,3,10,82,88,160,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'string_mode':([74,99,129,148,267,286,324,327,],[141,141,141,141,141,141,141,141,]),'literal':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'program':([0,],[14,]),'procedure_call':([0,3,4,10,21,33,51,57,60,62,68,69,78,82,87,88,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,160,161,181,184,187,208,212,213,214,215,222,224,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'value_array_element':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'index_mode':([214,287,328,],[253,311,336,]),'else_expression':([186,243,],[242,281,]),'newmode_statement':([0,3,300,320,323,325,330,331,334,338,],[18,18,18,18,18,18,18,18,18,18,]),'while_control':([10,84,],[79,164,]),'synonym_list':([32,],[100,]),'procedure_definition':([88,],[168,]),'operand1':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[55,55,55,104,105,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'start_value':([222,],[264,]),'declaration_statement':([0,3,300,320,323,325,330,331,334,338,],[20,20,20,20,20,20,20,20,20,20,]),'primitive_value':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'index_mode_list':([287,],[312,]),'element_mode':([286,327,],[309,335,]),'exit_action':([0,3,10,82,88,160,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'assignment_action':([0,3,10,82,88,160,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'mode_definition':([7,132,],[71,211,]),'parameter_spec':([267,324,],[296,333,]),'call_action':([0,3,4,10,21,33,51,57,60,62,68,69,78,82,87,88,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,160,161,181,184,187,208,212,213,214,215,222,224,229,231,232,236,237,240,241,246,275,280,284,287,288,293,300,320,323,325,328,330,331,334,338,],[40,40,59,40,59,59,59,59,59,59,59,59,59,40,59,40,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,40,40,59,40,59,59,59,59,59,59,59,40,59,59,59,40,40,59,59,59,40,59,59,59,59,59,40,40,40,40,59,40,40,40,40,]),'synonym_definition':([32,183,],[101,235,]),'character_mode':([74,99,129,148,214,220,262,267,286,287,324,327,328,],[139,139,139,139,139,139,139,139,139,139,139,139,139,]),'synonym_statement':([0,3,300,320,323,325,330,331,334,338,],[31,31,31,31,31,31,31,31,31,31,]),'statement':([0,3,300,320,323,325,330,331,334,338,],[22,42,22,22,42,22,42,22,42,42,]),'end_value':([264,294,295,318,],[292,316,317,329,]),'action_statement_list':([10,161,184,237,],[82,224,236,275,]),'action_statement':([0,3,10,82,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[36,36,83,163,83,83,163,163,83,163,36,36,36,36,36,36,36,36,]),'formal_parameter':([228,299,],[270,322,]),'array_primitive_value':([4,21,33,51,57,62,68,69,78,87,93,94,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,181,187,208,212,213,214,215,222,229,231,232,240,241,246,280,284,287,288,293,328,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'newmode_list':([7,],[73,]),'declaration_list':([8,],[75,]),'range_enumeration':([77,],[155,]),'return_action':([0,3,10,82,88,160,161,184,224,236,237,275,300,320,323,325,330,331,334,338,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
