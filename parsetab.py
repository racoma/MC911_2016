
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CF797C06841E65F630672B7C4C505BAB'
    
_lr_action_items = {'CCONST':([17,26,35,45,47,49,51,57,61,74,77,84,90,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[60,60,60,60,60,60,-131,60,60,60,60,60,60,60,-125,-126,-129,-127,-128,-130,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'OR':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,148,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,-90,-95,148,-91,-98,-101,148,-93,-99,148,-92,-100,-89,-96,-78,-56,-75,-57,-76,]),'RETURNS':([253,288,],[284,284,]),'NOT':([17,26,31,34,35,36,45,47,49,51,54,57,59,60,62,63,65,66,67,69,70,72,73,75,77,78,79,80,81,82,83,84,90,117,127,133,135,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,187,188,192,195,196,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,225,229,235,248,260,261,263,265,277,281,283,291,296,302,317,327,],[61,61,-17,-160,61,-159,61,61,61,-131,-58,61,-60,-72,-68,150,-109,-69,-108,-67,-73,-88,-66,-107,61,-56,-74,-65,-70,-110,-71,61,61,61,-162,-170,-125,-126,-129,-127,-128,-130,-106,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-111,-105,61,61,61,61,-161,61,-169,61,-59,61,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,150,-92,-100,-89,-96,61,-78,61,61,-56,-75,61,61,61,61,61,61,-57,61,61,-76,61,]),'CHAR':([31,41,43,100,122,180,189,195,230,256,268,282,283,310,326,327,],[-17,-15,108,108,108,108,-16,108,108,108,108,108,108,108,108,108,]),'EQ':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,151,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,151,-95,151,-91,-98,-101,151,-93,-99,151,-92,-100,151,-96,-78,-56,-75,-57,-76,]),'SYN':([0,1,6,12,20,22,24,33,96,103,104,178,182,198,200,285,311,312,315,330,331,332,339,],[5,-7,-5,-6,-2,-4,5,-8,-3,-113,-18,-24,-9,-179,-112,5,5,5,5,5,5,5,5,]),'LT':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,149,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,149,-95,149,149,-98,-101,149,-93,-99,149,149,-100,149,-96,-78,-56,-75,-57,-76,]),'ARRAY':([31,41,43,100,122,180,189,256,282,310,326,],[-17,-15,125,125,125,125,-16,125,125,125,125,]),'GT':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,155,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,155,-95,155,155,-98,-101,155,-93,-99,155,155,-100,155,-96,-78,-56,-75,-57,-76,]),'TRUE':([17,26,35,45,47,49,51,57,61,74,77,84,90,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[83,83,83,83,83,83,-131,83,83,83,83,83,83,83,-125,-126,-129,-127,-128,-130,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'DIVIDE':([2,15,28,31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-60,55,-56,-17,-160,-159,-58,-60,-72,-68,159,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,159,159,159,159,159,159,159,-101,159,159,-99,159,159,-100,159,159,-78,-56,-75,-57,-76,]),'LENGTH':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[10,-7,-5,-6,10,10,-2,-4,10,10,-8,10,10,10,10,10,-131,10,10,10,10,10,10,-115,10,10,-3,-113,-18,10,-125,-126,-129,-127,-128,-130,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-116,-24,-9,10,10,10,10,10,10,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'COMMA':([31,34,36,41,42,43,44,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,93,94,95,98,99,100,107,108,109,110,111,112,113,115,118,119,120,121,123,126,127,128,129,133,134,137,138,145,163,164,183,186,189,190,191,193,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,232,233,234,240,249,250,251,252,254,255,256,257,259,260,274,278,279,280,289,290,291,294,304,305,306,307,308,309,313,316,317,320,335,336,],[-17,-160,-159,-15,105,116,-19,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,179,-25,116,-10,181,116,-45,-38,-28,-46,-35,-34,-36,-37,-32,-33,-29,-41,-30,-31,-162,197,-163,-170,197,204,-63,-106,-111,-105,-13,-20,-16,-23,-22,-44,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,204,-63,-78,-26,-27,-11,-12,-21,-54,-53,283,-164,-184,287,116,-62,-64,-75,-14,-39,-40,-47,-189,-186,-57,-81,-43,-163,-55,-49,327,-51,-185,-188,-76,-82,-50,-52,]),'RPAREN':([31,34,36,45,47,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,107,108,109,110,111,112,113,115,118,119,120,121,123,126,127,128,129,133,134,145,163,164,166,193,196,199,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,243,244,252,254,255,257,260,278,279,280,281,289,290,291,294,304,305,306,307,313,316,317,320,328,335,],[-17,-160,-159,127,133,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-45,-38,-28,-46,-35,-34,-36,-37,-32,-33,-29,-41,-30,-31,-162,196,-163,-170,201,-106,-111,-105,225,-44,-161,253,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,278,279,-164,-184,288,-62,-75,-39,-40,-47,127,-189,-186,-57,-81,-43,-163,-55,-49,-185,-188,-76,-82,337,-50,]),'BOOL':([31,41,43,100,122,180,189,195,230,256,268,282,283,310,326,327,],[-17,-15,115,115,115,115,-16,115,115,115,115,115,115,115,115,115,]),'DOWN':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,127,133,145,163,164,170,172,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,260,269,270,271,291,294,299,317,320,325,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,228,-151,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-75,-152,301,-155,-57,-81,322,-76,-82,-153,]),'PLUS':([2,15,28,31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-60,48,-56,-17,-160,-159,-58,-60,-72,-68,146,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,146,146,146,146,146,-98,-101,146,146,-99,146,146,-100,146,146,-78,-56,-75,-57,-76,]),'ICONST':([17,26,35,45,47,49,51,57,61,74,77,84,90,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,194,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,303,327,],[66,66,66,66,66,66,-131,66,66,66,66,66,66,66,-125,-126,-129,-127,-128,-130,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,245,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,325,66,]),'GE':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,147,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,147,-95,147,147,-98,-101,147,-93,-99,147,147,-100,147,-96,-78,-56,-75,-57,-76,]),'NEQ':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,158,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,158,-95,158,-91,-98,-101,158,-93,-99,158,-92,-100,158,-96,-78,-56,-75,-57,-76,]),'NUM':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[14,-7,-5,-6,14,14,-2,-4,14,14,-8,14,14,14,14,14,-131,14,14,14,14,14,14,-115,14,14,-3,-113,-18,14,-125,-126,-129,-127,-128,-130,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-116,-24,-9,14,14,14,14,14,14,-179,-112,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'OD':([89,91,103,167,177,200,227,],[-115,176,-113,226,-116,-112,267,]),'EXIT':([0,1,6,12,18,20,22,24,33,46,89,91,96,103,104,167,168,177,178,182,184,198,200,227,236,237,275,285,311,312,315,330,331,332,339,],[16,-7,-5,-6,16,-2,-4,16,-8,16,-115,16,-3,-113,-18,16,16,-116,-24,-9,16,-179,-112,16,16,16,16,16,16,16,16,16,16,16,16,]),'TO':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,260,269,270,271,291,294,299,301,317,320,322,325,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-75,-152,302,-155,-57,-81,302,302,-76,-82,302,-153,]),'REF':([31,41,43,100,122,180,189,256,282,310,326,],[-17,-15,122,122,122,122,-16,122,122,122,122,]),'AND':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,160,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,160,-95,160,-91,-98,-101,160,-93,-99,160,-92,-100,-89,-96,-78,-56,-75,-57,-76,]),'IN':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,170,172,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,228,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,154,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,230,-151,-161,-169,-59,-97,-94,-90,-95,154,-91,-98,-101,-103,-93,-99,154,-92,-100,-89,-96,-78,268,-56,-75,-57,-76,]),'DO':([0,1,6,12,18,20,22,24,33,46,89,91,96,103,104,167,168,177,178,182,184,198,200,227,236,237,275,285,311,312,315,330,331,332,339,],[18,-7,-5,-6,18,-2,-4,18,-8,18,-115,18,-3,-113,-18,18,18,-116,-24,-9,18,-179,-112,18,18,18,18,18,18,18,18,18,18,18,18,]),'READ':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[19,-7,-5,-6,19,19,-2,-4,19,19,-8,19,19,19,19,19,-131,19,19,19,19,19,19,-115,19,19,-3,-113,-18,19,-125,-126,-129,-127,-128,-130,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-116,-24,-9,19,19,19,19,19,19,-179,-112,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'RBRACKET':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,108,111,112,113,115,118,119,127,133,137,138,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,245,246,249,250,251,257,258,259,260,278,279,291,292,294,304,308,309,317,320,336,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-38,-35,-34,-36,-37,-32,-33,-162,-170,203,-63,-106,-111,-105,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,260,-63,-78,-48,280,-54,-53,282,-62,291,-64,-75,-39,-40,-57,317,-81,-43,326,-51,-76,-82,-52,]),'ARROW':([2,15,17,26,28,31,34,35,36,45,47,49,51,54,57,59,61,67,74,77,78,84,90,117,127,133,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,187,188,192,195,196,197,201,202,203,204,223,229,235,248,261,263,265,277,281,283,291,296,302,327,],[-60,54,68,68,-56,-17,-160,68,-159,68,68,68,-131,-58,68,-60,68,54,68,68,-56,68,68,68,-162,-170,-125,-126,-129,-127,-128,-130,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,54,68,68,68,68,-161,68,-169,68,-59,68,68,68,68,-56,68,68,68,68,68,68,-57,68,68,68,]),'SEMI':([2,3,4,11,17,23,31,34,36,37,38,39,42,44,54,58,59,60,62,63,65,66,67,69,70,71,72,73,75,76,78,79,80,81,82,83,85,87,92,93,94,97,98,99,102,107,108,109,110,111,112,113,115,118,119,120,121,123,126,127,130,132,133,144,145,163,164,169,171,173,174,175,176,183,186,190,191,193,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,226,231,232,233,234,238,240,253,260,267,271,272,274,276,278,279,280,286,288,291,294,298,300,306,307,314,317,320,321,323,324,329,334,335,337,338,340,341,],[-120,-117,-122,-121,-167,-123,-17,-160,-159,103,-119,-118,104,-19,-58,-165,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-166,-56,-74,-65,-70,-110,-71,167,-142,-143,178,-25,-168,-10,182,-83,-45,-38,-28,-46,-35,-34,-36,-37,-32,-33,-29,-41,-30,-31,-162,198,200,-170,-124,-106,-111,-105,-141,-144,-145,-146,-158,-140,-13,-20,-23,-22,-44,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-139,-26,-27,-11,-12,-133,-21,285,-75,-138,-155,-157,-14,-132,-39,-40,-47,312,315,-57,-81,-156,-150,-55,-49,331,-76,-82,-149,-148,-154,-183,-147,-50,-187,-182,-181,-180,]),'WHILE':([18,31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,87,108,111,112,113,115,118,119,127,133,145,163,164,171,173,174,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,260,271,272,278,279,291,294,298,300,317,320,321,323,324,334,],[90,-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,90,-38,-35,-34,-36,-37,-32,-33,-162,-170,-106,-111,-105,-144,-145,-146,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-75,-155,-157,-39,-40,-57,-81,-156,-150,-76,-82,-149,-148,-154,-147,]),'LOC':([31,107,108,109,110,111,112,113,115,118,119,120,121,123,126,193,278,279,280,289,306,307,335,],[-17,-45,-38,-28,-46,-35,-34,-36,-37,-32,-33,-29,-41,-30,-31,-44,-39,-40,-47,316,-55,-49,-50,]),'TYPE':([0,1,6,12,20,22,24,33,96,103,104,178,182,198,200,285,311,312,315,330,331,332,339,],[21,-7,-5,-6,-2,-4,21,-8,-3,-113,-18,-24,-9,-179,-112,21,21,21,21,21,21,21,21,]),'ELSE':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,89,103,127,133,145,163,164,177,184,185,196,200,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,225,236,260,262,266,291,294,317,318,320,333,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-115,-113,-162,-170,-106,-111,-105,-116,-135,237,-161,-112,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,263,-78,-134,-75,-84,263,-57,-81,-76,-86,-82,-87,]),'LBRACKET':([2,15,28,31,34,36,54,59,60,62,64,66,67,69,70,73,78,79,80,81,82,83,124,125,127,133,163,196,201,203,225,248,260,291,317,],[-60,49,-56,-17,-160,-159,-58,-60,-72,-68,162,-69,49,-67,-73,-66,-56,-74,-65,-70,-77,-71,194,195,-162,-170,49,-161,-169,-59,-78,-56,-75,-57,-76,]),'THEN':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,101,102,127,133,145,163,164,165,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,260,291,294,295,317,319,320,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,184,-83,-162,-170,-106,-111,-105,223,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-75,-57,-81,223,-76,223,-82,]),'RETURN':([0,1,6,12,18,20,22,24,33,46,89,91,96,103,104,167,168,177,178,182,184,198,200,227,236,237,275,285,311,312,315,330,331,332,339,],[17,-7,-5,-6,17,-2,-4,17,-8,17,-115,17,-3,-113,-18,17,17,-116,-24,-9,17,-179,-112,17,17,17,17,17,17,17,17,17,17,17,17,]),'BY':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,260,269,270,271,291,294,317,320,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-75,-152,303,-155,-57,-81,-76,-82,]),'MINUS':([2,15,17,26,28,31,34,35,36,45,47,49,51,54,57,59,60,62,63,65,66,67,69,70,72,73,75,77,78,79,80,81,82,83,84,90,117,127,133,135,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,187,188,192,195,196,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,225,229,235,248,260,261,263,265,277,281,283,291,296,302,317,327,],[-60,50,74,74,-56,-17,-160,74,-159,74,74,74,-131,-58,74,-60,-72,-68,152,-109,-69,-108,-67,-73,-88,-66,-107,74,-56,-74,-65,-70,-110,-71,74,74,74,-162,-170,-125,-126,-129,-127,-128,-130,-106,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-111,-105,74,74,74,74,-161,74,-169,74,-59,74,-97,152,152,152,152,152,-98,-101,152,152,-99,152,152,-100,152,152,74,-78,74,74,-56,-75,74,74,74,74,74,74,-57,74,74,-76,74,]),'RESULT':([0,1,6,12,18,20,22,24,33,46,89,91,96,103,104,167,168,177,178,182,184,198,200,227,236,237,275,285,311,312,315,330,331,332,339,],[26,-7,-5,-6,26,-2,-4,26,-8,26,-115,26,-3,-113,-18,26,26,-116,-24,-9,26,-179,-112,26,26,26,26,26,26,26,26,26,26,26,26,]),'SUCC':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[27,-7,-5,-6,27,27,-2,-4,27,27,-8,27,27,27,27,27,-131,27,27,27,27,27,27,-115,27,27,-3,-113,-18,27,-125,-126,-129,-127,-128,-130,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-116,-24,-9,27,27,27,27,27,27,-179,-112,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'IF':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[35,-7,-5,-6,77,35,-2,-4,35,77,-8,77,77,35,77,77,-131,77,77,77,-115,77,35,-3,-113,-18,77,-125,-126,-129,-127,-128,-130,77,35,35,-116,-24,-9,35,77,77,77,77,77,-179,-112,77,77,77,35,77,77,35,35,77,77,77,35,77,77,77,35,77,77,35,35,35,77,35,35,35,35,]),'PRED':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[29,-7,-5,-6,29,29,-2,-4,29,29,-8,29,29,29,29,29,-131,29,29,29,29,29,29,-115,29,29,-3,-113,-18,29,-125,-126,-129,-127,-128,-130,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-116,-24,-9,29,29,29,29,29,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'DCL':([0,1,6,12,20,22,24,33,96,103,104,178,182,198,200,285,311,312,315,330,331,332,339,],[30,-7,-5,-6,-2,-4,30,-8,-3,-113,-18,-24,-9,-179,-112,30,30,30,30,30,30,30,30,]),'FOR':([18,],[88,]),'ID':([0,1,5,6,12,16,17,18,20,21,22,24,26,30,31,33,35,41,43,45,46,47,49,51,57,61,68,74,77,84,88,89,90,91,96,100,103,104,105,116,117,122,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,179,180,181,182,184,187,188,189,192,195,197,198,199,200,202,204,223,227,229,230,235,236,237,256,261,263,265,268,275,277,281,282,283,285,287,296,302,310,311,312,315,326,327,330,331,332,339,],[31,-7,31,-5,-6,31,31,31,-2,31,-4,31,31,31,-17,-8,31,-15,31,31,31,31,31,-131,31,31,31,31,31,31,31,-115,31,31,-3,31,-113,-18,31,31,31,31,-125,-126,-129,-127,-128,-130,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-116,-24,31,31,31,-9,31,31,31,-16,31,31,31,-179,31,-112,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PRINT':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[32,-7,-5,-6,32,32,-2,-4,32,32,-8,32,32,32,32,32,-131,32,32,32,32,32,32,-115,32,32,-3,-113,-18,32,-125,-126,-129,-127,-128,-130,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-116,-24,-9,32,32,32,32,32,32,-179,-112,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ASSIGN':([2,15,28,31,34,36,41,43,48,50,52,53,54,55,56,78,95,106,107,108,109,110,111,112,113,115,118,119,120,121,123,126,127,133,170,172,183,189,193,196,201,203,278,279,280,291,306,307,335,],[-60,51,-56,-17,-160,-159,-15,117,135,139,140,141,-58,142,143,-56,180,187,-45,-38,-28,-46,-35,-34,-36,-37,-32,-33,-29,-41,-30,-31,-162,-170,229,-151,235,-16,-44,-161,-169,-59,-39,-40,-47,-57,-55,-49,-50,]),'NULL':([17,26,35,45,47,49,51,57,61,74,77,84,90,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[70,70,70,70,70,70,-131,70,70,70,70,70,70,70,-125,-126,-129,-127,-128,-130,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'SCONST':([17,26,35,45,47,49,51,57,61,74,77,84,90,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[79,79,79,79,79,79,-131,79,79,79,79,79,79,79,-125,-126,-129,-127,-128,-130,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'END':([1,6,12,20,22,33,96,103,104,178,182,198,200,311,330,332,339,],[-7,-5,-6,-2,-4,-8,-3,-113,-18,-24,-9,-179,-112,329,338,340,341,]),'FI':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,89,103,127,133,145,163,164,177,184,185,196,200,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,236,237,239,260,264,275,291,293,294,297,317,320,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-115,-113,-162,-170,-106,-111,-105,-116,-135,238,-161,-112,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-134,-137,276,-75,294,-136,-57,-85,-81,320,-76,-82,]),'PROC':([46,],[131,]),'FALSE':([17,26,35,45,47,49,51,57,61,74,77,84,90,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[81,81,81,81,81,81,-131,81,81,81,81,81,81,81,-125,-126,-129,-127,-128,-130,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MOD':([2,15,28,31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-60,52,-56,-17,-160,-159,-58,-60,-72,-68,153,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,153,153,153,153,153,153,153,-101,153,153,-99,153,153,-100,153,153,-78,-56,-75,-57,-76,]),'ELSIF':([31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,225,260,262,266,291,294,317,318,320,333,],[-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,265,-78,-75,-84,296,-57,-81,-76,-86,-82,-87,]),'CHARS':([31,41,43,100,122,180,189,256,282,310,326,],[-17,-15,124,124,124,124,-16,124,124,124,124,]),'TIMES':([2,15,28,31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-60,53,-56,-17,-160,-159,-58,-60,-72,-68,156,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,156,156,156,156,156,156,156,-101,156,156,-99,156,156,-100,156,156,-78,-56,-75,-57,-76,]),'CONCAT':([2,15,28,31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-60,56,-56,-17,-160,-159,-58,-60,-72,-68,157,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,-78,-56,-75,-57,-76,]),'LPAREN':([8,10,13,14,17,19,25,26,27,28,29,31,32,35,40,45,47,49,51,57,61,74,77,78,84,90,108,111,112,113,114,115,117,118,119,120,121,131,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,247,248,250,261,263,265,272,273,277,278,279,281,283,284,296,298,302,327,],[45,-176,47,-171,84,-177,-175,84,-173,-42,-172,-17,-178,84,-174,84,84,84,-131,84,84,84,84,-42,84,84,-38,-35,-34,-36,188,-37,84,-32,-33,192,-42,199,-125,-126,-129,-127,-128,-130,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,281,-42,192,84,84,84,192,-42,84,-39,-40,84,84,310,84,192,84,84,]),'$end':([1,6,7,12,20,22,24,33,96,103,104,178,182,198,200,],[-7,-5,0,-6,-2,-4,-1,-8,-3,-113,-18,-24,-9,-179,-112,]),'LOWER':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[25,-7,-5,-6,25,25,-2,-4,25,25,-8,25,25,25,25,25,-131,25,25,25,25,25,25,-115,25,25,-3,-113,-18,25,-125,-126,-129,-127,-128,-130,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-116,-24,-9,25,25,25,25,25,25,-179,-112,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'INT':([31,41,43,100,122,180,189,195,230,256,268,282,283,310,326,327,],[-17,-15,113,113,113,113,-16,113,113,113,113,113,113,113,113,113,]),'LE':([31,34,36,54,59,60,62,63,65,66,67,69,70,72,73,75,78,79,80,81,82,83,127,133,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,248,260,291,317,],[-17,-160,-159,-58,-60,-72,-68,161,-109,-69,-108,-67,-73,-88,-66,-107,-56,-74,-65,-70,-110,-71,-162,-170,-106,-111,-105,-161,-169,-59,-97,-94,161,-95,161,161,-98,-101,161,-93,-99,161,161,-100,161,-96,-78,-56,-75,-57,-76,]),'UPPER':([0,1,6,12,17,18,20,22,24,26,33,35,45,46,47,49,51,57,61,68,74,77,84,89,90,91,96,103,104,117,135,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,177,178,182,184,187,188,192,195,197,198,200,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[40,-7,-5,-6,40,40,-2,-4,40,40,-8,40,40,40,40,40,-131,40,40,40,40,40,40,-115,40,40,-3,-113,-18,40,-125,-126,-129,-127,-128,-130,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-116,-24,-9,40,40,40,40,40,40,-179,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'COLON':([9,28,31,34,36,54,59,60,62,63,65,66,67,69,70,71,72,73,75,78,79,80,81,82,83,86,127,133,136,138,145,163,164,196,201,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,225,241,242,248,260,291,294,305,317,320,],[46,-114,-17,-160,-159,-58,-60,-72,-68,-79,-109,-69,-108,-67,-73,-80,-88,-66,-107,-56,-74,-65,-70,-110,-71,168,-162,-170,202,-61,-106,-111,-105,-161,-169,-59,-97,-94,-90,-95,-102,-91,-98,-101,-103,-93,-99,-104,-92,-100,-89,-96,261,-78,277,-61,-56,-75,-57,-81,-61,-76,-82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'procedure_statement':([0,24,285,311,312,315,330,331,332,339,],[1,1,1,1,1,1,1,1,1,1,]),'mode':([43,100,122,180,256,282,310,326,],[106,183,193,232,289,306,289,306,]),'return_action':([0,18,24,46,91,167,168,184,227,236,237,275,285,311,312,315,330,331,332,339,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'control_part':([18,],[85,]),'elsif_expression':([224,],[266,]),'mode_name':([43,100,122,180,256,282,310,326,],[109,109,109,109,109,109,109,109,]),'discrete_range_mode':([43,100,122,180,195,230,256,268,282,283,310,326,327,],[111,111,111,111,111,111,111,111,111,111,111,111,111,]),'program':([0,],[7,]),'binop':([17,26,35,45,47,49,57,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[63,63,63,63,63,63,63,63,63,63,63,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'label_id':([0,18,24,91,167,184,227,236,237,275,285,311,312,315,330,331,332,339,],[9,86,9,86,86,86,86,86,86,86,9,9,9,9,9,9,9,9,]),'array_primitive_value':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'parameter_list':([45,47,281,],[128,134,128,]),'iteration':([88,],[171,]),'newmode_statement':([0,24,285,311,312,315,330,331,332,339,],[12,12,12,12,12,12,12,12,12,12,]),'end_value':([270,299,301,322,],[300,321,323,334,]),'formal_parameter':([199,287,],[254,313,]),'builtin_name':([0,17,18,24,26,35,45,46,47,49,57,61,68,74,77,84,90,91,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,184,187,188,192,195,197,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'then_expression':([165,295,319,],[224,318,333,]),'discrete_expression':([229,302,],[269,324,]),'declaration':([30,181,],[98,233,]),'start_value':([229,],[270,]),'assigning_operator':([15,],[57,]),'exit_action':([0,18,24,46,91,167,168,184,227,236,237,275,285,311,312,315,330,331,332,339,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'result_action':([0,18,24,46,91,167,168,184,227,236,237,275,285,311,312,315,330,331,332,339,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'builtin_call':([0,17,18,24,26,35,45,46,47,49,57,61,68,74,77,84,90,91,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,184,187,188,192,195,197,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'for_control':([18,],[87,]),'boolean_expression':([35,77,90,265,296,],[101,165,175,295,319,]),'synonym_definition':([5,105,],[44,186,]),'character_mode':([43,100,122,180,195,230,256,268,282,283,310,326,327,],[112,112,112,112,112,112,112,112,112,112,112,112,112,]),'declaration_list':([30,],[99,]),'procedure_definition':([46,],[130,]),'action_statement':([0,18,24,91,167,184,227,236,237,275,285,311,312,315,330,331,332,339,],[33,89,33,177,89,89,177,177,89,177,33,33,33,33,33,33,33,33,]),'call_action':([0,17,18,24,26,35,45,46,47,49,57,61,68,74,77,84,90,91,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,184,187,188,192,195,197,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[2,59,2,2,59,59,59,2,59,59,59,59,59,59,59,59,59,2,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,2,2,2,59,59,59,59,59,59,59,59,2,59,59,2,2,59,59,59,2,59,59,59,2,59,59,2,2,2,59,2,2,2,2,]),'literal_range':([188,192,195,281,283,327,],[243,244,249,243,249,249,]),'step_value':([270,],[299,]),'discrete_mode':([43,100,122,180,195,230,256,268,282,283,310,326,327,],[120,120,120,120,250,272,120,298,120,250,120,120,250,]),'primitive_value':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'action_statement_list':([18,167,184,237,],[91,227,236,275,]),'assignment_action':([0,18,24,46,91,167,168,184,227,236,237,275,285,311,312,315,330,331,332,339,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'string_length':([194,],[246,]),'do_action':([0,18,24,46,91,167,168,184,227,236,237,275,285,311,312,315,330,331,332,339,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'composite_mode':([43,100,122,180,256,282,310,326,],[126,126,126,126,126,126,126,126,]),'mode_definition':([21,179,],[94,231,]),'while_control':([18,87,],[92,169,]),'element_mode':([282,326,],[307,335,]),'procedure_call':([0,17,18,24,26,35,45,46,47,49,57,61,68,74,77,84,90,91,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,184,187,188,192,195,197,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'if_action':([0,18,24,46,91,167,168,184,227,236,237,275,285,311,312,315,330,331,332,339,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'string_mode':([43,100,122,180,256,282,310,326,],[107,107,107,107,107,107,107,107,]),'synonym_list':([5,],[42,]),'value_array_slice':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'array_mode':([43,100,122,180,256,282,310,326,],[110,110,110,110,110,110,110,110,]),'synonym_statement':([0,24,285,311,312,315,330,331,332,339,],[6,6,6,6,6,6,6,6,6,6,]),'parenthesized_expression':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'else_expression':([224,266,],[264,297,]),'discrete_mode_name':([0,17,18,24,26,35,43,45,46,47,49,57,61,68,74,77,84,90,91,100,117,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,180,184,187,188,192,195,197,202,204,223,227,229,230,235,236,237,256,261,263,265,268,275,277,281,282,283,285,296,302,310,311,312,315,326,327,330,331,332,339,],[8,8,8,8,8,8,114,8,8,8,8,8,8,8,8,8,8,8,8,114,8,114,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,114,8,8,8,8,247,8,8,8,8,8,8,114,8,8,8,114,8,8,8,114,8,8,8,114,247,8,8,8,114,8,8,8,114,247,8,8,8,8,]),'referenced_location':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'loop_counter':([88,],[170,]),'boolean_mode':([43,100,122,180,195,230,256,268,282,283,310,326,327,],[119,119,119,119,119,119,119,119,119,119,119,119,119,]),'constant_expression':([117,187,],[191,240,]),'lower_bound':([49,188,192,195,281,283,327,],[136,241,241,241,241,241,241,]),'integer_mode':([43,100,122,180,195,230,256,268,282,283,310,326,327,],[118,118,118,118,118,118,118,118,118,118,118,118,118,]),'location':([0,17,18,24,26,35,45,46,47,49,57,61,68,74,77,84,90,91,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,184,187,188,192,195,197,202,204,223,227,229,235,236,237,261,263,265,275,277,281,283,285,296,302,311,312,315,327,330,331,332,339,],[15,67,15,15,67,67,67,15,67,67,67,67,163,67,67,67,67,15,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,15,15,15,67,67,67,67,67,67,67,67,15,67,67,15,15,67,67,67,15,67,67,67,15,67,67,15,15,15,67,15,15,15,15,]),'expression_list':([49,162,],[137,221,]),'step_enumeration':([88,],[173,]),'statement':([0,24,285,311,312,315,330,331,332,339,],[20,96,20,96,20,20,96,20,96,96,]),'result_spec':([253,288,],[286,314,]),'else_clause':([185,],[239,]),'conditional_expression':([17,26,35,45,47,49,57,77,84,90,117,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'operand':([17,26,35,45,47,49,57,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'declaration_statement':([0,24,285,311,312,315,330,331,332,339,],[22,22,22,22,22,22,22,22,22,22,]),'value_array_element':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'statement_list':([0,285,312,315,331,],[24,311,330,332,339,]),'expression':([17,26,35,45,47,49,57,77,84,90,117,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[76,97,102,129,129,138,144,102,166,102,190,222,190,242,242,242,252,257,259,262,271,274,292,293,102,257,305,242,102,271,242,]),'identifier':([0,5,16,17,18,21,24,26,30,35,43,45,46,47,49,57,61,68,74,77,84,88,90,91,100,105,116,117,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,179,180,181,184,187,188,192,195,197,199,202,204,223,227,229,230,235,236,237,256,261,263,265,268,275,277,281,282,283,285,287,296,302,310,311,312,315,326,327,330,331,332,339,],[28,41,58,78,28,41,28,78,41,78,121,78,78,78,78,78,78,78,78,78,78,172,78,28,121,41,189,78,121,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,28,78,41,121,41,28,78,78,78,248,78,41,78,78,78,28,78,273,78,28,28,121,78,78,78,273,28,78,78,121,248,28,41,78,78,121,28,28,28,121,248,28,28,28,28,]),'operand1':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[75,75,75,75,75,75,75,145,164,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'identifier_list':([5,21,30,105,179,181,199,287,],[43,95,100,43,95,100,256,256,]),'newmode_list':([21,],[93,]),'literal':([17,26,35,45,47,49,57,61,74,77,84,90,117,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,187,188,192,195,197,202,204,223,229,235,261,263,265,277,281,283,296,302,327,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'action':([0,18,24,46,91,167,168,184,227,236,237,275,285,311,312,315,330,331,332,339,],[37,37,37,132,37,37,132,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'index_mode_list':([283,],[308,]),'reference_mode':([43,100,122,180,256,282,310,326,],[123,123,123,123,123,123,123,123,]),'index_mode':([195,283,327,],[251,309,336,]),'formal_parameter_list':([199,],[255,]),'then_clause':([101,],[185,]),'upper_bound':([202,277,],[258,304,]),'parameter_spec':([256,310,],[290,328,]),'range_enumeration':([88,],[174,]),'initialization':([183,],[234,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
