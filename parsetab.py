
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '840FC888D747B21E9DCD3CAD72D04686'
    
_lr_action_items = {'CHAR':([8,80,82,103,150,179,215,217,218,243,258,296,297,306,333,334,],[-17,-15,143,143,143,143,143,143,-16,143,143,143,143,143,143,143,]),'BOOL':([8,80,82,103,150,179,215,217,218,243,258,296,297,306,333,334,],[-17,-15,144,144,144,144,144,144,-16,144,144,144,144,144,144,144,]),'LT':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,115,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,115,-96,-95,115,115,-93,115,-97,-99,-98,-101,-100,115,115,115,-94,-169,-59,-161,-75,-56,-57,-76,]),'RBRACKET':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,92,108,110,111,131,143,144,153,154,156,158,159,170,171,181,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,259,261,265,269,270,273,274,275,284,289,300,301,303,311,314,322,323,325,339,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-58,-105,-111,-106,-170,-38,-37,-35,-34,-36,-32,-33,231,-63,-162,-78,249,-63,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-54,296,-53,-48,302,-64,303,-62,-81,314,-40,-39,-57,-82,-76,334,-51,-43,-52,]),'LPAREN':([2,3,6,8,9,14,15,18,25,27,28,31,35,37,40,45,51,53,55,68,71,78,90,95,96,100,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,143,144,148,151,153,154,155,156,158,159,167,168,169,173,174,175,185,191,211,214,217,220,222,223,230,232,237,246,247,250,256,257,262,264,265,279,286,291,295,297,298,299,300,301,333,],[-175,-171,-174,-17,45,71,-176,-177,45,45,-173,100,-178,-42,-172,45,45,45,45,-42,45,45,45,45,-131,45,188,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-38,-37,-42,222,-35,-34,223,-36,-32,-33,-130,-127,-125,-129,-128,-126,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-42,222,298,-42,222,306,45,45,222,45,45,45,-40,-39,45,]),'TRUE':([9,25,27,45,51,53,55,71,78,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,167,168,169,173,174,175,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[46,46,46,46,46,46,46,46,46,46,46,-131,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-130,-127,-125,-129,-128,-126,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'LOWER':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[2,2,2,-8,-4,2,2,2,-5,-6,-2,-7,2,-3,2,2,2,2,2,-113,2,-115,2,2,2,2,-131,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-116,-9,2,-130,-127,-125,-129,-128,-126,-24,-18,2,-112,-179,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'NUM':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[3,3,3,-8,-4,3,3,3,-5,-6,-2,-7,3,-3,3,3,3,3,3,-113,3,-115,3,3,3,3,-131,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-116,-9,3,-130,-127,-125,-129,-128,-126,-24,-18,3,-112,-179,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PLUS':([8,17,22,23,29,37,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-60,-160,-159,89,-56,-107,-71,-66,-72,-65,-60,-70,120,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,120,120,120,120,120,120,120,-97,-99,-98,-101,-100,120,120,120,120,-169,-59,-161,-75,-56,-57,-76,]),'FI':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,70,74,92,108,110,111,131,141,165,166,181,186,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,226,227,229,231,235,244,249,272,284,285,288,303,311,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-113,-115,-58,-105,-111,-106,-170,-116,228,-135,-162,-112,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,271,-137,-134,-59,-161,284,-75,-136,-81,311,-85,-57,-82,-76,]),'IN':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,136,139,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,113,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,215,-151,-162,-78,-103,-96,-95,-89,113,-93,-92,-97,-99,-98,-101,-100,113,-91,-90,-94,-169,258,-59,-161,-75,-56,-57,-76,]),'MOD':([8,17,22,23,29,37,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-60,-160,-159,91,-56,-107,-71,-66,-72,-65,-60,-70,123,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,123,123,123,123,123,123,123,123,-99,123,-101,-100,123,123,123,123,-169,-59,-161,-75,-56,-57,-76,]),'EXIT':([0,4,10,13,16,32,33,36,39,41,42,70,74,79,132,134,141,163,166,177,182,186,187,212,227,229,272,277,304,305,307,327,329,330,338,],[7,7,-8,-4,7,-5,-6,-2,-7,7,-3,-113,-115,7,7,7,-116,-9,7,-24,-18,-112,-179,7,7,7,7,7,7,7,7,7,7,7,7,]),'ID':([0,4,7,8,9,10,13,16,24,25,27,30,32,33,36,38,39,41,42,45,51,53,54,55,70,71,74,77,78,79,80,82,90,95,96,100,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,146,150,163,164,166,167,168,169,173,174,175,177,178,179,182,183,185,186,187,188,191,211,212,214,215,217,218,220,222,223,227,229,230,232,237,243,246,247,250,258,272,277,281,286,291,296,297,298,299,304,305,306,307,327,329,330,333,334,338,],[8,8,8,-17,8,-8,-4,8,8,8,8,8,-5,-6,-2,8,-7,8,-3,8,8,8,8,8,-113,8,-115,8,8,8,-15,8,8,8,-131,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-116,8,8,-9,8,8,-130,-127,-125,-129,-128,-126,-24,8,8,-18,8,8,-112,-179,8,8,8,8,8,8,8,-16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([4,10,12,13,32,33,36,39,42,70,163,177,182,186,187,],[-1,-8,0,-4,-5,-6,-2,-7,-3,-113,-9,-24,-18,-112,-179,]),'RETURN':([0,4,10,13,16,32,33,36,39,41,42,70,74,79,132,134,141,163,166,177,182,186,187,212,227,229,272,277,304,305,307,327,329,330,338,],[9,9,-8,-4,9,-5,-6,-2,-7,9,-3,-113,-115,9,9,9,-116,-9,9,-24,-18,-112,-179,9,9,9,9,9,9,9,9,9,9,9,9,]),'REF':([8,80,82,103,150,179,218,243,296,306,334,],[-17,-15,150,150,150,150,-16,150,150,150,150,]),'MINUS':([8,9,17,22,23,25,27,29,37,44,45,46,47,48,49,50,52,53,58,59,60,61,62,63,64,65,66,67,68,71,78,90,92,95,96,100,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,167,168,169,173,174,175,181,185,189,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,214,217,220,222,223,230,231,232,235,237,246,247,249,250,264,286,291,297,298,299,303,314,333,],[-17,51,-60,-160,-159,51,51,94,-56,-107,51,-71,-66,-72,-65,-60,-70,51,122,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,51,51,51,-58,51,-131,51,-105,-111,-106,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-170,-130,-127,-125,-129,-128,-126,-162,51,-78,51,122,122,122,122,122,122,122,-97,-99,-98,-101,-100,122,122,122,122,-169,51,51,51,51,51,51,51,-59,51,-161,51,51,51,-75,51,-56,51,51,51,51,51,-57,-76,51,]),'UPPER':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[6,6,6,-8,-4,6,6,6,-5,-6,-2,-7,6,-3,6,6,6,6,6,-113,6,-115,6,6,6,6,-131,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-116,-9,6,-130,-127,-125,-129,-128,-126,-24,-18,6,-112,-179,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'RESULT':([0,4,10,13,16,32,33,36,39,41,42,70,74,79,132,134,141,163,166,177,182,186,187,212,227,229,272,277,304,305,307,327,329,330,338,],[25,25,-8,-4,25,-5,-6,-2,-7,25,-3,-113,-115,25,25,25,-116,-9,25,-24,-18,-112,-179,25,25,25,25,25,25,25,25,25,25,25,25,]),'ARRAY':([8,80,82,103,150,179,218,243,296,306,334,],[-17,-15,145,145,145,145,-16,145,145,145,145,]),'CCONST':([9,25,27,45,51,53,55,71,78,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,167,168,169,173,174,175,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[48,48,48,48,48,48,48,48,48,48,48,-131,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-130,-127,-125,-129,-128,-126,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'DO':([0,4,10,13,16,32,33,36,39,41,42,70,74,79,132,134,141,163,166,177,182,186,187,212,227,229,272,277,304,305,307,327,329,330,338,],[16,16,-8,-4,16,-5,-6,-2,-7,16,-3,-113,-115,16,16,16,-116,-9,16,-24,-18,-112,-179,16,16,16,16,16,16,16,16,16,16,16,16,]),'FOR':([16,],[77,]),'GT':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,118,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,118,-96,-95,118,118,-93,118,-97,-99,-98,-101,-100,118,118,118,-94,-169,-59,-161,-75,-56,-57,-76,]),'READ':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[18,18,18,-8,-4,18,18,18,-5,-6,-2,-7,18,-3,18,18,18,18,18,-113,18,-115,18,18,18,18,-131,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-116,-9,18,-130,-127,-125,-129,-128,-126,-24,-18,18,-112,-179,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'DOWN':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,92,108,110,111,131,136,139,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,253,254,255,284,294,303,311,314,316,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-58,-105,-111,-106,-170,216,-151,-162,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-152,-155,293,-81,319,-57,-82,-76,-153,]),'PRINT':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[35,35,35,-8,-4,35,35,35,-5,-6,-2,-7,35,-3,35,35,35,35,35,-113,35,-115,35,35,35,35,-131,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-116,-9,35,-130,-127,-125,-129,-128,-126,-24,-18,35,-112,-179,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'END':([10,13,32,33,36,39,42,70,163,177,182,186,187,304,327,329,338,],[-8,-4,-5,-6,-2,-7,-3,-113,-9,-24,-18,-112,-179,326,335,337,341,]),'FALSE':([9,25,27,45,51,53,55,71,78,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,167,168,169,173,174,175,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[52,52,52,52,52,52,52,52,52,52,52,-131,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-130,-127,-125,-129,-128,-126,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'ELSIF':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,92,108,110,111,131,181,189,190,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,245,248,249,284,303,311,313,314,331,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-58,-105,-111,-106,-170,-162,-78,246,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,286,-84,-75,-81,-57,-82,-86,-76,-87,]),'IF':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,53,70,71,74,78,79,90,95,96,100,112,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[27,27,53,-8,-4,27,53,53,-5,-6,-2,-7,27,-3,53,53,-113,53,-115,53,27,53,53,-131,53,53,27,27,-116,-9,27,-130,-127,-125,-129,-128,-126,-24,-18,53,-112,-179,53,53,27,53,53,53,53,53,27,27,53,53,53,53,53,53,27,27,53,53,53,53,53,27,27,27,27,27,27,53,27,]),'ARROW':([8,9,17,22,23,25,27,29,37,45,50,51,53,55,61,68,71,78,90,92,95,96,100,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,167,168,169,173,174,175,181,185,191,210,211,214,217,220,222,223,230,231,232,235,237,246,247,250,264,286,291,297,298,299,303,333,],[-17,54,-60,-160,-159,54,54,92,-56,54,-60,54,54,54,92,-56,54,54,54,-58,54,-131,54,92,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-170,-130,-127,-125,-129,-128,-126,-162,54,54,-169,54,54,54,54,54,54,54,-59,54,-161,54,54,54,54,-56,54,54,54,54,54,-57,54,]),'OR':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,127,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,127,-96,-95,-89,127,-93,-92,-97,-99,-98,-101,-100,127,-91,-90,-94,-169,-59,-161,-75,-56,-57,-76,]),'CONCAT':([8,17,22,23,29,37,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-60,-160,-159,87,-56,-107,-71,-66,-72,-65,-60,-70,125,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-56,-57,-76,]),'LENGTH':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[15,15,15,-8,-4,15,15,15,-5,-6,-2,-7,15,-3,15,15,15,15,15,-113,15,-115,15,15,15,15,-131,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-116,-9,15,-130,-127,-125,-129,-128,-126,-24,-18,15,-112,-179,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DCL':([0,4,10,13,32,33,36,39,42,70,163,177,182,186,187,277,304,305,307,327,329,330,338,],[24,24,-8,-4,-5,-6,-2,-7,-3,-113,-9,-24,-18,-112,-179,24,24,24,24,24,24,24,24,]),'TIMES':([8,17,22,23,29,37,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-60,-160,-159,88,-56,-107,-71,-66,-72,-65,-60,-70,121,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,121,121,121,121,121,121,121,121,-99,121,-101,-100,121,121,121,121,-169,-59,-161,-75,-56,-57,-76,]),'BY':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,253,254,255,284,303,311,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-58,-105,-111,-106,-170,-162,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-152,-155,292,-81,-57,-82,-76,]),'COMMA':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,80,81,82,83,92,97,98,99,101,102,103,108,110,111,129,130,131,143,144,147,148,149,151,152,153,154,156,158,159,160,161,162,170,171,180,181,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,218,219,221,225,231,233,234,235,236,238,239,241,242,243,249,251,259,261,265,266,273,275,276,282,283,284,300,301,302,303,309,310,311,314,320,321,322,323,324,325,339,340,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-15,-10,146,164,-58,-25,178,146,183,-19,146,-105,-111,-106,211,-163,-170,-38,-37,-28,-41,-13,-29,-30,-35,-34,-36,-32,-33,-31,-45,-46,230,-63,211,-162,-78,230,-63,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-16,-12,-44,-11,-59,-26,-27,-161,-20,-22,-23,281,-184,146,-75,-164,-54,297,-53,-14,-64,-62,-21,-186,-189,-81,-40,-39,-47,-57,-185,-188,-82,-76,-55,-49,333,-51,-163,-43,-52,-50,]),'TO':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,253,254,255,284,293,294,303,311,314,316,319,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-58,-105,-111,-106,-170,-162,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-152,-155,291,-81,291,291,-57,-82,-76,-153,291,]),'COLON':([1,8,22,23,37,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,72,92,108,110,111,131,171,172,181,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,260,263,264,284,303,311,314,324,],[41,-17,-160,-159,-114,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,132,-58,-105,-111,-106,-170,-61,232,-162,-78,250,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-61,299,-56,-81,-57,-82,-76,-61,]),'THEN':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,85,86,92,108,109,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,284,287,303,311,312,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,166,-83,-58,-105,191,-111,-106,-170,-162,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-81,191,-57,-82,191,-76,]),'LBRACKET':([8,17,22,23,29,37,46,47,48,49,50,52,56,59,60,61,62,63,65,67,68,92,110,131,145,157,181,189,210,231,235,249,264,303,314,],[-17,-60,-160,-159,90,-56,-71,-66,-72,-65,-60,-70,112,-69,-68,90,-73,-77,-74,-67,-56,-58,90,-170,217,224,-162,-78,-169,-59,-161,-75,-56,-57,-76,]),'DIVIDE':([8,17,22,23,29,37,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-60,-160,-159,93,-56,-107,-71,-66,-72,-65,-60,-70,124,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,124,124,124,124,124,124,124,124,-99,124,-101,-100,124,124,124,124,-169,-59,-161,-75,-56,-57,-76,]),'EQ':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,126,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,126,-96,-95,126,126,-93,-92,-97,-99,-98,-101,-100,126,-91,126,-94,-169,-59,-161,-75,-56,-57,-76,]),'ICONST':([9,25,27,45,51,53,55,71,78,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,167,168,169,173,174,175,185,191,211,214,217,220,222,223,224,230,232,237,246,247,250,286,291,292,297,298,299,333,],[59,59,59,59,59,59,59,59,59,59,59,-131,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-130,-127,-125,-129,-128,-126,59,59,59,59,59,59,59,59,269,59,59,59,59,59,59,59,59,316,59,59,59,59,]),'SEMI':([5,8,9,11,17,19,20,21,22,23,26,34,43,44,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,73,75,76,81,83,84,86,92,97,98,101,102,104,105,108,110,111,131,133,135,137,138,140,142,143,144,147,148,149,151,152,153,154,156,158,159,160,161,162,176,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,219,221,225,228,231,233,234,235,236,238,239,240,249,252,254,257,266,271,276,278,280,284,290,295,300,301,302,303,308,311,314,315,317,318,320,321,326,332,335,336,337,340,341,],[-118,-17,-167,70,-120,-123,-117,-119,-160,-159,-122,-121,-165,-107,-71,-66,-72,-65,-60,-70,-166,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-142,134,-143,-10,163,-168,-83,-58,-25,177,182,-19,186,187,-105,-111,-106,-170,-141,-144,-146,-145,-158,-140,-38,-37,-28,-41,-13,-29,-30,-35,-34,-36,-32,-33,-31,-45,-46,-124,-162,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-139,-12,-44,-11,-133,-59,-26,-27,-161,-20,-22,-23,277,-75,-138,-155,-157,-14,-132,-21,305,307,-81,-150,-156,-40,-39,-47,-57,330,-82,-76,-154,-148,-149,-55,-49,-183,-147,-182,-187,-181,-50,-180,]),'SUCC':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[28,28,28,-8,-4,28,28,28,-5,-6,-2,-7,28,-3,28,28,28,28,28,-113,28,-115,28,28,28,28,-131,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-116,-9,28,-130,-127,-125,-129,-128,-126,-24,-18,28,-112,-179,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'PRED':([0,4,9,10,13,16,25,27,32,33,36,39,41,42,45,51,53,54,55,70,71,74,78,79,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,141,163,166,167,168,169,173,174,175,177,182,185,186,187,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[40,40,40,-8,-4,40,40,40,-5,-6,-2,-7,40,-3,40,40,40,40,40,-113,40,-115,40,40,40,40,-131,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-116,-9,40,-130,-127,-125,-129,-128,-126,-24,-18,40,-112,-179,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ELSE':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,70,74,92,108,110,111,131,141,165,166,181,186,189,190,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,229,231,235,245,248,249,284,303,311,313,314,331,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,-113,-115,-58,-105,-111,-106,-170,-116,227,-135,-162,-112,-78,247,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-134,-59,-161,247,-84,-75,-81,-57,-82,-86,-76,-87,]),'RETURNS':([240,280,],[279,279,]),'NULL':([9,25,27,45,51,53,55,71,78,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,167,168,169,173,174,175,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[62,62,62,62,62,62,62,62,62,62,62,-131,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-130,-127,-125,-129,-128,-126,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'GE':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,128,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,128,-96,-95,128,128,-93,128,-97,-99,-98,-101,-100,128,128,128,-94,-169,-59,-161,-75,-56,-57,-76,]),'TYPE':([0,4,10,13,32,33,36,39,42,70,163,177,182,186,187,277,304,305,307,327,329,330,338,],[30,30,-8,-4,-5,-6,-2,-7,-3,-113,-9,-24,-18,-112,-179,30,30,30,30,30,30,30,30,]),'LE':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,114,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,114,-96,-95,114,114,-93,114,-97,-99,-98,-101,-100,114,114,114,-94,-169,-59,-161,-75,-56,-57,-76,]),'RPAREN':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,71,92,100,107,108,110,111,129,130,131,143,144,147,148,151,152,153,154,156,158,159,160,161,162,180,181,188,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,221,231,235,241,242,249,251,267,268,275,282,283,284,298,300,301,302,303,309,310,311,314,320,321,324,325,328,340,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,131,-58,181,189,-105,-111,-106,210,-163,-170,-38,-37,-28,-41,-29,-30,-35,-34,-36,-32,-33,-31,-45,-46,235,-162,240,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-44,-59,-161,280,-184,-75,-164,300,301,-62,-186,-189,-81,181,-40,-39,-47,-57,-185,-188,-82,-76,-55,-49,-163,-43,336,-50,]),'AND':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,116,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,116,-96,-95,-89,116,-93,-92,-97,-99,-98,-101,-100,116,-91,116,-94,-169,-59,-161,-75,-56,-57,-76,]),'LOC':([8,143,144,147,148,151,152,153,154,156,158,159,160,161,162,221,283,300,301,302,320,321,340,],[-17,-38,-37,-28,-41,-29,-30,-35,-34,-36,-32,-33,-31,-45,-46,-44,310,-40,-39,-47,-55,-49,-50,]),'NOT':([8,9,22,23,25,27,44,45,46,47,48,49,50,52,53,58,59,60,61,62,63,64,65,66,67,68,71,78,90,92,95,96,100,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,167,168,169,173,174,175,181,185,189,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,214,217,220,222,223,230,231,232,235,237,246,247,249,250,264,286,291,297,298,299,303,314,333,],[-17,55,-160,-159,55,55,-107,55,-71,-66,-72,-65,-60,-70,55,117,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,55,55,55,-58,55,-131,55,-105,-111,-106,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-170,-130,-127,-125,-129,-128,-126,-162,55,-78,55,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,117,-91,-90,-94,-169,55,55,55,55,55,55,55,-59,55,-161,55,55,55,-75,55,-56,55,55,55,55,55,-57,-76,55,]),'SCONST':([9,25,27,45,51,53,55,71,78,90,95,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,167,168,169,173,174,175,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[65,65,65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-130,-127,-125,-129,-128,-126,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'NEQ':([8,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,92,108,110,111,131,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,264,303,314,],[-17,-160,-159,-107,-71,-66,-72,-65,-60,-70,119,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-58,-105,-111,-106,-170,-162,-78,119,-96,-95,119,119,-93,-92,-97,-99,-98,-101,-100,119,-91,119,-94,-169,-59,-161,-75,-56,-57,-76,]),'INT':([8,80,82,103,150,179,215,217,218,243,258,296,297,306,333,334,],[-17,-15,156,156,156,156,156,156,-16,156,156,156,156,156,156,156,]),'CHARS':([8,80,82,103,150,179,218,243,296,306,334,],[-17,-15,157,157,157,157,-16,157,157,157,157,]),'OD':([70,74,79,134,141,186,212,],[-113,-115,142,213,-116,-112,252,]),'PROC':([41,],[106,]),'SYN':([0,4,10,13,32,33,36,39,42,70,163,177,182,186,187,277,304,305,307,327,329,330,338,],[38,38,-8,-4,-5,-6,-2,-7,-3,-113,-9,-24,-18,-112,-179,38,38,38,38,38,38,38,38,]),'WHILE':([8,16,22,23,44,46,47,48,49,50,52,58,59,60,61,62,63,64,65,66,67,68,69,73,92,108,110,111,131,135,137,138,143,144,153,154,156,158,159,181,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,235,249,254,257,284,290,295,300,301,303,311,314,315,317,318,332,],[-17,78,-160,-159,-107,-71,-66,-72,-65,-60,-70,-79,-69,-68,-108,-73,-110,-109,-74,-88,-67,-56,-80,78,-58,-105,-111,-106,-170,-144,-146,-145,-38,-37,-35,-34,-36,-32,-33,-162,-78,-103,-96,-95,-89,-102,-93,-92,-97,-99,-98,-101,-100,-104,-91,-90,-94,-169,-59,-161,-75,-155,-157,-81,-150,-156,-40,-39,-57,-82,-76,-154,-148,-149,-147,]),'ASSIGN':([8,17,22,23,29,37,68,80,87,88,89,91,92,93,94,99,103,131,136,139,143,144,147,148,149,151,152,153,154,156,158,159,160,161,162,181,184,210,218,221,231,235,300,301,302,303,320,321,340,],[-17,-60,-160,-159,96,-56,-56,-15,167,168,169,173,-58,174,175,179,185,-170,214,-151,-38,-37,-28,-41,220,-29,-30,-35,-34,-36,-32,-33,-31,-45,-46,-162,237,-169,-16,-44,-59,-161,-40,-39,-47,-57,-55,-49,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'else_expression':([190,245,],[244,285,]),'then_clause':([85,],[165,]),'label_id':([0,4,16,79,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[1,1,72,72,72,72,72,72,72,72,1,1,1,1,1,1,1,1,]),'call_action':([0,4,9,16,25,27,41,45,51,53,54,55,71,78,79,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,166,185,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[17,17,50,17,50,50,17,50,50,50,50,50,50,50,17,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,17,17,17,50,50,50,17,50,50,50,50,50,17,17,50,50,50,50,50,50,17,17,50,50,50,50,50,17,17,17,17,17,17,50,17,]),'parameter_spec':([243,306,],[282,328,]),'literal_range':([217,222,223,297,298,333,],[259,267,268,259,268,259,]),'value_array_element':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'discrete_range_mode':([82,103,150,179,215,217,243,258,296,297,306,333,334,],[153,153,153,153,153,153,153,153,153,153,153,153,153,]),'action':([0,4,16,41,79,132,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[11,11,11,104,11,104,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'assigning_operator':([29,],[95,]),'reference_mode':([82,103,150,179,243,296,306,334,],[152,152,152,152,152,152,152,152,]),'declaration_statement':([0,4,277,304,305,307,327,329,330,338,],[13,13,13,13,13,13,13,13,13,13,]),'array_primitive_value':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'newmode_list':([30,],[98,]),'builtin_name':([0,4,9,16,25,27,41,45,51,53,54,55,71,78,79,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,166,185,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'end_value':([255,293,294,319,],[290,317,318,332,]),'formal_parameter':([188,281,],[242,309,]),'result_action':([0,4,16,41,79,132,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'control_part':([16,],[75,]),'boolean_mode':([82,103,150,179,215,217,243,258,296,297,306,333,334,],[159,159,159,159,159,159,159,159,159,159,159,159,159,]),'identifier_list':([24,30,38,164,178,183,188,281,],[82,99,103,82,99,103,243,243,]),'builtin_call':([0,4,9,16,25,27,41,45,51,53,54,55,71,78,79,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,166,185,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'procedure_call':([0,4,9,16,25,27,41,45,51,53,54,55,71,78,79,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,166,185,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'string_length':([224,],[270,]),'composite_mode':([82,103,150,179,243,296,306,334,],[160,160,160,160,160,160,160,160,]),'binop':([9,25,27,45,53,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[58,58,58,58,58,58,58,58,58,58,58,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'then_expression':([109,287,312,],[190,313,331,]),'parameter_list':([71,100,298,],[129,180,180,]),'iteration':([77,],[135,]),'character_mode':([82,103,150,179,215,217,243,258,296,297,306,333,334,],[154,154,154,154,154,154,154,154,154,154,154,154,154,]),'element_mode':([296,334,],[321,340,]),'discrete_mode_name':([0,4,9,16,25,27,41,45,51,53,54,55,71,78,79,82,90,95,100,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,150,166,179,185,191,211,212,214,215,217,220,222,223,227,229,230,232,237,243,246,247,250,258,272,277,286,291,296,297,298,299,304,305,306,307,327,329,330,333,334,338,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,155,31,31,31,155,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,155,31,155,31,31,31,31,31,155,262,31,31,31,31,31,31,31,31,155,31,31,31,155,31,31,31,31,155,262,31,31,31,31,155,31,31,31,31,262,155,31,]),'loop_counter':([77,],[136,]),'newmode_statement':([0,4,277,304,305,307,327,329,330,338,],[33,33,33,33,33,33,33,33,33,33,]),'value_array_slice':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'integer_mode':([82,103,150,179,215,217,243,258,296,297,306,333,334,],[158,158,158,158,158,158,158,158,158,158,158,158,158,]),'synonym_statement':([0,4,277,304,305,307,327,329,330,338,],[32,32,32,32,32,32,32,32,32,32,]),'procedure_statement':([0,4,277,304,305,307,327,329,330,338,],[39,39,39,39,39,39,39,39,39,39,]),'string_mode':([82,103,150,179,243,296,306,334,],[161,161,161,161,161,161,161,161,]),'declaration_list':([24,],[83,]),'conditional_expression':([9,25,27,45,53,71,78,90,95,100,112,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'action_statement_list':([16,134,166,227,],[79,212,229,272,]),'constant_expression':([185,237,],[238,276,]),'index_mode_list':([297,],[322,]),'mode_name':([82,103,150,179,243,296,306,334,],[147,147,147,147,147,147,147,147,]),'statement_list':([0,277,305,307,330,],[4,304,327,329,338,]),'do_action':([0,4,16,41,79,132,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'step_value':([255,],[294,]),'mode_definition':([30,178,],[97,233,]),'declaration':([24,164,],[81,225,]),'program':([0,],[12,]),'expression_list':([90,112,],[170,192,]),'for_control':([16,],[73,]),'boolean_expression':([27,53,78,246,286,],[85,109,140,287,312,]),'action_statement':([0,4,16,79,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[10,10,74,141,74,74,141,74,141,141,10,10,10,10,10,10,10,10,]),'formal_parameter_list':([188,],[241,]),'literal':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'step_enumeration':([77,],[138,]),'assignment_action':([0,4,16,41,79,132,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'upper_bound':([232,299,],[274,325,]),'if_action':([0,4,16,41,79,132,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'parenthesized_expression':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'discrete_expression':([214,291,],[253,315,]),'synonym_definition':([38,183,],[102,236,]),'identifier':([0,4,7,9,16,24,25,27,30,38,41,45,51,53,54,55,71,77,78,79,82,90,95,100,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,146,150,164,166,178,179,183,185,188,191,211,212,214,215,217,220,222,223,227,229,230,232,237,243,246,247,250,258,272,277,281,286,291,296,297,298,299,304,305,306,307,327,329,330,333,334,338,],[37,37,43,68,37,80,68,68,80,80,68,68,68,68,68,68,68,139,68,37,148,68,68,68,148,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,37,218,148,80,37,80,148,80,68,80,68,68,37,68,256,264,68,68,68,37,37,68,68,68,148,68,68,68,256,37,37,80,68,68,148,264,68,68,37,37,148,37,37,37,37,264,148,37,]),'return_action':([0,4,16,41,79,132,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expression':([9,25,27,45,53,71,78,90,95,100,112,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[57,84,86,107,86,130,86,171,176,130,193,239,248,251,254,260,266,260,260,273,275,239,86,288,289,86,254,260,324,275,260,]),'initialization':([149,],[219,]),'mode':([82,103,150,179,243,296,306,334,],[149,184,221,234,283,320,283,320,]),'index_mode':([217,297,333,],[261,323,339,]),'while_control':([16,73,],[76,133,]),'start_value':([214,],[255,]),'location':([0,4,9,16,25,27,41,45,51,53,54,55,71,78,79,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,166,185,191,211,212,214,217,220,222,223,227,229,230,232,237,246,247,250,272,277,286,291,297,298,299,304,305,307,327,329,330,333,338,],[29,29,61,29,61,61,29,61,61,61,110,61,61,61,29,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,29,29,29,61,61,61,29,61,61,61,61,61,29,29,61,61,61,61,61,61,29,29,61,61,61,61,61,29,29,29,29,29,29,61,29,]),'procedure_definition':([41,],[105,]),'discrete_mode':([82,103,150,179,215,217,243,258,296,297,306,333,334,],[151,151,151,151,257,265,151,295,151,265,151,265,151,]),'result_spec':([240,280,],[278,308,]),'referenced_location':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'operand1':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[44,44,44,44,108,44,111,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'lower_bound':([90,217,222,223,297,298,333,],[172,263,263,263,263,263,263,]),'primitive_value':([9,25,27,45,51,53,55,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'operand':([9,25,27,45,53,71,78,90,95,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,185,191,211,214,217,220,222,223,230,232,237,246,247,250,286,291,297,298,299,333,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'exit_action':([0,4,16,41,79,132,134,166,212,227,229,272,277,304,305,307,327,329,330,338,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'elsif_expression':([190,],[245,]),'statement':([0,4,277,304,305,307,327,329,330,338,],[36,42,36,42,36,36,42,42,36,42,]),'synonym_list':([38,],[101,]),'range_enumeration':([77,],[137,]),'array_mode':([82,103,150,179,243,296,306,334,],[162,162,162,162,162,162,162,162,]),'else_clause':([165,],[226,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
