
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2ED78B5523C5E4DAD271799C8FF2D4E3'
    
_lr_action_items = {'PROC':([41,],[104,]),'COLON':([2,18,29,33,38,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,75,95,147,148,150,175,177,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,234,238,239,244,247,250,262,295,303,316,317,320,],[41,-159,-17,-160,-114,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,155,-58,-106,-111,-105,232,-61,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,261,-59,-169,-161,284,-61,-56,-75,-81,-57,-61,-82,-76,]),'RPAREN':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,95,102,103,107,108,109,110,112,113,114,115,117,119,120,121,122,124,130,147,148,150,181,182,183,184,185,186,189,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,241,243,251,252,262,273,276,280,281,287,288,289,290,295,303,307,308,311,314,315,316,317,320,326,340,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-58,182,184,-38,-32,-34,-28,-33,-36,-45,-30,-37,-29,-46,-35,-31,-41,200,-106,-111,-105,-163,-170,238,-162,239,240,-44,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-184,283,288,289,-75,-62,-164,-186,-189,184,-40,-39,-47,-81,-57,-188,-185,-43,-49,-55,-163,-82,-76,335,-50,]),'RESULT':([0,1,4,7,10,25,26,28,39,41,77,82,86,97,128,154,155,162,164,166,180,187,188,227,228,230,272,279,305,306,310,327,329,330,337,],[6,-8,-2,-4,6,-5,6,-7,-6,6,-115,6,-113,-3,-9,-18,6,6,-116,6,-24,-179,-112,6,6,6,6,6,6,6,6,6,6,6,6,]),'CONCAT':([16,18,20,29,33,38,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-60,-159,90,-17,-160,-56,-107,-65,-66,-60,-72,-70,-108,-71,-69,139,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'SYN':([0,1,4,7,25,26,28,39,86,97,128,154,180,187,188,279,305,306,310,327,329,330,337,],[9,-8,-2,-4,-5,9,-7,-6,-113,-3,-9,-18,-24,-179,-112,9,9,9,9,9,9,9,9,]),'ELSE':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,77,86,95,147,148,150,164,166,167,182,184,188,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,228,234,238,239,256,257,262,295,303,317,319,320,333,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-115,-113,-58,-106,-111,-105,-116,-135,230,-170,-162,-112,258,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-134,-59,-169,-161,-84,258,-75,-81,-57,-82,-86,-76,-87,]),'DCL':([0,1,4,7,25,26,28,39,86,97,128,154,180,187,188,279,305,306,310,327,329,330,337,],[5,-8,-2,-4,-5,5,-7,-6,-113,-3,-9,-18,-24,-179,-112,5,5,5,5,5,5,5,5,]),'CHARS':([29,42,43,72,111,178,190,242,286,304,332,],[-17,125,-15,125,125,125,-16,125,125,125,125,]),'LBRACKET':([16,18,20,29,33,38,48,51,52,53,54,55,56,57,61,63,64,65,66,67,69,95,118,125,148,182,184,200,234,238,239,250,262,303,320,],[-60,-159,96,-17,-160,-56,-65,-66,-60,-72,-70,96,-71,-69,-67,-77,-73,-68,-74,149,-56,-58,191,194,96,-170,-162,-78,-59,-169,-161,-56,-75,-57,-76,]),'UPPER':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[19,-8,-2,19,-4,19,19,19,-5,19,-7,-6,19,19,19,19,19,19,-115,19,19,-113,19,-131,19,-3,19,19,-9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-18,19,19,-116,19,-125,-128,-130,-129,-127,-126,-24,-179,-112,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'DO':([0,1,4,7,10,25,26,28,39,41,77,82,86,97,128,154,155,162,164,166,180,187,188,227,228,230,272,279,305,306,310,327,329,330,337,],[10,-8,-2,-4,10,-5,10,-7,-6,10,-115,10,-113,-3,-9,-18,10,10,-116,10,-24,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,]),'FALSE':([6,12,14,49,50,59,70,81,89,94,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,168,169,171,172,173,174,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[54,54,54,54,54,54,54,54,54,-131,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-125,-128,-130,-129,-127,-126,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'THEN':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,84,85,95,129,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,262,294,295,303,317,318,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,166,-83,-58,198,-106,-111,-105,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-75,198,-81,-57,-82,198,-76,]),'RBRACKET':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,95,107,108,109,112,113,117,121,147,148,150,176,177,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,234,238,239,245,246,248,253,254,262,273,274,275,288,289,295,296,303,311,312,313,317,320,339,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-58,-38,-32,-34,-33,-36,-37,-35,-106,-111,-105,234,-63,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-63,262,-59,-169,-161,-54,286,-53,290,-48,-75,-62,303,-64,-40,-39,-81,320,-57,-43,-51,332,-82,-76,-52,]),'BOOL':([29,42,43,72,111,178,190,191,225,242,267,285,286,304,331,332,],[-17,117,-15,117,117,117,-16,117,117,117,117,117,117,117,117,117,]),'SUCC':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[13,-8,-2,13,-4,13,13,13,-5,13,-7,-6,13,13,13,13,13,13,-115,13,13,-113,13,-131,13,-3,13,13,-9,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-18,13,13,-116,13,-125,-128,-130,-129,-127,-126,-24,-179,-112,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'DIVIDE':([16,18,20,29,33,38,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-60,-159,88,-17,-160,-56,-107,-65,-66,-60,-72,-70,-108,-71,-69,133,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,133,133,-100,133,133,-99,133,133,133,133,133,133,133,133,133,-101,-59,-169,-161,-56,-75,-57,-76,]),'TYPE':([0,1,4,7,25,26,28,39,86,97,128,154,180,187,188,279,305,306,310,327,329,330,337,],[27,-8,-2,-4,-5,27,-7,-6,-113,-3,-9,-18,-24,-179,-112,27,27,27,27,27,27,27,27,]),'LPAREN':([6,8,12,13,14,17,19,24,29,30,34,35,36,38,40,49,50,59,69,70,81,89,94,96,102,103,104,107,108,109,112,113,117,119,121,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,168,169,171,172,173,174,191,192,193,195,198,221,223,232,233,237,248,249,250,258,259,261,268,269,277,284,285,287,288,289,292,301,302,331,],[50,-172,50,-173,50,-176,-174,-175,-17,-178,102,-171,103,-42,-177,50,50,50,-42,50,50,50,-131,50,50,50,186,-38,-32,-34,-33,-36,-37,192,-35,193,-42,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-125,-128,-130,-129,-127,-126,50,50,50,50,50,50,50,50,50,50,192,287,-42,50,50,50,192,-42,304,50,50,50,-40,-39,50,50,192,50,]),'FI':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,77,86,95,147,148,150,164,166,167,182,184,188,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,228,229,230,234,238,239,260,262,272,291,293,295,303,317,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-115,-113,-58,-106,-111,-105,-116,-135,231,-170,-162,-112,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-134,271,-137,-59,-169,-161,295,-75,-136,317,-85,-81,-57,-82,-76,]),'END':([1,4,7,25,28,39,86,97,128,154,180,187,188,306,327,330,337,],[-8,-2,-4,-5,-7,-6,-113,-3,-9,-18,-24,-179,-112,328,336,338,341,]),'OR':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,138,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,-89,-97,-100,138,-95,-99,138,-90,138,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'RETURN':([0,1,4,7,10,25,26,28,39,41,77,82,86,97,128,154,155,162,164,166,180,187,188,227,228,230,272,279,305,306,310,327,329,330,337,],[12,-8,-2,-4,12,-5,12,-7,-6,12,-115,12,-113,-3,-9,-18,12,12,-116,12,-24,-179,-112,12,12,12,12,12,12,12,12,12,12,12,12,]),'LE':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,141,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,141,-97,-100,141,-95,-99,141,141,141,-93,-96,141,141,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'$end':([1,4,7,23,25,26,28,39,86,97,128,154,180,187,188,],[-8,-2,-4,0,-5,-1,-7,-6,-113,-3,-9,-18,-24,-179,-112,]),'PRINT':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[30,-8,-2,30,-4,30,30,30,-5,30,-7,-6,30,30,30,30,30,30,-115,30,30,-113,30,-131,30,-3,30,30,-9,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-18,30,30,-116,30,-125,-128,-130,-129,-127,-126,-24,-179,-112,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'WHILE':([10,18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,76,95,107,108,109,112,113,117,121,147,148,150,157,158,161,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,262,264,268,288,289,295,298,302,303,317,320,321,323,325,334,],[81,-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,81,-58,-38,-32,-34,-33,-36,-37,-35,-106,-111,-105,-145,-144,-146,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-75,-155,-157,-40,-39,-81,-150,-156,-57,-82,-76,-149,-148,-154,-147,]),'CCONST':([6,12,14,49,50,59,70,81,89,94,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,168,169,171,172,173,174,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[53,53,53,53,53,53,53,53,53,-131,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-125,-128,-130,-129,-127,-126,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LENGTH':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[17,-8,-2,17,-4,17,17,17,-5,17,-7,-6,17,17,17,17,17,17,-115,17,17,-113,17,-131,17,-3,17,17,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-18,17,17,-116,17,-125,-128,-130,-129,-127,-126,-24,-179,-112,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'NUM':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[35,-8,-2,35,-4,35,35,35,-5,35,-7,-6,35,35,35,35,35,35,-115,35,35,-113,35,-131,35,-3,35,35,-9,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-18,35,35,-116,35,-125,-128,-130,-129,-127,-126,-24,-179,-112,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'CHAR':([29,42,43,72,111,178,190,191,225,242,267,285,286,304,331,332,],[-17,107,-15,107,107,107,-16,107,107,107,107,107,107,107,107,107,]),'FOR':([10,],[78,]),'LOC':([29,107,108,109,110,112,113,114,115,117,119,120,121,122,124,189,281,288,289,290,314,315,340,],[-17,-38,-32,-34,-28,-33,-36,-45,-30,-37,-29,-46,-35,-31,-41,-44,307,-40,-39,-47,-49,-55,-50,]),'TRUE':([6,12,14,49,50,59,70,81,89,94,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,168,169,171,172,173,174,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[56,56,56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-125,-128,-130,-129,-127,-126,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'PLUS':([16,18,20,29,33,38,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-60,-159,87,-17,-160,-56,-107,-65,-66,-60,-72,-70,-108,-71,-69,132,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,132,-97,-100,132,132,-99,132,132,132,132,132,132,132,-98,132,-101,-59,-169,-161,-56,-75,-57,-76,]),'ICONST':([6,12,14,49,50,59,70,81,89,94,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,168,169,171,172,173,174,191,192,193,194,195,198,221,223,232,233,237,258,259,261,284,285,287,292,300,301,331,],[57,57,57,57,57,57,57,57,57,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-125,-128,-130,-129,-127,-126,57,57,57,254,57,57,57,57,57,57,57,57,57,57,57,57,57,57,324,57,57,]),'PRED':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[8,-8,-2,8,-4,8,8,8,-5,8,-7,-6,8,8,8,8,8,8,-115,8,8,-113,8,-131,8,-3,8,8,-9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-18,8,8,-116,8,-125,-128,-130,-129,-127,-126,-24,-179,-112,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NOT':([6,12,14,18,29,33,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,81,89,94,95,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,168,169,171,172,173,174,182,184,191,192,193,195,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,221,223,232,233,234,237,238,239,250,258,259,261,262,284,285,287,292,301,303,320,331,],[59,59,59,-159,-17,-160,-107,-65,59,59,-66,-60,-72,-70,-108,-71,-69,137,-109,-67,-110,-73,-68,-74,-88,-56,59,59,-131,-58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-106,-111,59,-105,59,-125,-128,-130,-129,-127,-126,-170,-162,59,59,59,59,59,-78,-89,-97,-100,-103,-95,-99,-102,-90,137,-93,-96,-91,-92,-98,-94,-101,59,59,59,59,-59,59,-169,-161,-56,59,59,59,-75,59,59,59,59,59,-57,-76,59,]),'IN':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,159,160,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,224,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,134,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,225,-151,-170,-162,-78,-89,-97,-100,-103,-95,-99,134,-90,134,-93,-96,-91,-92,-98,-94,-101,267,-59,-169,-161,-56,-75,-57,-76,]),'NULL':([6,12,14,49,50,59,70,81,89,94,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,168,169,171,172,173,174,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[64,64,64,64,64,64,64,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-125,-128,-130,-129,-127,-126,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'EQ':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,142,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,142,-97,-100,142,-95,-99,142,142,142,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'REF':([29,42,43,72,111,178,190,242,286,304,332,],[-17,111,-15,111,111,111,-16,111,111,111,111,]),'ARRAY':([29,42,43,72,111,178,190,242,286,304,332,],[-17,118,-15,118,118,118,-16,118,118,118,118,]),'INT':([29,42,43,72,111,178,190,191,225,242,267,285,286,304,331,332,],[-17,113,-15,113,113,113,-16,113,113,113,113,113,113,113,113,113,]),'TIMES':([16,18,20,29,33,38,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-60,-159,92,-17,-160,-56,-107,-65,-66,-60,-72,-70,-108,-71,-69,136,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,136,136,-100,136,136,-99,136,136,136,136,136,136,136,136,136,-101,-59,-169,-161,-56,-75,-57,-76,]),'GE':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,145,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,145,-97,-100,145,-95,-99,145,145,145,-93,-96,145,145,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'ASSIGN':([16,18,20,29,33,38,43,69,72,87,88,90,91,92,93,95,99,107,108,109,110,112,113,114,115,117,119,120,121,122,124,126,152,159,160,182,184,189,190,234,238,239,288,289,290,303,314,315,340,],[-60,-159,94,-17,-160,-56,-15,-56,151,168,169,171,172,173,174,-58,178,-38,-32,-34,-28,-33,-36,-45,-30,-37,-29,-46,-35,-31,-41,195,221,223,-151,-170,-162,-44,-16,-59,-169,-161,-40,-39,-47,-57,-49,-55,-50,]),'ARROW':([6,12,14,16,18,20,29,33,38,49,50,52,55,59,69,70,81,89,94,95,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,168,169,171,172,173,174,182,184,191,192,193,195,198,221,223,232,233,234,237,238,239,250,258,259,261,284,285,287,292,301,303,331,],[62,62,62,-60,-159,95,-17,-160,-56,62,62,-60,95,62,-56,62,62,62,-131,-58,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,95,62,62,-125,-128,-130,-129,-127,-126,-170,-162,62,62,62,62,62,62,62,62,62,-59,62,-169,-161,-56,62,62,62,62,62,62,62,62,-57,62,]),'ID':([0,1,4,5,6,7,9,10,12,14,25,26,27,28,29,31,39,41,42,43,49,50,59,62,70,72,77,78,81,82,86,89,94,96,97,102,103,111,116,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,153,154,155,162,164,166,168,169,171,172,173,174,178,179,180,186,187,188,190,191,192,193,195,198,221,223,225,227,228,230,232,233,237,242,258,259,261,267,272,279,282,284,285,286,287,292,301,304,305,306,310,327,329,330,331,332,337,],[29,-8,-2,29,29,-4,29,29,29,29,-5,29,29,-7,-17,29,-6,29,29,-15,29,29,29,29,29,29,-115,29,29,29,-113,29,-131,29,-3,29,29,29,29,29,-9,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-18,29,29,-116,29,-125,-128,-130,-129,-127,-126,29,29,-24,29,-179,-112,-16,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'OD':([77,82,86,162,164,188,227,],[-115,165,-113,226,-116,-112,270,]),'READ':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[40,-8,-2,40,-4,40,40,40,-5,40,-7,-6,40,40,40,40,40,40,-115,40,40,-113,40,-131,40,-3,40,40,-9,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-18,40,40,-116,40,-125,-128,-130,-129,-127,-126,-24,-179,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'MOD':([16,18,20,29,33,38,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-60,-159,91,-17,-160,-56,-107,-65,-66,-60,-72,-70,-108,-71,-69,146,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,146,146,-100,146,146,-99,146,146,146,146,146,146,146,146,146,-101,-59,-169,-161,-56,-75,-57,-76,]),'EXIT':([0,1,4,7,10,25,26,28,39,41,77,82,86,97,128,154,155,162,164,166,180,187,188,227,228,230,272,279,305,306,310,327,329,330,337,],[31,-8,-2,-4,31,-5,31,-7,-6,31,-115,31,-113,-3,-9,-18,31,31,-116,31,-24,-179,-112,31,31,31,31,31,31,31,31,31,31,31,31,]),'COMMA':([18,29,33,42,43,44,45,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,72,73,74,95,98,99,100,107,108,109,110,112,113,114,115,117,119,120,121,122,124,126,147,148,150,176,177,181,182,183,184,185,189,190,196,197,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,234,235,236,238,239,241,242,243,245,246,248,255,262,263,273,275,276,280,281,288,289,290,295,303,307,308,311,312,313,314,315,316,317,320,339,340,],[-159,-17,-160,116,-15,127,-10,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,116,-19,153,-58,-25,116,179,-38,-32,-34,-28,-33,-36,-45,-30,-37,-29,-46,-35,-31,-41,-13,-106,-111,-105,233,-63,-163,-170,237,-162,237,-44,-16,-12,-11,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-63,233,-23,-22,-20,-59,-27,-26,-169,-161,-184,116,282,-54,285,-53,-14,-75,-21,-62,-64,-164,-186,-189,-40,-39,-47,-81,-57,-188,-185,-43,-51,331,-49,-55,-163,-82,-76,-52,-50,]),'LOWER':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,59,62,70,77,81,82,86,89,94,96,97,102,103,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[24,-8,-2,24,-4,24,24,24,-5,24,-7,-6,24,24,24,24,24,24,-115,24,24,-113,24,-131,24,-3,24,24,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-18,24,24,-116,24,-125,-128,-130,-129,-127,-126,-24,-179,-112,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'IF':([0,1,4,6,7,10,12,14,25,26,28,39,41,49,50,77,81,82,86,89,94,96,97,102,103,128,149,151,154,155,162,164,166,168,169,171,172,173,174,180,187,188,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[14,-8,-2,49,-4,14,49,49,-5,14,-7,-6,14,49,49,-115,49,14,-113,49,-131,49,-3,49,49,-9,49,49,-18,14,14,-116,14,-125,-128,-130,-129,-127,-126,-24,-179,-112,49,49,49,49,49,49,49,14,14,14,49,49,49,49,49,49,14,14,49,49,49,49,49,14,14,14,14,14,14,49,14,]),'GT':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,140,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,140,-97,-100,140,-95,-99,140,140,140,-93,-96,140,140,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'LT':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,135,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,135,-97,-100,135,-95,-99,135,135,135,-93,-96,135,135,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'DOWN':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,95,147,148,150,159,160,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,262,264,265,266,295,297,303,317,320,324,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-58,-106,-111,-105,224,-151,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-75,-155,-152,299,-81,322,-57,-82,-76,-153,]),'SCONST':([6,12,14,49,50,59,70,81,89,94,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,168,169,171,172,173,174,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-125,-128,-130,-129,-127,-126,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ELSIF':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,95,147,148,150,182,184,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,256,257,262,295,303,317,319,320,333,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-58,-106,-111,-105,-170,-162,259,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-84,292,-75,-81,-57,-82,-86,-76,-87,]),'TO':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,262,264,265,266,295,297,299,303,317,320,322,324,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-58,-106,-111,-105,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-75,-155,-152,301,-81,301,301,-57,-82,-76,301,-153,]),'AND':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,131,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,-89,-97,-100,131,-95,-99,131,131,131,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'NEQ':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,250,262,303,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,143,-109,-67,-110,-73,-68,-74,-88,-56,-58,-106,-111,-105,-170,-162,-78,143,-97,-100,143,-95,-99,143,143,143,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-56,-75,-57,-76,]),'MINUS':([6,12,14,16,18,20,29,33,38,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,81,89,94,95,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,168,169,171,172,173,174,182,184,191,192,193,195,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,221,223,232,233,234,237,238,239,250,258,259,261,262,284,285,287,292,301,303,320,331,],[70,70,70,-60,-159,93,-17,-160,-56,-107,-65,70,70,-66,-60,-72,-70,-108,-71,-69,144,-109,-67,-110,-73,-68,-74,-88,-56,70,70,-131,-58,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-106,-111,70,-105,70,-125,-128,-130,-129,-127,-126,-170,-162,70,70,70,70,70,-78,144,-97,-100,144,144,-99,144,144,144,144,144,144,144,-98,144,-101,70,70,70,70,-59,70,-169,-161,-56,70,70,70,-75,70,70,70,70,70,-57,-76,70,]),'RETURNS':([240,283,],[277,277,]),'SEMI':([3,11,12,15,16,18,21,22,29,32,33,37,44,45,46,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,73,74,76,79,80,83,85,95,98,100,101,105,106,107,108,109,110,112,113,114,115,117,119,120,121,122,124,126,147,148,150,156,157,158,161,163,165,170,182,184,189,196,197,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,219,220,222,226,231,234,235,236,238,239,240,255,262,263,264,268,270,271,278,283,288,289,290,295,298,302,303,309,314,315,317,320,321,323,325,328,334,335,336,338,340,341,],[-122,-123,-167,86,-120,-159,-119,-117,-17,-121,-160,-118,128,-10,-168,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-19,154,-142,162,-143,-166,-83,-58,-25,180,-165,187,188,-38,-32,-34,-28,-33,-36,-45,-30,-37,-29,-46,-35,-31,-41,-13,-106,-111,-105,-141,-145,-144,-146,-158,-140,-124,-170,-162,-44,-12,-11,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-23,-22,-20,-139,-133,-59,-27,-26,-169,-161,279,-14,-75,-21,-155,-157,-138,-132,305,310,-40,-39,-47,-81,-150,-156,-57,329,-49,-55,-82,-76,-149,-148,-154,-183,-147,-187,-182,-181,-50,-180,]),'BY':([18,29,33,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,68,69,71,95,147,148,150,182,184,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,238,239,262,264,265,266,295,303,317,320,],[-159,-17,-160,-107,-65,-66,-60,-72,-70,-108,-71,-69,-79,-109,-67,-110,-73,-68,-74,-88,-56,-80,-58,-106,-111,-105,-170,-162,-78,-89,-97,-100,-103,-95,-99,-102,-90,-104,-93,-96,-91,-92,-98,-94,-101,-59,-169,-161,-75,-155,-152,300,-81,-57,-82,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mode_definition':([27,179,],[98,236,]),'end_value':([266,297,299,322,],[298,321,323,334,]),'label_id':([0,10,26,82,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[2,75,2,75,75,75,75,75,75,75,2,2,2,2,2,2,2,2,]),'then_expression':([129,294,318,],[199,319,333,]),'newmode_list':([27,],[100,]),'lower_bound':([96,191,192,193,285,287,331,],[175,244,244,244,244,244,244,]),'value_array_slice':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'declaration_statement':([0,26,279,305,306,310,327,329,330,337,],[7,7,7,7,7,7,7,7,7,7,]),'loop_counter':([78,],[159,]),'boolean_mode':([42,72,111,178,191,225,242,267,285,286,304,331,332,],[112,112,112,112,112,112,112,112,112,112,112,112,112,]),'operand1':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[47,47,47,47,47,147,150,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'literal':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'for_control':([10,],[76,]),'return_action':([0,10,26,41,82,155,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'step_enumeration':([78,],[157,]),'action':([0,10,26,41,82,155,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[15,15,15,106,15,106,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'assigning_operator':([20,],[89,]),'expression_list':([96,149,],[176,218,]),'value_array_element':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'call_action':([0,6,10,12,14,26,41,49,50,59,62,70,81,82,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,155,162,166,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[16,52,16,52,52,16,16,52,52,52,52,52,52,16,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,16,16,16,52,52,52,52,52,52,52,16,16,16,52,52,52,52,52,52,16,16,52,52,52,52,52,16,16,16,16,16,16,52,16,]),'procedure_definition':([41,],[105,]),'boolean_expression':([14,49,81,259,292,],[84,129,163,294,318,]),'index_mode':([191,285,331,],[246,312,339,]),'constant_expression':([151,221,],[220,263,]),'mode':([42,72,111,178,242,286,304,332,],[126,152,189,235,281,315,281,315,]),'elsif_expression':([199,],[257,]),'integer_mode':([42,72,111,178,191,225,242,267,285,286,304,331,332,],[108,108,108,108,108,108,108,108,108,108,108,108,108,]),'character_mode':([42,72,111,178,191,225,242,267,285,286,304,331,332,],[109,109,109,109,109,109,109,109,109,109,109,109,109,]),'if_action':([0,10,26,41,82,155,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'procedure_call':([0,6,10,12,14,26,41,49,50,59,62,70,81,82,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,155,162,166,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array_mode':([42,72,111,178,242,286,304,332,],[120,120,120,120,120,120,120,120,]),'while_control':([10,76,],[80,156,]),'discrete_expression':([223,301,],[265,325,]),'referenced_location':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'operand':([6,12,14,49,50,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'string_mode':([42,72,111,178,242,286,304,332,],[114,114,114,114,114,114,114,114,]),'procedure_statement':([0,26,279,305,306,310,327,329,330,337,],[28,28,28,28,28,28,28,28,28,28,]),'discrete_mode':([42,72,111,178,191,225,242,267,285,286,304,331,332,],[119,119,119,119,248,268,119,302,248,119,119,248,119,]),'parenthesized_expression':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'formal_parameter':([186,282,],[241,308,]),'discrete_mode_name':([0,6,10,12,14,26,41,42,49,50,59,62,70,72,81,82,89,96,102,103,111,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,155,162,166,178,191,192,193,195,198,221,223,225,227,228,230,232,233,237,242,258,259,261,267,272,279,284,285,286,287,292,301,304,305,306,310,327,329,330,331,332,337,],[36,36,36,36,36,36,36,123,36,36,36,36,36,123,36,36,36,36,36,36,123,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,123,249,36,36,36,36,36,36,123,36,36,36,36,36,36,123,36,36,36,123,36,36,36,249,123,36,36,36,123,36,36,36,36,36,36,249,123,36,]),'then_clause':([84,],[167,]),'do_action':([0,10,26,41,82,155,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'newmode_statement':([0,26,279,305,306,310,327,329,330,337,],[39,39,39,39,39,39,39,39,39,39,]),'range_enumeration':([78,],[161,]),'conditional_expression':([6,12,14,49,50,81,89,96,102,103,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'builtin_call':([0,6,10,12,14,26,41,49,50,59,62,70,81,82,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,155,162,166,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'parameter_list':([102,103,287,],[183,185,185,]),'iteration':([78,],[158,]),'result_action':([0,10,26,41,82,155,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'statement':([0,26,279,305,306,310,327,329,330,337,],[4,97,4,4,97,4,97,4,97,97,]),'expression':([6,12,14,49,50,81,89,96,102,103,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[46,83,85,85,130,85,170,177,181,181,217,219,247,247,247,255,256,219,264,273,275,276,293,85,296,273,247,316,85,264,247,]),'parameter_spec':([242,304,],[280,326,]),'mode_name':([42,72,111,178,242,286,304,332,],[110,110,110,110,110,110,110,110,]),'result_spec':([240,283,],[278,309,]),'element_mode':([286,332,],[314,340,]),'formal_parameter_list':([186,],[243,]),'literal_range':([191,192,193,285,287,331,],[245,251,252,245,252,245,]),'reference_mode':([42,72,111,178,242,286,304,332,],[115,115,115,115,115,115,115,115,]),'composite_mode':([42,72,111,178,242,286,304,332,],[122,122,122,122,122,122,122,122,]),'builtin_name':([0,6,10,12,14,26,41,49,50,59,62,70,81,82,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,155,162,166,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'discrete_range_mode':([42,72,111,178,191,225,242,267,285,286,304,331,332,],[121,121,121,121,121,121,121,121,121,121,121,121,121,]),'string_length':([194,],[253,]),'action_statement':([0,10,26,82,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[1,77,1,164,77,77,164,164,77,164,1,1,1,1,1,1,1,1,]),'step_value':([266,],[297,]),'synonym_definition':([9,153,],[73,222,]),'statement_list':([0,279,305,310,329,],[26,306,327,330,337,]),'location':([0,6,10,12,14,26,41,49,50,59,62,70,81,82,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,155,162,166,191,192,193,195,198,221,223,227,228,230,232,233,237,258,259,261,272,279,284,285,287,292,301,305,306,310,327,329,330,331,337,],[20,55,20,55,55,20,20,55,55,55,148,55,55,20,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,20,20,20,55,55,55,55,55,55,55,20,20,20,55,55,55,55,55,55,20,20,55,55,55,55,55,20,20,20,20,20,20,55,20,]),'control_part':([10,],[79,]),'assignment_action':([0,10,26,41,82,155,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'program':([0,],[23,]),'synonym_statement':([0,26,279,305,306,310,327,329,330,337,],[25,25,25,25,25,25,25,25,25,25,]),'index_mode_list':([285,],[313,]),'start_value':([223,],[266,]),'upper_bound':([232,284,],[274,311,]),'exit_action':([0,10,26,41,82,155,162,166,227,228,230,272,279,305,306,310,327,329,330,337,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'primitive_value':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'else_clause':([167,],[229,]),'declaration_list':([5,],[44,]),'else_expression':([199,257,],[260,291,]),'array_primitive_value':([6,12,14,49,50,59,70,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'identifier_list':([5,9,27,127,153,179,186,282,],[42,72,99,42,72,99,242,242,]),'identifier':([0,5,6,9,10,12,14,26,27,31,41,42,49,50,59,62,70,72,78,81,82,89,96,102,103,111,116,127,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,153,155,162,166,178,179,186,191,192,193,195,198,221,223,225,227,228,230,232,233,237,242,258,259,261,267,272,279,282,284,285,286,287,292,301,304,305,306,310,327,329,330,331,332,337,],[38,43,69,43,38,69,69,38,43,101,69,124,69,69,69,69,69,124,160,69,38,69,69,69,69,124,190,43,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,43,69,38,38,124,43,43,250,69,69,69,69,69,69,269,38,38,38,69,69,69,124,69,69,69,269,38,38,43,69,250,124,69,69,69,124,38,38,38,38,38,38,250,124,38,]),'binop':([6,12,14,49,50,81,89,96,102,103,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,191,192,193,195,198,221,223,232,233,237,258,259,261,284,285,287,292,301,331,],[58,58,58,58,58,58,58,58,58,58,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'declaration':([5,127,],[45,197,]),'initialization':([126,],[196,]),'synonym_list':([9,],[74,]),'action_statement_list':([10,162,166,230,],[82,227,228,272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
