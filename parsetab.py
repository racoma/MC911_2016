
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AADFFDF81627B221FEC1366C648B7298'
    
_lr_action_items = {'WHILE':([7,23,24,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,95,104,112,113,117,123,125,127,128,149,151,168,171,179,180,181,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,261,271,273,277,279,284,293,300,303,317,319,321,322,324,334,],[-159,-17,92,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,92,-170,-36,-37,-33,-32,-38,-34,-35,-111,-106,-105,-162,-145,-146,-144,-169,-59,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-75,-155,-157,-39,-40,-57,-81,-150,-156,-76,-82,-154,-149,-148,-147,]),'RPAREN':([7,23,28,43,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,91,104,105,106,109,110,112,113,115,116,117,119,121,123,125,126,127,128,149,151,168,169,171,172,187,192,198,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,240,241,244,255,257,258,261,277,279,280,281,284,290,291,293,304,305,306,307,313,316,317,319,330,336,],[-159,-17,-160,104,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,171,-170,187,-163,-30,-45,-36,-37,-31,-29,-33,-41,-46,-32,-38,-28,-34,-35,-111,-106,-105,227,-162,230,-169,-44,-59,256,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-164,277,279,-62,-184,289,-75,-39,-40,-47,171,-57,-186,-189,-81,-43,-163,-55,-49,-185,-188,-76,-82,338,-50,]),'THEN':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,102,103,104,149,151,168,170,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,261,284,293,295,317,319,320,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,184,-83,-170,-111,-106,-105,228,-162,-169,-59,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-75,-57,-81,228,-76,-82,228,]),'ASSIGN':([7,8,23,26,28,29,47,48,50,52,53,54,55,56,59,63,83,104,109,110,112,113,115,116,117,119,120,121,123,125,126,127,128,146,171,182,183,187,190,192,198,230,277,279,280,284,306,307,336,],[-159,49,-17,-60,-160,-56,-15,129,130,132,-58,133,134,135,139,145,-56,-170,-30,-45,-36,-37,-31,-29,-33,-41,194,-46,-32,-38,-28,-34,-35,207,-162,233,-151,-169,-16,-44,-59,-161,-39,-40,-47,-57,-55,-49,-50,]),'INT':([23,46,47,63,118,139,190,196,235,259,272,282,283,312,326,327,],[-17,112,-15,112,112,112,-16,112,112,112,112,112,112,112,112,112,]),'DCL':([0,6,12,16,30,31,39,40,41,100,107,140,147,202,204,286,310,311,315,328,331,332,339,],[5,-8,-2,-5,5,-4,-6,-7,-113,-3,-9,-24,-18,-112,-179,5,5,5,5,5,5,5,5,]),'LPAREN':([1,4,11,15,18,19,20,21,22,23,29,35,36,37,38,43,49,51,57,73,80,83,88,89,91,92,111,112,113,116,117,119,123,125,127,128,129,130,132,133,134,135,143,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,248,250,251,262,265,266,273,274,277,278,279,281,283,287,297,298,303,326,],[-178,43,-177,-174,-171,-176,88,91,-172,-17,-42,88,88,-173,-175,88,-131,88,88,88,88,-42,88,88,88,88,189,-36,-37,191,-33,-42,-32,-38,-34,-35,-130,-128,-127,-125,-129,-126,203,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,191,281,-42,88,88,88,191,-42,-39,88,-40,88,88,312,88,88,191,88,]),'OR':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,158,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,158,-96,-100,-99,158,-91,-90,-98,158,-89,-94,-97,-101,-93,-95,-92,-78,-161,-56,-75,-57,-76,]),'MINUS':([7,8,20,23,26,28,29,35,36,43,49,51,53,57,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,88,89,91,92,104,129,130,132,133,134,135,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,171,186,187,189,191,194,196,197,198,199,207,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,233,251,261,262,265,266,278,281,283,284,297,298,317,326,],[-159,56,80,-17,-60,-160,-56,80,80,80,-131,80,-58,80,-69,-73,-88,-66,-110,-108,-72,-67,-68,159,-65,-74,-107,-60,-56,-71,-70,-109,80,80,80,80,-170,-130,-128,-127,-125,-129,-126,80,-111,80,-106,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-105,-162,80,-169,80,80,80,80,80,-59,80,80,159,159,-100,-99,159,159,159,-98,159,159,159,-97,-101,159,159,159,-78,80,-161,80,-56,-75,80,80,80,80,80,80,-57,80,80,-76,80,]),'BOOL':([23,46,47,63,118,139,190,196,235,259,272,282,283,312,326,327,],[-17,113,-15,113,113,113,-16,113,113,113,113,113,113,113,113,113,]),'NEQ':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,167,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,167,-96,-100,-99,167,-91,167,-98,167,167,-94,-97,-101,-93,-95,-92,-78,-161,-56,-75,-57,-76,]),'ARROW':([7,8,20,23,26,28,29,35,36,43,49,51,53,57,72,73,80,82,83,88,89,91,92,104,129,130,132,133,134,135,145,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,186,187,189,191,194,196,197,198,199,207,228,230,233,251,262,265,266,278,281,283,284,297,298,326,],[-159,53,68,-17,-60,-160,-56,68,68,68,-131,68,-58,68,53,68,68,-60,-56,68,68,68,68,-170,-130,-128,-127,-125,-129,-126,68,53,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-162,68,-169,68,68,68,68,68,-59,68,68,68,-161,68,-56,68,68,68,68,68,68,-57,68,68,68,]),'PROC':([61,],[143,]),'MOD':([7,8,23,26,28,29,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,55,-17,-60,-160,-56,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,164,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,164,164,-100,-99,164,164,164,164,164,164,164,164,-101,164,164,164,-78,-161,-56,-75,-57,-76,]),'OD':([41,93,94,174,178,202,231,],[-113,175,-115,-116,232,-112,268,]),'SEMI':([2,7,13,17,20,23,25,26,27,28,33,34,42,44,45,53,58,60,62,64,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,90,95,97,98,101,103,104,109,110,112,113,115,116,117,119,120,121,123,125,126,127,128,131,142,144,149,151,168,171,173,175,176,179,180,181,187,188,192,193,198,200,201,205,206,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,232,239,245,256,260,261,268,271,273,276,277,279,280,284,285,289,293,300,303,306,307,314,317,319,321,322,324,329,334,336,337,338,340,341,],[41,-159,-119,-122,-167,-17,-121,-120,-118,-160,-117,-123,-165,-10,107,-58,-25,140,-19,147,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-166,-142,178,-143,-168,-83,-170,-30,-45,-36,-37,-31,-29,-33,-41,-13,-46,-32,-38,-28,-34,-35,-124,202,204,-111,-106,-105,-162,-158,-140,-141,-145,-146,-144,-169,-11,-44,-12,-59,-27,-26,-22,-23,-20,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-139,-133,-14,286,-21,-75,-138,-155,-157,-132,-39,-40,-47,-57,310,315,-81,-150,-156,-55,-49,331,-76,-82,-154,-149,-148,-183,-147,-50,-182,-187,-181,-180,]),'LE':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,153,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,153,-96,-100,-99,153,153,153,-98,153,153,-94,-97,-101,-93,-95,153,-78,-161,-56,-75,-57,-76,]),'TYPE':([0,6,12,16,30,31,39,40,41,100,107,140,147,202,204,286,310,311,315,328,331,332,339,],[9,-8,-2,-5,9,-4,-6,-7,-113,-3,-9,-24,-18,-112,-179,9,9,9,9,9,9,9,9,]),'LOC':([23,109,110,112,113,115,116,117,119,121,123,125,126,127,128,192,277,279,280,291,306,307,336,],[-17,-30,-45,-36,-37,-31,-29,-33,-41,-46,-32,-38,-28,-34,-35,-44,-39,-40,-47,316,-55,-49,-50,]),'READ':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[11,-8,-2,-5,11,11,11,-4,11,11,-6,-7,-113,11,-131,11,11,11,11,11,11,11,11,11,11,11,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,11,-18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-116,11,11,11,11,11,11,11,11,11,11,-112,-179,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'CCONST':([20,35,36,43,49,51,57,73,80,88,89,91,92,129,130,132,133,134,135,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[74,74,74,74,-131,74,74,74,74,74,74,74,74,-130,-128,-127,-125,-129,-126,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'COLON':([7,10,23,28,29,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,96,104,137,138,149,151,168,171,187,198,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,242,243,251,261,284,293,305,317,319,],[-159,61,-17,-160,-114,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,177,-170,199,-61,-111,-106,-105,-162,-169,-59,262,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,278,-61,-56,-75,-57,-81,-61,-76,-82,]),'NOT':([7,20,23,28,35,36,43,49,51,53,57,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,88,89,91,92,104,129,130,132,133,134,135,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,171,186,187,189,191,194,196,197,198,199,207,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,233,251,261,262,265,266,278,281,283,284,297,298,317,326,],[-159,73,-17,-160,73,73,73,-131,73,-58,73,-69,-73,-88,-66,-110,-108,-72,-67,-68,152,-65,-74,-107,-60,-56,-71,-70,-109,73,73,73,73,-170,-130,-128,-127,-125,-129,-126,73,-111,73,-106,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-105,-162,73,-169,73,73,73,73,73,-59,73,73,-102,-96,-100,-99,152,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,73,-161,73,-56,-75,73,73,73,73,73,73,-57,73,73,-76,73,]),'SYN':([0,6,12,16,30,31,39,40,41,100,107,140,147,202,204,286,310,311,315,328,331,332,339,],[14,-8,-2,-5,14,-4,-6,-7,-113,-3,-9,-24,-18,-112,-179,14,14,14,14,14,14,14,14,]),'$end':([6,12,16,30,31,32,39,40,41,100,107,140,147,202,204,],[-8,-2,-5,-1,-4,0,-6,-7,-113,-3,-9,-24,-18,-112,-179,]),'REF':([23,46,47,63,118,139,190,259,282,312,327,],[-17,118,-15,118,118,118,-16,118,118,118,118,]),'EQ':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,157,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,157,-96,-100,-99,157,-91,157,-98,157,157,-94,-97,-101,-93,-95,-92,-78,-161,-56,-75,-57,-76,]),'END':([6,12,16,31,39,40,41,100,107,140,147,202,204,311,328,332,339,],[-8,-2,-5,-4,-6,-7,-113,-3,-9,-24,-18,-112,-179,329,337,340,341,]),'AND':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,161,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,161,-96,-100,-99,161,-91,161,-98,161,-89,-94,-97,-101,-93,-95,-92,-78,-161,-56,-75,-57,-76,]),'CHAR':([23,46,47,63,118,139,190,196,235,259,272,282,283,312,326,327,],[-17,125,-15,125,125,125,-16,125,125,125,125,125,125,125,125,125,]),'GT':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,165,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,165,-96,-100,-99,165,165,165,-98,165,165,-94,-97,-101,-93,-95,165,-78,-161,-56,-75,-57,-76,]),'NULL':([20,35,36,43,49,51,57,73,80,88,89,91,92,129,130,132,133,134,135,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[66,66,66,66,-131,66,66,66,66,66,66,66,66,-130,-128,-127,-125,-129,-126,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'GE':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,162,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,162,-96,-100,-99,162,162,162,-98,162,162,-94,-97,-101,-93,-95,162,-78,-161,-56,-75,-57,-76,]),'ICONST':([20,35,36,43,49,51,57,73,80,88,89,91,92,129,130,132,133,134,135,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,195,196,197,199,207,228,233,262,265,266,278,281,283,297,298,302,326,],[65,65,65,65,-131,65,65,65,65,65,65,65,65,-130,-128,-127,-125,-129,-126,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,247,65,65,65,65,65,65,65,65,65,65,65,65,65,65,325,65,]),'SCONST':([20,35,36,43,49,51,57,73,80,88,89,91,92,129,130,132,133,134,135,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[79,79,79,79,-131,79,79,79,79,79,79,79,79,-130,-128,-127,-125,-129,-126,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LENGTH':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[19,-8,-2,-5,19,19,19,-4,19,19,-6,-7,-113,19,-131,19,19,19,19,19,19,19,19,19,19,19,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,19,-18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-116,19,19,19,19,19,19,19,19,19,19,-112,-179,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NUM':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[18,-8,-2,-5,18,18,18,-4,18,18,-6,-7,-113,18,-131,18,18,18,18,18,18,18,18,18,18,18,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,18,-18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-116,18,18,18,18,18,18,18,18,18,18,-112,-179,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'UPPER':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[15,-8,-2,-5,15,15,15,-4,15,15,-6,-7,-113,15,-131,15,15,15,15,15,15,15,15,15,15,15,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,15,-18,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-116,15,15,15,15,15,15,15,15,15,15,-112,-179,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'PRED':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[22,-8,-2,-5,22,22,22,-4,22,22,-6,-7,-113,22,-131,22,22,22,22,22,22,22,22,22,22,22,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,22,-18,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-116,22,22,22,22,22,22,22,22,22,22,-112,-179,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ID':([0,3,5,6,9,12,14,16,20,23,24,30,31,35,36,39,40,41,43,46,47,49,51,57,61,63,68,73,80,88,89,91,92,93,94,99,100,107,108,114,118,129,130,132,133,134,135,139,140,141,145,147,148,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,190,191,194,196,197,199,202,203,204,207,228,231,233,235,236,237,259,262,265,266,272,275,278,281,282,283,286,288,297,298,310,311,312,315,326,327,328,331,332,339,],[23,23,23,-8,23,-2,23,-5,23,-17,23,23,-4,23,23,-6,-7,-113,23,23,-15,-131,23,23,23,23,23,23,23,23,23,23,23,23,-115,23,-3,-9,23,23,23,-130,-128,-127,-125,-129,-126,23,-24,23,23,-18,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-116,23,23,23,23,23,-16,23,23,23,23,23,-112,23,-179,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'DO':([0,6,12,16,24,30,31,39,40,41,61,93,94,100,107,140,147,174,177,178,184,202,204,231,236,237,275,286,310,311,315,328,331,332,339,],[24,-8,-2,-5,24,24,-4,-6,-7,-113,24,24,-115,-3,-9,-24,-18,-116,24,24,24,-112,-179,24,24,24,24,24,24,24,24,24,24,24,24,]),'RETURN':([0,6,12,16,24,30,31,39,40,41,61,93,94,100,107,140,147,174,177,178,184,202,204,231,236,237,275,286,310,311,315,328,331,332,339,],[20,-8,-2,-5,20,20,-4,-6,-7,-113,20,20,-115,-3,-9,-24,-18,-116,20,20,20,-112,-179,20,20,20,20,20,20,20,20,20,20,20,20,]),'COMMA':([7,23,28,44,45,46,47,53,58,59,60,62,63,64,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,104,105,106,109,110,112,113,115,116,117,119,120,121,123,125,126,127,128,136,138,149,151,168,171,172,187,188,190,192,193,198,200,201,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,240,245,248,249,252,253,255,257,258,259,260,261,277,279,280,284,290,291,293,304,305,306,307,308,309,313,316,317,319,335,336,],[-159,-17,-160,-10,108,114,-15,-58,-25,114,141,-19,114,148,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-170,186,-163,-30,-45,-36,-37,-31,-29,-33,-41,-13,-46,-32,-38,-28,-34,-35,197,-63,-111,-106,-105,-162,186,-169,-11,-16,-44,-12,-59,-27,-26,-22,-23,-20,197,-63,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-164,-14,-53,-54,283,-64,-62,-184,288,114,-21,-75,-39,-40,-47,-57,-186,-189,-81,-43,-163,-55,-49,326,-51,-185,-188,-76,-82,-52,-50,]),'ELSIF':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,261,263,267,284,293,317,318,319,333,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-170,-111,-106,-105,-162,-169,-59,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,266,-161,-75,-84,297,-57,-81,-76,-86,-82,-87,]),'PLUS':([7,8,23,26,28,29,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,54,-17,-60,-160,-56,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,163,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,163,163,-100,-99,163,163,163,-98,163,163,163,-97,-101,163,163,163,-78,-161,-56,-75,-57,-76,]),'ELSE':([7,23,28,41,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,94,104,149,151,168,171,174,184,185,187,198,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,236,261,263,267,284,293,317,318,319,333,],[-159,-17,-160,-113,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-115,-170,-111,-106,-105,-162,-116,-135,237,-169,-59,-112,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,265,-161,-134,-75,-84,265,-57,-81,-76,-86,-82,-87,]),'RETURNS':([256,289,],[287,287,]),'FOR':([24,],[99,]),'LBRACKET':([7,8,23,26,28,29,53,65,66,69,70,71,72,74,75,76,78,79,82,83,84,86,104,122,124,149,171,187,198,227,230,251,261,284,317,],[-159,57,-17,-60,-160,-56,-58,-69,-73,150,-66,-77,57,-72,-67,-68,-65,-74,-60,-56,-71,-70,-170,195,196,57,-162,-169,-59,-78,-161,-56,-75,-57,-76,]),'PRINT':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[1,-8,-2,-5,1,1,1,-4,1,1,-6,-7,-113,1,-131,1,1,1,1,1,1,1,1,1,1,1,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,1,-18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-116,1,1,1,1,1,1,1,1,1,1,-112,-179,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'DOWN':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,104,149,151,168,171,182,183,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,261,269,270,271,284,293,299,317,319,325,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-170,-111,-106,-105,-162,234,-151,-169,-59,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-75,301,-152,-155,-57,-81,323,-76,-82,-153,]),'CHARS':([23,46,47,63,118,139,190,259,282,312,327,],[-17,122,-15,122,122,122,-16,122,122,122,122,]),'RBRACKET':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,104,112,113,117,123,125,127,128,136,138,149,151,168,171,187,198,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,246,247,248,249,252,253,254,255,261,277,279,284,292,293,304,308,309,317,319,335,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-170,-36,-37,-33,-32,-38,-34,-35,198,-63,-111,-106,-105,-162,-169,-59,261,-63,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,280,-48,-53,-54,282,-64,284,-62,-75,-39,-40,-57,317,-81,-43,327,-51,-76,-82,-52,]),'TRUE':([20,35,36,43,49,51,57,73,80,88,89,91,92,129,130,132,133,134,135,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[84,84,84,84,-131,84,84,84,84,84,84,84,84,-130,-128,-127,-125,-129,-126,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'CONCAT':([7,8,23,26,28,29,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,48,-17,-60,-160,-56,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,156,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-56,-75,-57,-76,]),'DIVIDE':([7,8,23,26,28,29,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,50,-17,-60,-160,-56,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,154,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,154,154,-100,-99,154,154,154,154,154,154,154,154,-101,154,154,154,-78,-161,-56,-75,-57,-76,]),'TIMES':([7,8,23,26,28,29,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,52,-17,-60,-160,-56,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,155,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,155,155,-100,-99,155,155,155,155,155,155,155,155,-101,155,155,155,-78,-161,-56,-75,-57,-76,]),'RESULT':([0,6,12,16,24,30,31,39,40,41,61,93,94,100,107,140,147,174,177,178,184,202,204,231,236,237,275,286,310,311,315,328,331,332,339,],[35,-8,-2,-5,35,35,-4,-6,-7,-113,35,35,-115,-3,-9,-24,-18,-116,35,35,35,-112,-179,35,35,35,35,35,35,35,35,35,35,35,35,]),'FI':([7,23,28,41,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,94,104,149,151,168,171,174,184,185,187,198,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,236,237,238,261,264,275,284,293,294,296,317,319,],[-159,-17,-160,-113,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-115,-170,-111,-106,-105,-162,-116,-135,239,-169,-59,-112,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-134,-137,276,-75,293,-136,-57,-81,-85,319,-76,-82,]),'EXIT':([0,6,12,16,24,30,31,39,40,41,61,93,94,100,107,140,147,174,177,178,184,202,204,231,236,237,275,286,310,311,315,328,331,332,339,],[3,-8,-2,-5,3,3,-4,-6,-7,-113,3,3,-115,-3,-9,-24,-18,-116,3,3,3,-112,-179,3,3,3,3,3,3,3,3,3,3,3,3,]),'LT':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,166,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,-169,-59,166,-96,-100,-99,166,166,166,-98,166,166,-94,-97,-101,-93,-95,166,-78,-161,-56,-75,-57,-76,]),'IN':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,86,87,104,149,151,168,171,182,183,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,234,251,261,284,317,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,160,-65,-74,-107,-60,-56,-71,-70,-109,-170,-111,-106,-105,-162,235,-151,-169,-59,160,-96,-100,-99,160,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,272,-56,-75,-57,-76,]),'BY':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,261,269,270,271,284,293,317,319,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-170,-111,-106,-105,-162,-169,-59,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-75,302,-152,-155,-57,-81,-76,-82,]),'FALSE':([20,35,36,43,49,51,57,73,80,88,89,91,92,129,130,132,133,134,135,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[86,86,86,86,-131,86,86,86,86,86,86,86,86,-130,-128,-127,-125,-129,-126,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'SUCC':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[37,-8,-2,-5,37,37,37,-4,37,37,-6,-7,-113,37,-131,37,37,37,37,37,37,37,37,37,37,37,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,37,-18,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-116,37,37,37,37,37,37,37,37,37,37,-112,-179,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TO':([7,23,28,53,65,66,67,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,104,149,151,168,171,187,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,261,269,270,271,284,293,299,301,317,319,323,325,],[-159,-17,-160,-58,-69,-73,-88,-66,-110,-108,-72,-67,-68,-79,-65,-74,-107,-60,-56,-71,-80,-70,-109,-170,-111,-106,-105,-162,-169,-59,-102,-96,-100,-99,-104,-91,-90,-98,-103,-89,-94,-97,-101,-93,-95,-92,-78,-161,-75,298,-152,-155,-57,-81,298,298,-76,-82,298,-153,]),'IF':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[36,-8,-2,-5,89,36,36,-4,89,89,-6,-7,-113,89,-131,89,89,36,89,89,89,89,36,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,89,-18,89,-116,36,36,36,89,89,89,89,89,89,89,-112,-179,89,89,36,89,36,36,89,89,89,36,89,89,89,36,89,89,36,36,36,89,36,36,36,36,]),'LOWER':([0,6,12,16,20,24,30,31,35,36,39,40,41,43,49,51,57,61,68,73,80,88,89,91,92,93,94,100,107,129,130,132,133,134,135,140,145,147,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,177,178,184,186,189,191,194,196,197,199,202,204,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[38,-8,-2,-5,38,38,38,-4,38,38,-6,-7,-113,38,-131,38,38,38,38,38,38,38,38,38,38,38,-115,-3,-9,-130,-128,-127,-125,-129,-126,-24,38,-18,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-116,38,38,38,38,38,38,38,38,38,38,-112,-179,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ARRAY':([23,46,47,63,118,139,190,259,282,312,327,],[-17,124,-15,124,124,124,-16,124,124,124,124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'action':([0,24,30,61,93,177,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[2,2,2,142,2,142,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'boolean_expression':([36,89,92,266,297,],[102,170,173,295,320,]),'upper_bound':([199,278,],[254,304,]),'newmode_list':([9,],[60,]),'parameter_spec':([259,312,],[290,330,]),'operand':([20,35,36,43,51,57,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'action_statement':([0,24,30,93,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[6,94,6,174,94,94,174,174,94,174,6,6,6,6,6,6,6,6,]),'array_primitive_value':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'step_value':([269,],[299,]),'value_array_element':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'procedure_call':([0,20,24,30,35,36,43,51,57,61,68,73,80,88,89,91,92,93,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,184,186,189,191,194,196,197,199,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'iteration':([99,],[181,]),'identifier_list':([5,9,14,108,141,148,203,288,],[46,59,63,46,59,63,259,259,]),'expression_list':([57,150,],[136,209,]),'location':([0,20,24,30,35,36,43,51,57,61,68,73,80,88,89,91,92,93,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,184,186,189,191,194,196,197,199,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[8,72,8,8,72,72,72,72,72,8,149,72,72,72,72,72,72,8,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,8,8,8,72,72,72,72,72,72,72,72,72,8,72,8,8,72,72,72,8,72,72,72,8,72,72,8,8,8,72,8,8,8,8,]),'loop_counter':([99,],[182,]),'declaration':([5,108,],[44,188,]),'builtin_call':([0,20,24,30,35,36,43,51,57,61,68,73,80,88,89,91,92,93,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,184,186,189,191,194,196,197,199,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'builtin_name':([0,20,24,30,35,36,43,51,57,61,68,73,80,88,89,91,92,93,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,184,186,189,191,194,196,197,199,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'parameter_list':([43,91,281,],[105,172,172,]),'else_clause':([185,],[238,]),'end_value':([269,299,301,323,],[300,322,324,334,]),'then_expression':([170,295,320,],[229,318,333,]),'control_part':([24,],[97,]),'identifier':([0,3,5,9,14,20,24,30,35,36,43,46,51,57,61,63,68,73,80,88,89,91,92,93,99,108,114,118,139,141,145,148,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,184,186,189,191,194,196,197,199,203,207,228,231,233,235,236,237,259,262,265,266,272,275,278,281,282,283,286,288,297,298,310,311,312,315,326,327,328,331,332,339,],[29,42,47,47,47,83,29,29,83,83,83,119,83,83,83,119,83,83,83,83,83,83,83,29,183,47,190,119,119,47,83,47,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,29,29,83,83,83,83,251,83,83,47,83,83,29,83,274,29,29,119,83,83,83,274,29,83,83,119,251,29,47,83,83,29,29,119,29,251,119,29,29,29,29,]),'literal_range':([189,191,196,281,283,326,],[241,244,249,241,249,249,]),'return_action':([0,24,30,61,93,177,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'mode_name':([46,63,118,139,259,282,312,327,],[126,126,126,126,126,126,126,126,]),'value_array_slice':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'character_mode':([46,63,118,139,196,235,259,272,282,283,312,326,327,],[127,127,127,127,127,127,127,127,127,127,127,127,127,]),'parenthesized_expression':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'binop':([20,35,36,43,51,57,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[77,77,77,77,77,77,77,77,77,77,77,77,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'string_mode':([46,63,118,139,259,282,312,327,],[110,110,110,110,110,110,110,110,]),'formal_parameter_list':([203,],[258,]),'discrete_mode_name':([0,20,24,30,35,36,43,46,51,57,61,63,68,73,80,88,89,91,92,93,118,139,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,184,186,189,191,194,196,197,199,207,228,231,233,235,236,237,259,262,265,266,272,275,278,281,282,283,286,297,298,310,311,312,315,326,327,328,331,332,339,],[21,21,21,21,21,21,21,111,21,21,21,111,21,21,21,21,21,21,21,21,111,111,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,250,21,21,21,21,21,21,111,21,21,111,21,21,21,111,21,21,21,111,250,21,21,21,21,21,111,21,250,111,21,21,21,21,]),'procedure_definition':([61,],[144,]),'operand1':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[81,81,81,81,81,81,151,168,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'exit_action':([0,24,30,61,93,177,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'do_action':([0,24,30,61,93,177,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'literal':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'synonym_statement':([0,30,286,310,311,315,328,331,332,339,],[16,16,16,16,16,16,16,16,16,16,]),'declaration_statement':([0,30,286,310,311,315,328,331,332,339,],[31,31,31,31,31,31,31,31,31,31,]),'index_mode':([196,283,326,],[252,309,335,]),'if_action':([0,24,30,61,93,177,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'procedure_statement':([0,30,286,310,311,315,328,331,332,339,],[40,40,40,40,40,40,40,40,40,40,]),'result_action':([0,24,30,61,93,177,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'result_spec':([256,289,],[285,314,]),'reference_mode':([46,63,118,139,259,282,312,327,],[109,109,109,109,109,109,109,109,]),'referenced_location':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'lower_bound':([57,189,191,196,281,283,326,],[137,242,242,242,242,242,242,]),'elsif_expression':([229,],[267,]),'formal_parameter':([203,288,],[257,313,]),'declaration_list':([5,],[45,]),'start_value':([233,],[269,]),'conditional_expression':([20,35,36,43,51,57,88,89,91,92,145,150,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'composite_mode':([46,63,118,139,259,282,312,327,],[115,115,115,115,115,115,115,115,]),'action_statement_list':([24,178,184,237,],[93,231,236,275,]),'range_enumeration':([99,],[180,]),'for_control':([24,],[95,]),'primitive_value':([20,35,36,43,51,57,73,80,88,89,91,92,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'boolean_mode':([46,63,118,139,196,235,259,272,282,283,312,326,327,],[117,117,117,117,117,117,117,117,117,117,117,117,117,]),'discrete_mode':([46,63,118,139,196,235,259,272,282,283,312,326,327,],[116,116,116,116,248,273,116,303,116,248,116,248,116,]),'integer_mode':([46,63,118,139,196,235,259,272,282,283,312,326,327,],[123,123,123,123,123,123,123,123,123,123,123,123,123,]),'label_id':([0,24,30,93,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[10,96,10,96,96,96,96,96,96,96,10,10,10,10,10,10,10,10,]),'mode':([46,63,118,139,259,282,312,327,],[120,146,192,200,291,306,291,306,]),'statement':([0,30,286,310,311,315,328,331,332,339,],[12,100,12,12,100,12,100,12,100,100,]),'else_expression':([229,267,],[264,296,]),'constant_expression':([145,207,],[205,260,]),'index_mode_list':([283,],[308,]),'element_mode':([282,327,],[307,336,]),'then_clause':([102,],[185,]),'step_enumeration':([99,],[179,]),'mode_definition':([9,141,],[58,201,]),'assigning_operator':([8,],[51,]),'while_control':([24,95,],[98,176,]),'call_action':([0,20,24,30,35,36,43,51,57,61,68,73,80,88,89,91,92,93,145,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,184,186,189,191,194,196,197,199,207,228,231,233,236,237,262,265,266,275,278,281,283,286,297,298,310,311,315,326,328,331,332,339,],[26,82,26,26,82,82,82,82,82,26,82,82,82,82,82,82,82,26,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,26,26,26,82,82,82,82,82,82,82,82,82,26,82,26,26,82,82,82,26,82,82,82,26,82,82,26,26,26,82,26,26,26,26,]),'synonym_definition':([14,148,],[62,208,]),'assignment_action':([0,24,30,61,93,177,178,184,231,236,237,275,286,310,311,315,328,331,332,339,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'newmode_statement':([0,30,286,310,311,315,328,331,332,339,],[39,39,39,39,39,39,39,39,39,39,]),'statement_list':([0,286,310,315,331,],[30,311,328,332,339,]),'array_mode':([46,63,118,139,259,282,312,327,],[121,121,121,121,121,121,121,121,]),'program':([0,],[32,]),'discrete_range_mode':([46,63,118,139,196,235,259,272,282,283,312,326,327,],[128,128,128,128,128,128,128,128,128,128,128,128,128,]),'synonym_list':([14,],[64,]),'initialization':([120,],[193,]),'string_length':([195,],[246,]),'discrete_expression':([233,298,],[270,321,]),'expression':([20,35,36,43,51,57,88,89,91,92,145,150,186,189,191,194,196,197,199,207,228,233,262,265,266,278,281,283,297,298,326,],[90,101,103,106,131,138,169,103,106,103,206,210,240,243,243,245,243,253,255,206,263,271,292,294,103,255,305,243,103,271,243,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
