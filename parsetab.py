
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BAFAB016CFC6F011129557430B7DCE1B'
    
_lr_action_items = {'FOR':([20,],[76,]),'AND':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,144,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,144,-91,-89,-95,144,-99,144,144,-96,-92,-97,-101,-169,-59,-56,-75,-57,-76,]),'ARRAY':([24,42,45,101,108,181,190,240,285,307,332,],[-17,110,-15,110,110,110,-16,110,110,110,110,]),'MINUS':([8,12,13,14,16,23,24,25,38,46,48,50,52,53,54,55,56,57,58,60,61,62,63,65,66,68,69,70,71,72,82,83,87,88,90,93,130,132,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,167,169,170,171,173,177,178,185,191,192,193,196,198,199,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,230,231,232,233,237,250,257,258,262,263,284,286,287,294,298,303,317,331,],[-159,-160,47,47,-60,85,-17,47,-56,47,-60,-109,-73,-69,-66,47,47,-88,-70,-71,-107,-74,-72,-110,-108,141,-67,-56,-68,-65,47,47,-58,47,47,-131,-162,-105,-106,47,-111,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-170,-128,-126,-127,-130,-125,-129,47,47,47,47,47,47,-161,47,-78,141,141,-100,-98,141,141,141,141,141,-99,141,141,141,141,-97,-101,47,-169,47,-59,47,47,-56,-75,47,47,47,47,47,47,47,47,-57,-76,47,]),'IN':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,159,161,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,228,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,142,-67,-56,-68,-65,-58,-162,-105,-106,-111,227,-151,-170,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,142,-99,-90,142,-96,-92,-97,-101,269,-169,-59,-56,-75,-57,-76,]),'$end':([3,4,7,18,22,28,29,30,98,103,128,180,183,186,188,],[-5,-4,-8,0,-7,-6,-1,-2,-3,-113,-9,-24,-18,-179,-112,]),'DIVIDE':([8,12,16,23,24,38,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-60,84,-17,-56,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,140,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,140,140,-100,140,140,140,140,140,140,-99,140,140,140,140,140,-101,-169,-59,-56,-75,-57,-76,]),'READ':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[17,-5,-4,-8,17,17,17,-7,17,-6,17,-2,17,17,17,17,17,17,17,17,-115,17,17,17,17,-131,-3,-113,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-116,-128,-126,-127,-130,-125,-129,-24,-18,17,-179,-112,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LT':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,145,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,145,145,145,-95,145,-99,145,145,-96,145,-97,-101,-169,-59,-56,-75,-57,-76,]),'NEQ':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,151,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,151,-91,151,-95,151,-99,151,151,-96,-92,-97,-101,-169,-59,-56,-75,-57,-76,]),'LOWER':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[5,-5,-4,-8,5,5,5,-7,5,-6,5,-2,5,5,5,5,5,5,5,5,-115,5,5,5,5,-131,-3,-113,-9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-116,-128,-126,-127,-130,-125,-129,-24,-18,5,-179,-112,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'TIMES':([8,12,16,23,24,38,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-60,86,-17,-56,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,147,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,147,147,-100,147,147,147,147,147,147,-99,147,147,147,147,147,-101,-169,-59,-56,-75,-57,-76,]),'NOT':([8,12,13,14,24,25,46,48,50,52,53,54,55,56,57,58,60,61,62,63,65,66,68,69,70,71,72,82,83,87,88,90,93,130,132,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,167,169,170,171,173,177,178,185,191,192,193,196,198,199,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,230,231,232,233,237,250,257,258,262,263,284,286,287,294,298,303,317,331,],[-159,-160,49,49,-17,49,49,-60,-109,-73,-69,-66,49,49,-88,-70,-71,-107,-74,-72,-110,-108,149,-67,-56,-68,-65,49,49,-58,49,49,-131,-162,-105,-106,49,-111,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-170,-128,-126,-127,-130,-125,-129,49,49,49,49,49,49,-161,49,-78,-94,-93,-100,-98,-103,-91,-89,-95,149,-99,-90,-102,-96,-92,-97,-101,49,-169,49,-59,49,49,-56,-75,49,49,49,49,49,49,49,49,-57,-76,49,]),'CHAR':([24,42,45,101,108,181,190,191,227,240,269,284,285,307,331,332,],[-17,123,-15,123,123,123,-16,123,123,123,123,123,123,123,123,123,]),'RBRACKET':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,87,107,112,114,116,117,119,123,130,132,133,137,167,174,176,199,200,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,244,246,247,253,254,257,273,274,275,288,289,291,292,303,311,312,315,317,318,339,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-58,-37,-34,-32,-33,-36,-35,-38,-162,-105,-106,-111,-170,232,-63,-161,257,-63,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,285,-53,-54,-48,290,-75,-64,303,-62,-39,-40,317,-81,-57,-51,332,-43,-76,-82,-52,]),'DCL':([0,3,4,7,22,28,29,30,98,103,128,180,183,186,188,279,305,306,310,327,329,330,337,],[10,-5,-4,-8,-7,-6,10,-2,-3,-113,-9,-24,-18,-179,-112,10,10,10,10,10,10,10,10,]),'EQ':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,143,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,143,-91,143,-95,143,-99,143,143,-96,-92,-97,-101,-169,-59,-56,-75,-57,-76,]),'MOD':([8,12,16,23,24,38,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-60,92,-17,-56,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,153,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,153,153,-100,153,153,153,153,153,153,-99,153,153,153,153,153,-101,-169,-59,-56,-75,-57,-76,]),'GT':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,139,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,139,139,139,-95,139,-99,139,139,-96,139,-97,-101,-169,-59,-56,-75,-57,-76,]),'THEN':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,87,130,132,133,135,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,257,292,296,303,317,318,319,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-83,154,-58,-162,-105,-106,202,-111,-170,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-75,-81,202,-57,-76,-82,202,]),'PROC':([41,],[105,]),'NULL':([13,14,25,46,47,49,55,56,82,83,88,90,93,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,169,170,171,173,177,178,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[52,52,52,52,52,52,52,52,52,52,52,52,-131,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-128,-126,-127,-130,-125,-129,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'PLUS':([8,12,16,23,24,38,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-60,91,-17,-56,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,152,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,152,152,-100,-98,152,152,152,152,152,-99,152,152,152,152,-97,-101,-169,-59,-56,-75,-57,-76,]),'OD':([79,80,103,156,165,188,226,],[164,-115,-113,225,-116,-112,266,]),'ICONST':([13,14,25,46,47,49,55,56,82,83,88,90,93,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,169,170,171,173,177,178,185,191,192,193,194,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,300,331,],[53,53,53,53,53,53,53,53,53,53,53,53,-131,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-128,-126,-127,-130,-125,-129,53,53,53,53,253,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,323,53,]),'RPAREN':([8,12,24,46,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,83,87,107,112,113,114,115,116,117,118,119,121,123,124,125,126,129,130,131,132,133,136,137,167,168,187,189,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,242,243,251,252,256,257,275,277,278,287,288,289,290,292,303,304,308,313,314,315,316,317,318,328,340,],[-159,-160,-17,130,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,167,-58,-37,-34,-28,-32,-29,-33,-36,-45,-35,-41,-38,-46,-30,-31,199,-162,-163,-105,-106,204,-111,-170,230,241,-44,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,283,-184,288,289,-164,-75,-62,-186,-189,130,-39,-40,-47,-81,-57,-188,-185,-49,-55,-43,-163,-76,-82,336,-50,]),'CONCAT':([8,12,16,23,24,38,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-60,89,-17,-56,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,146,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-56,-75,-57,-76,]),'END':([3,4,7,22,28,30,98,103,128,180,183,186,188,305,327,330,337,],[-5,-4,-8,-7,-6,-2,-3,-113,-9,-24,-18,-179,-112,326,335,338,341,]),'IF':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,55,56,79,80,82,83,88,90,93,98,103,128,134,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[14,-5,-4,-8,55,55,14,-7,55,-6,14,-2,14,55,55,55,14,-115,55,55,55,55,-131,-3,-113,-9,55,14,14,14,-116,-128,-126,-127,-130,-125,-129,-24,-18,55,-179,-112,55,55,55,55,55,55,14,14,14,55,55,55,55,55,55,55,14,14,55,55,55,55,55,14,14,14,14,14,14,55,14,]),'DOWN':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,87,130,132,133,137,159,161,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,257,270,271,272,292,301,303,317,318,323,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-58,-162,-105,-106,-111,228,-151,-170,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-75,299,-155,-152,-81,324,-57,-76,-82,-153,]),'LPAREN':([5,11,13,14,15,17,21,24,25,26,31,33,36,38,40,46,47,49,55,56,70,82,83,88,90,93,105,107,111,112,114,115,116,117,119,121,123,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,169,170,171,173,177,178,185,191,192,193,196,198,202,229,231,233,237,246,249,250,258,262,263,267,268,281,284,286,287,288,289,294,297,298,331,],[-175,46,56,56,-171,-177,83,-17,56,-173,-178,-174,-172,-42,-176,56,56,56,56,56,-42,56,56,56,56,-131,187,-37,192,-34,-32,193,-33,-36,-35,-42,-38,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-128,-126,-127,-130,-125,-129,56,56,56,56,56,56,56,56,56,56,56,193,287,-42,56,56,56,193,-42,307,56,56,56,-39,-40,56,193,56,56,]),'FALSE':([13,14,25,46,47,49,55,56,82,83,88,90,93,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,169,170,171,173,177,178,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[58,58,58,58,58,58,58,58,58,58,58,58,-131,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-128,-126,-127,-130,-125,-129,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'TO':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,257,270,271,272,292,299,301,303,317,318,323,324,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-75,298,-155,-152,-81,298,298,-57,-76,-82,-153,298,]),'NUM':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[15,-5,-4,-8,15,15,15,-7,15,-6,15,-2,15,15,15,15,15,15,15,15,-115,15,15,15,15,-131,-3,-113,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-116,-128,-126,-127,-130,-125,-129,-24,-18,15,-179,-112,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'GE':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,138,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,138,138,138,-95,138,-99,138,138,-96,138,-97,-101,-169,-59,-56,-75,-57,-76,]),'REF':([24,42,45,101,108,181,190,240,285,307,332,],[-17,108,-15,108,108,108,-16,108,108,108,108,]),'COMMA':([8,12,24,42,43,44,45,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,87,95,96,97,99,100,101,107,112,113,114,115,116,117,118,119,121,122,123,124,125,126,129,130,131,132,133,137,167,168,174,176,189,190,195,197,199,200,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,234,235,236,238,239,240,242,243,244,246,247,255,256,257,273,275,276,277,278,288,289,290,292,303,304,308,311,312,313,314,315,316,317,318,339,340,],[-159,-160,-17,109,-10,127,-15,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-58,-25,179,109,182,-19,109,-37,-34,-28,-32,-29,-33,-36,-45,-35,-41,-13,-38,-46,-30,-31,198,-162,-163,-105,-106,-111,-170,198,231,-63,-44,-16,-12,-11,-161,231,-63,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-26,-27,-20,-22,-23,109,282,-184,284,-53,-54,-14,-164,-75,-64,-62,-21,-186,-189,-39,-40,-47,-81,-57,-188,-185,-51,331,-49,-55,-43,-163,-76,-82,-52,-50,]),'SCONST':([13,14,25,46,47,49,55,56,82,83,88,90,93,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,169,170,171,173,177,178,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[62,62,62,62,62,62,62,62,62,62,62,62,-131,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-128,-126,-127,-130,-125,-129,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'CCONST':([13,14,25,46,47,49,55,56,82,83,88,90,93,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,169,170,171,173,177,178,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[63,63,63,63,63,63,63,63,63,63,63,63,-131,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-128,-126,-127,-130,-125,-129,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'SEMI':([1,2,6,8,12,13,16,19,24,35,37,39,43,44,48,50,52,53,54,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,75,78,81,87,94,95,96,99,100,102,104,106,107,112,113,114,115,116,117,118,119,121,122,123,124,125,126,130,132,133,137,157,158,160,163,164,166,167,172,189,195,197,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,225,230,232,234,235,236,238,239,241,255,257,265,266,267,271,276,280,283,288,289,290,292,297,302,303,309,313,314,317,318,321,322,325,326,334,335,336,338,340,341,],[-119,-117,-118,-159,-160,-167,-120,-121,-17,-123,103,-122,-10,128,-60,-109,-73,-69,-66,-88,-70,-166,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-83,156,-142,-143,-58,-168,-25,180,183,-19,-165,186,188,-37,-34,-28,-32,-29,-33,-36,-45,-35,-41,-13,-38,-46,-30,-31,-162,-105,-106,-111,-146,-144,-145,-141,-140,-158,-170,-124,-44,-12,-11,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-133,-139,-169,-59,-26,-27,-20,-22,-23,279,-14,-75,-132,-138,-157,-155,-21,306,310,-39,-40,-47,-81,-156,-150,-57,329,-49,-55,-76,-82,-154,-148,-149,-183,-147,-182,-187,-181,-50,-180,]),'LBRACKET':([8,12,16,23,24,38,48,51,52,53,54,58,60,62,63,65,66,69,70,71,72,87,110,120,130,137,167,199,204,230,232,250,257,303,317,],[-159,-160,-60,90,-17,-56,-60,134,-73,-69,-66,-70,-71,-74,-72,-77,90,-67,-56,-68,-65,-58,191,194,-162,90,-170,-161,-78,-169,-59,-56,-75,-57,-76,]),'ARROW':([8,12,13,14,16,23,24,25,38,46,47,48,49,55,56,66,70,82,83,87,88,90,93,130,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,167,169,170,171,173,177,178,185,191,192,193,196,198,199,202,229,230,231,232,233,237,250,258,262,263,284,286,287,294,298,303,331,],[-159,-160,64,64,-60,87,-17,64,-56,64,64,-60,64,64,64,87,-56,64,64,-58,64,64,-131,-162,64,87,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-170,-128,-126,-127,-130,-125,-129,64,64,64,64,64,64,-161,64,64,-169,64,-59,64,64,-56,64,64,64,64,64,64,64,64,-57,64,]),'COLON':([8,9,12,24,38,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,77,87,130,132,133,137,167,175,176,199,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,245,248,250,257,292,303,316,317,318,],[-159,41,-160,-17,-114,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,162,-58,-162,-105,-106,-111,-170,233,-61,-161,258,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,286,-61,-56,-75,-81,-57,-61,-76,-82,]),'DO':([0,3,4,7,20,22,28,29,30,41,79,80,98,103,128,154,156,162,165,180,183,186,188,221,222,226,264,279,305,306,310,327,329,330,337,],[20,-5,-4,-8,20,-7,-6,20,-2,20,20,-115,-3,-113,-9,20,20,20,-116,-24,-18,-179,-112,20,20,20,20,20,20,20,20,20,20,20,20,]),'RETURNS':([241,283,],[281,281,]),'BY':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,257,270,271,272,292,303,317,318,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-75,300,-155,-152,-81,-57,-76,-82,]),'OR':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,148,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,148,-91,-89,-95,148,-99,-90,148,-96,-92,-97,-101,-169,-59,-56,-75,-57,-76,]),'LOC':([24,107,112,113,114,115,116,117,118,119,121,123,124,125,126,189,278,288,289,290,313,314,340,],[-17,-37,-34,-28,-32,-29,-33,-36,-45,-35,-41,-38,-46,-30,-31,-44,304,-39,-40,-47,-49,-55,-50,]),'TRUE':([13,14,25,46,47,49,55,56,82,83,88,90,93,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,169,170,171,173,177,178,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[60,60,60,60,60,60,60,60,60,60,60,60,-131,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-128,-126,-127,-130,-125,-129,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ID':([0,3,4,7,10,13,14,20,22,24,25,27,28,29,30,32,34,41,42,45,46,47,49,55,56,64,76,79,80,82,83,88,90,93,98,101,103,108,109,127,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,179,180,181,182,183,185,186,187,188,190,191,192,193,196,198,202,221,222,226,227,229,231,233,237,240,258,262,263,264,269,279,282,284,285,286,287,294,298,305,306,307,310,327,329,330,331,332,337,],[24,-5,-4,-8,24,24,24,24,-7,-17,24,24,-6,24,-2,24,24,24,24,-15,24,24,24,24,24,24,24,24,-115,24,24,24,24,-131,-3,24,-113,24,24,24,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-116,-128,-126,-127,-130,-125,-129,24,-24,24,24,-18,24,-179,24,-112,-16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'RESULT':([0,3,4,7,20,22,28,29,30,41,79,80,98,103,128,154,156,162,165,180,183,186,188,221,222,226,264,279,305,306,310,327,329,330,337,],[25,-5,-4,-8,25,-7,-6,25,-2,25,25,-115,-3,-113,-9,25,25,25,-116,-24,-18,-179,-112,25,25,25,25,25,25,25,25,25,25,25,25,]),'ELSE':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,80,87,103,130,132,133,137,154,155,165,167,188,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,257,259,261,292,303,317,318,320,333,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-115,-58,-113,-162,-105,-106,-111,-135,222,-116,-170,-112,-161,262,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-134,-169,-59,-75,-84,262,-81,-57,-76,-82,-86,-87,]),'SUCC':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[26,-5,-4,-8,26,26,26,-7,26,-6,26,-2,26,26,26,26,26,26,26,26,-115,26,26,26,26,-131,-3,-113,-9,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-116,-128,-126,-127,-130,-125,-129,-24,-18,26,-179,-112,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FI':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,80,87,103,130,132,133,137,154,155,165,167,188,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,230,232,257,260,264,292,293,295,303,317,318,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-115,-58,-113,-162,-105,-106,-111,-135,224,-116,-170,-112,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-134,-137,265,-169,-59,-75,292,-136,-81,318,-85,-57,-76,-82,]),'TYPE':([0,3,4,7,22,28,29,30,98,103,128,180,183,186,188,279,305,306,310,327,329,330,337,],[27,-5,-4,-8,-7,-6,27,-2,-3,-113,-9,-24,-18,-179,-112,27,27,27,27,27,27,27,27,]),'UPPER':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[33,-5,-4,-8,33,33,33,-7,33,-6,33,-2,33,33,33,33,33,33,33,33,-115,33,33,33,33,-131,-3,-113,-9,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-116,-128,-126,-127,-130,-125,-129,-24,-18,33,-179,-112,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'RETURN':([0,3,4,7,20,22,28,29,30,41,79,80,98,103,128,154,156,162,165,180,183,186,188,221,222,226,264,279,305,306,310,327,329,330,337,],[13,-5,-4,-8,13,-7,-6,13,-2,13,13,-115,-3,-113,-9,13,13,13,-116,-24,-18,-179,-112,13,13,13,13,13,13,13,13,13,13,13,13,]),'PRINT':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[31,-5,-4,-8,31,31,31,-7,31,-6,31,-2,31,31,31,31,31,31,31,31,-115,31,31,31,31,-131,-3,-113,-9,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-116,-128,-126,-127,-130,-125,-129,-24,-18,31,-179,-112,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'SYN':([0,3,4,7,22,28,29,30,98,103,128,180,183,186,188,279,305,306,310,327,329,330,337,],[32,-5,-4,-8,-7,-6,32,-2,-3,-113,-9,-24,-18,-179,-112,32,32,32,32,32,32,32,32,]),'EXIT':([0,3,4,7,20,22,28,29,30,41,79,80,98,103,128,154,156,162,165,180,183,186,188,221,222,226,264,279,305,306,310,327,329,330,337,],[34,-5,-4,-8,34,-7,-6,34,-2,34,34,-115,-3,-113,-9,34,34,34,-116,-24,-18,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,]),'PRED':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[36,-5,-4,-8,36,36,36,-7,36,-6,36,-2,36,36,36,36,36,36,36,36,-115,36,36,36,36,-131,-3,-113,-9,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-116,-128,-126,-127,-130,-125,-129,-24,-18,36,-179,-112,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LE':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,68,69,70,71,72,87,130,132,133,137,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,250,257,303,317,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,150,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,-78,-94,-93,-100,-98,150,150,150,-95,150,-99,150,150,-96,150,-97,-101,-169,-59,-56,-75,-57,-76,]),'WHILE':([8,12,20,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,78,87,107,112,114,116,117,119,123,130,132,133,137,157,158,160,167,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,257,267,271,288,289,292,297,302,303,317,318,321,322,325,334,],[-159,-160,82,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,82,-58,-37,-34,-32,-33,-36,-35,-38,-162,-105,-106,-111,-146,-144,-145,-170,-161,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-75,-157,-155,-39,-40,-81,-156,-150,-57,-76,-82,-154,-148,-149,-147,]),'INT':([24,42,45,101,108,181,190,191,227,240,269,284,285,307,331,332,],[-17,117,-15,117,117,117,-16,117,117,117,117,117,117,117,117,117,]),'ELSIF':([8,12,24,48,50,52,53,54,57,58,60,61,62,63,65,66,67,68,69,70,71,72,87,130,132,133,137,167,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,230,232,257,259,261,292,303,317,318,320,333,],[-159,-160,-17,-60,-109,-73,-69,-66,-88,-70,-71,-107,-74,-72,-110,-108,-80,-79,-67,-56,-68,-65,-58,-162,-105,-106,-111,-170,-161,263,-78,-94,-93,-100,-98,-103,-91,-89,-95,-104,-99,-90,-102,-96,-92,-97,-101,-169,-59,-75,-84,294,-81,-57,-76,-82,-86,-87,]),'BOOL':([24,42,45,101,108,181,190,191,227,240,269,284,285,307,331,332,],[-17,107,-15,107,107,107,-16,107,107,107,107,107,107,107,107,107,]),'LENGTH':([0,3,4,7,13,14,20,22,25,28,29,30,41,46,47,49,55,56,64,79,80,82,83,88,90,93,98,103,128,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,165,169,170,171,173,177,178,180,183,185,186,188,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[40,-5,-4,-8,40,40,40,-7,40,-6,40,-2,40,40,40,40,40,40,40,40,-115,40,40,40,40,-131,-3,-113,-9,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-116,-128,-126,-127,-130,-125,-129,-24,-18,40,-179,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ASSIGN':([8,12,16,23,24,38,45,70,84,85,86,87,89,91,92,97,101,107,112,113,114,115,116,117,118,119,121,122,123,124,125,126,130,159,161,167,184,189,190,199,230,232,288,289,290,303,313,314,340,],[-159,-160,-60,93,-17,-56,-15,-56,169,170,171,-58,173,177,178,181,185,-37,-34,-28,-32,-29,-33,-36,-45,-35,-41,196,-38,-46,-30,-31,-162,229,-151,-170,237,-44,-16,-161,-169,-59,-39,-40,-47,-57,-49,-55,-50,]),'CHARS':([24,42,45,101,108,181,190,240,285,307,332,],[-17,120,-15,120,120,120,-16,120,120,120,120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'if_action':([0,20,29,41,79,154,156,162,221,222,226,264,279,305,306,310,327,329,330,337,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'elsif_expression':([203,],[261,]),'expression_list':([90,134,],[174,200,]),'index_mode_list':([284,],[312,]),'binop':([13,14,25,46,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[68,68,68,68,68,68,68,68,68,68,68,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'else_expression':([203,261,],[260,293,]),'newmode_list':([27,],[96,]),'parameter_spec':([240,307,],[277,328,]),'procedure_call':([0,13,14,20,25,29,41,46,47,49,55,56,64,79,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,185,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'referenced_location':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'character_mode':([42,101,108,181,191,227,240,269,284,285,307,331,332,],[112,112,112,112,112,112,112,112,112,112,112,112,112,]),'lower_bound':([90,191,192,193,284,287,331,],[175,245,245,245,245,245,245,]),'range_enumeration':([76,],[157,]),'array_primitive_value':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'start_value':([229,],[270,]),'then_expression':([135,296,319,],[203,320,333,]),'iteration':([76,],[158,]),'declaration_statement':([0,29,279,305,306,310,327,329,330,337,],[4,4,4,4,4,4,4,4,4,4,]),'string_mode':([42,101,108,181,240,285,307,332,],[118,118,118,118,118,118,118,118,]),'synonym_statement':([0,29,279,305,306,310,327,329,330,337,],[3,3,3,3,3,3,3,3,3,3,]),'constant_expression':([185,237,],[238,276,]),'else_clause':([155,],[223,]),'element_mode':([285,332,],[313,340,]),'assigning_operator':([23,],[88,]),'reference_mode':([42,101,108,181,240,285,307,332,],[125,125,125,125,125,125,125,125,]),'mode_definition':([27,179,],[95,234,]),'loop_counter':([76,],[159,]),'boolean_expression':([14,55,82,263,294,],[74,135,166,296,319,]),'operand1':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[61,61,61,61,132,133,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'exit_action':([0,20,29,41,79,154,156,162,221,222,226,264,279,305,306,310,327,329,330,337,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'builtin_name':([0,13,14,20,25,29,41,46,47,49,55,56,64,79,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,185,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'procedure_statement':([0,29,279,305,306,310,327,329,330,337,],[22,22,22,22,22,22,22,22,22,22,]),'location':([0,13,14,20,25,29,41,46,47,49,55,56,64,79,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,185,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[23,66,66,23,66,23,23,66,66,66,66,66,137,23,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,23,23,23,66,66,66,66,66,66,66,23,23,23,66,66,66,66,66,66,66,23,23,66,66,66,66,66,23,23,23,23,23,23,66,23,]),'conditional_expression':([13,14,25,46,55,56,82,83,88,90,134,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'action_statement':([0,20,29,79,154,156,221,222,226,264,279,305,306,310,327,329,330,337,],[7,80,7,165,80,80,165,80,165,165,7,7,7,7,7,7,7,7,]),'discrete_mode_name':([0,13,14,20,25,29,41,42,46,47,49,55,56,64,79,82,83,88,90,101,108,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,181,185,191,192,193,196,198,202,221,222,226,227,229,231,233,237,240,258,262,263,264,269,279,284,285,286,287,294,298,305,306,307,310,327,329,330,331,332,337,],[11,11,11,11,11,11,11,111,11,11,11,11,11,11,11,11,11,11,11,111,111,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,111,11,249,11,11,11,11,11,11,11,11,111,11,11,11,11,111,11,11,11,11,111,11,249,111,11,11,11,11,11,11,111,11,11,11,11,249,111,11,]),'parameter_list':([46,83,287,],[129,168,129,]),'integer_mode':([42,101,108,181,191,227,240,269,284,285,307,331,332,],[114,114,114,114,114,114,114,114,114,114,114,114,114,]),'newmode_statement':([0,29,279,305,306,310,327,329,330,337,],[28,28,28,28,28,28,28,28,28,28,]),'string_length':([194,],[254,]),'statement':([0,29,279,305,306,310,327,329,330,337,],[30,98,30,98,30,30,98,30,98,98,]),'expression':([13,14,25,46,55,56,82,83,88,90,134,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[59,73,94,131,73,136,73,131,172,176,201,239,248,248,248,255,256,259,271,273,275,239,291,295,73,248,275,316,73,271,248,]),'identifier_list':([10,27,32,127,179,182,187,282,],[42,97,101,42,97,101,240,240,]),'result_action':([0,20,29,41,79,154,156,162,221,222,226,264,279,305,306,310,327,329,330,337,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'step_enumeration':([76,],[160,]),'return_action':([0,20,29,41,79,154,156,162,221,222,226,264,279,305,306,310,327,329,330,337,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'mode':([42,101,108,181,240,285,307,332,],[122,184,189,235,278,314,278,314,]),'composite_mode':([42,101,108,181,240,285,307,332,],[126,126,126,126,126,126,126,126,]),'assignment_action':([0,20,29,41,79,154,156,162,221,222,226,264,279,305,306,310,327,329,330,337,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'control_part':([20,],[75,]),'synonym_definition':([32,182,],[100,236,]),'index_mode':([191,284,331,],[244,311,339,]),'action_statement_list':([20,154,156,222,],[79,221,226,264,]),'do_action':([0,20,29,41,79,154,156,162,221,222,226,264,279,305,306,310,327,329,330,337,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'label_id':([0,20,29,79,154,156,221,222,226,264,279,305,306,310,327,329,330,337,],[9,77,9,77,77,77,77,77,77,77,9,9,9,9,9,9,9,9,]),'value_array_element':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'formal_parameter':([187,282,],[243,308,]),'mode_name':([42,101,108,181,240,285,307,332,],[113,113,113,113,113,113,113,113,]),'then_clause':([74,],[155,]),'literal_range':([191,192,193,284,287,331,],[247,251,252,247,251,247,]),'upper_bound':([233,286,],[274,315,]),'procedure_definition':([41,],[104,]),'statement_list':([0,279,306,310,329,],[29,305,327,330,337,]),'operand':([13,14,25,46,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'array_mode':([42,101,108,181,240,285,307,332,],[124,124,124,124,124,124,124,124,]),'identifier':([0,10,13,14,20,25,27,29,32,34,41,42,46,47,49,55,56,64,76,79,82,83,88,90,101,108,109,127,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,179,181,182,185,187,191,192,193,196,198,202,221,222,226,227,229,231,233,237,240,258,262,263,264,269,279,282,284,285,286,287,294,298,305,306,307,310,327,329,330,331,332,337,],[38,45,70,70,38,70,45,38,45,102,70,121,70,70,70,70,70,70,161,38,70,70,70,70,121,121,190,45,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,38,38,70,45,121,45,70,45,250,70,70,70,70,70,38,38,38,268,70,70,70,70,121,70,70,70,38,268,38,45,250,121,70,70,70,70,38,38,121,38,38,38,38,250,121,38,]),'call_action':([0,13,14,20,25,29,41,46,47,49,55,56,64,79,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,185,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[16,48,48,16,48,16,16,48,48,48,48,48,48,16,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,16,16,16,48,48,48,48,48,48,48,16,16,16,48,48,48,48,48,48,48,16,16,48,48,48,48,48,16,16,16,16,16,16,48,16,]),'builtin_call':([0,13,14,20,25,29,41,46,47,49,55,56,64,79,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,162,185,191,192,193,196,198,202,221,222,226,229,231,233,237,258,262,263,264,279,284,286,287,294,298,305,306,310,327,329,330,331,337,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'program':([0,],[18,]),'primitive_value':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'declaration':([10,127,],[43,197,]),'for_control':([20,],[78,]),'formal_parameter_list':([187,],[242,]),'end_value':([270,299,301,324,],[302,322,325,334,]),'synonym_list':([32,],[99,]),'initialization':([122,],[195,]),'discrete_expression':([229,298,],[272,321,]),'literal':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'boolean_mode':([42,101,108,181,191,227,240,269,284,285,307,331,332,],[116,116,116,116,116,116,116,116,116,116,116,116,116,]),'result_spec':([241,283,],[280,309,]),'discrete_range_mode':([42,101,108,181,191,227,240,269,284,285,307,331,332,],[119,119,119,119,119,119,119,119,119,119,119,119,119,]),'while_control':([20,78,],[81,163,]),'value_array_slice':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'action':([0,20,29,41,79,154,156,162,221,222,226,264,279,305,306,310,327,329,330,337,],[37,37,37,106,37,37,37,106,37,37,37,37,37,37,37,37,37,37,37,37,]),'discrete_mode':([42,101,108,181,191,227,240,269,284,285,307,331,332,],[115,115,115,115,246,267,115,297,246,115,115,246,115,]),'declaration_list':([10,],[44,]),'parenthesized_expression':([13,14,25,46,47,49,55,56,82,83,88,90,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,185,191,192,193,196,198,202,229,231,233,237,258,262,263,284,286,287,294,298,331,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'step_value':([270,],[301,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',516),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',521),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',522),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',528),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',529),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',530),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',542),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',547),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',552),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',557),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',562),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',567),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',568),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',576),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',582),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',583),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',588),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',589),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',597),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',598),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',609),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',613),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',614),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',626),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',627),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',641),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',642),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',654),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',655),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',656),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',669),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',670),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',679),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',683),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',687),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',688),
]
