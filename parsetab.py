
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5B5E7D36E3DF35665EF28DA887536C8B'
    
_lr_action_items = {'DCL':([0,3,13,24,28,34,35,39,45,74,104,164,181,232,233,298,318,321,328,329,335,],[1,-5,1,-2,-4,-7,-6,-8,-113,-3,-9,-18,-24,-112,-179,1,1,1,1,1,1,]),'COLON':([15,20,21,33,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,79,95,126,144,147,150,174,175,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,219,221,234,239,243,245,246,259,287,301,303,309,311,],[-17,-160,87,-114,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,159,-58,-106,-105,-111,-162,-61,236,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,260,-161,-59,-169,-61,279,-56,-75,-81,-57,-61,-82,-76,]),'NOT':([9,15,20,30,31,37,47,48,49,50,51,53,54,56,58,60,61,62,63,65,66,67,68,70,71,72,73,81,90,92,94,95,101,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,167,171,172,176,177,179,180,184,189,191,192,193,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,220,221,223,228,234,235,236,239,246,253,256,259,260,279,280,281,285,292,301,311,324,],[46,-17,-160,46,46,-159,-60,-69,46,-65,136,-110,-72,-70,-56,-108,46,-109,-74,-71,-67,-88,-73,-107,-66,-68,46,46,46,-131,46,-58,46,-106,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-105,-111,46,-162,46,-126,-128,-129,-130,-125,-127,-170,46,46,46,46,46,-90,-101,-95,-100,136,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,46,-161,46,46,-59,46,46,-169,-56,46,46,-75,46,46,46,46,46,46,-57,-76,46,]),'REF':([15,42,44,86,108,183,194,273,282,323,327,],[-17,108,-15,108,108,108,-16,108,108,108,108,]),'RPAREN':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,73,95,101,107,109,111,112,113,114,115,116,117,119,120,121,124,125,126,144,147,148,150,151,152,184,185,188,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,231,234,239,244,251,259,261,270,271,275,277,278,280,283,287,299,300,301,302,303,306,307,309,311,320,322,331,333,],[-17,-160,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,150,-58,184,-31,-32,-38,-28,-45,-29,-37,-46,-30,-35,-33,-34,-41,-36,-106,-105,-111,217,-162,221,-163,-170,239,-44,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,272,-59,-169,278,283,-75,-164,-183,296,-62,-47,-40,150,-39,-81,-188,-185,-57,-43,-163,-55,-49,-82,-76,-184,-187,-50,336,]),'READ':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[4,-5,4,4,4,-2,-4,4,4,-7,-6,-8,-113,4,4,4,4,4,4,-3,4,4,-115,4,4,-131,4,4,-9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-116,-18,4,-126,-128,-129,-130,-125,-127,-24,4,4,4,4,4,4,4,4,4,4,4,-112,-179,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'RETURNS':([296,],[317,]),'IF':([0,3,9,13,16,24,28,30,31,34,35,39,45,49,61,73,74,81,82,83,87,90,92,94,101,104,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[9,-5,49,9,9,-2,-4,49,49,-7,-6,-8,-113,49,49,49,-3,49,9,-115,9,49,-131,49,49,-9,9,49,9,9,-116,-18,49,-126,-128,-129,-130,-125,-127,-24,49,49,49,49,49,9,9,49,49,9,49,-112,-179,49,49,49,49,9,49,49,49,49,49,49,9,9,9,49,9,9,9,]),'ICONST':([9,30,31,46,49,52,61,73,81,90,92,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,171,172,176,177,179,180,187,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,290,292,324,],[48,48,48,48,48,48,48,48,48,48,-131,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-126,-128,-129,-130,-125,-127,241,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,312,48,48,]),'RETURN':([0,3,13,16,24,28,34,35,39,45,74,82,83,87,104,145,159,160,163,164,181,213,214,225,232,233,257,298,318,321,328,329,335,],[31,-5,31,31,-2,-4,-7,-6,-8,-113,-3,31,-115,31,-9,31,31,31,-116,-18,-24,31,31,31,-112,-179,31,31,31,31,31,31,31,]),'RESULT':([0,3,13,16,24,28,34,35,39,45,74,82,83,87,104,145,159,160,163,164,181,213,214,225,232,233,257,298,318,321,328,329,335,],[30,-5,30,30,-2,-4,-7,-6,-8,-113,-3,30,-115,30,-9,30,30,30,-116,-18,-24,30,30,30,-112,-179,30,30,30,30,30,30,30,]),'LE':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,139,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,139,-101,-95,-100,139,139,139,-94,139,-93,139,-96,-98,-99,-97,139,-78,-161,-59,-169,-56,-75,-57,-76,]),'SEMI':([2,5,6,11,15,18,20,22,31,32,37,40,41,43,47,48,50,51,53,54,56,58,59,60,62,63,65,66,67,68,69,70,71,72,75,76,77,80,84,85,95,98,100,102,103,107,109,110,111,112,113,114,115,116,117,119,120,121,124,125,126,144,147,150,153,154,156,157,161,162,169,170,178,184,186,188,190,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,216,217,221,226,227,229,230,234,237,238,239,242,258,259,262,266,268,269,272,277,278,283,287,293,295,296,301,306,307,309,311,313,315,316,319,326,330,331,334,336,337,],[-120,45,-118,-121,-17,-122,-160,-123,-167,-119,-159,-117,104,-10,-60,-69,-65,-79,-110,-72,-70,-56,-83,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-165,-143,-142,160,-19,164,-58,181,-25,-168,-166,-31,-32,-13,-38,-28,-45,-29,-37,-46,-30,-35,-33,-34,-41,-36,-106,-105,-111,-162,-141,-145,-146,-144,-158,-140,232,233,-124,-170,-11,-44,-12,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-133,-78,-161,-139,-20,-22,-23,-59,-26,-27,-169,-14,-132,-75,-157,-155,-138,-21,298,-47,-40,-39,-81,-150,-156,318,-57,-55,-49,-82,-76,-149,-154,-148,329,-147,-182,-50,-181,-186,-180,]),'CHARS':([15,42,44,86,108,183,194,273,282,323,327,],[-17,106,-15,106,106,106,-16,106,106,106,106,]),'ELSE':([15,20,37,45,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,83,95,126,144,145,146,147,150,163,184,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,217,221,232,234,239,252,254,259,287,301,309,310,311,325,],[-17,-160,-159,-113,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-115,-58,-106,-105,-135,214,-111,-162,-116,-170,253,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-134,-78,-161,-112,-59,-169,-84,253,-75,-81,-57,-82,-86,-76,-87,]),'PLUS':([2,15,20,23,33,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-60,-17,-160,96,-56,-159,-60,-69,-65,142,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,142,-101,142,-100,142,142,142,142,142,142,142,142,-98,-99,-97,142,-78,-161,-59,-169,-56,-75,-57,-76,]),'PRINT':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[8,-5,8,8,8,-2,-4,8,8,-7,-6,-8,-113,8,8,8,8,8,8,-3,8,8,-115,8,8,-131,8,8,-9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-116,-18,8,-126,-128,-129,-130,-125,-127,-24,8,8,8,8,8,8,8,8,8,8,8,-112,-179,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'OR':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,128,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,-90,-101,-95,-100,128,128,-89,-94,128,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-56,-75,-57,-76,]),'MINUS':([2,9,15,20,23,30,31,33,37,47,48,49,50,51,53,54,56,58,60,61,62,63,65,66,67,68,70,71,72,73,81,90,92,94,95,101,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,167,171,172,176,177,179,180,184,189,191,192,193,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,220,221,223,228,234,235,236,239,246,253,256,259,260,279,280,281,285,292,301,311,324,],[-60,52,-17,-160,88,52,52,-56,-159,-60,-69,52,-65,140,-110,-72,-70,-56,-108,52,-109,-74,-71,-67,-88,-73,-107,-66,-68,52,52,52,-131,52,-58,52,-106,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-105,-111,52,-162,52,-126,-128,-129,-130,-125,-127,-170,52,52,52,52,52,140,-101,140,-100,140,140,140,140,140,140,140,140,-98,-99,-97,140,-78,52,-161,52,52,-59,52,52,-169,-56,52,52,-75,52,52,52,52,52,52,-57,-76,52,]),'TO':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,259,264,265,266,287,291,294,301,309,311,312,314,],[-17,-160,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-58,-106,-105,-111,-162,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-75,-152,292,-155,-81,292,292,-57,-82,-76,-153,292,]),'ARRAY':([15,42,44,86,108,183,194,273,282,323,327,],[-17,118,-15,118,118,118,-16,118,118,118,118,]),'BY':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,259,264,265,266,287,301,309,311,],[-17,-160,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-58,-106,-105,-111,-162,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-75,-152,290,-155,-81,-57,-82,-76,]),'LOC':([15,107,109,111,112,113,114,115,116,117,119,120,121,124,125,188,277,278,283,299,306,307,331,],[-17,-31,-32,-38,-28,-45,-29,-37,-46,-30,-35,-33,-34,-41,-36,-44,-47,-40,-39,322,-55,-49,-50,]),'EXIT':([0,3,13,16,24,28,34,35,39,45,74,82,83,87,104,145,159,160,163,164,181,213,214,225,232,233,257,298,318,321,328,329,335,],[14,-5,14,14,-2,-4,-7,-6,-8,-113,-3,14,-115,14,-9,14,14,14,-116,-18,-24,14,14,14,-112,-179,14,14,14,14,14,14,14,]),'ID':([0,1,3,9,13,14,15,16,19,24,26,28,30,31,34,35,39,42,44,45,46,49,52,57,61,73,74,78,81,82,83,86,87,90,92,94,101,104,105,108,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,165,167,171,172,176,177,179,180,181,182,183,189,191,192,193,194,195,213,214,220,222,223,225,228,231,232,233,235,236,253,256,257,260,267,273,279,280,281,282,285,292,297,298,318,321,323,324,327,328,329,335,],[15,15,-5,15,15,15,-17,15,15,-2,15,-4,15,15,-7,-6,-8,15,-15,-113,15,15,15,15,15,15,-3,15,15,15,-115,15,15,15,-131,15,15,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-116,-18,15,15,-126,-128,-129,-130,-125,-127,-24,15,15,15,15,15,15,-16,15,15,15,15,15,15,15,15,15,-112,-179,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'CCONST':([9,30,31,46,49,52,61,73,81,90,92,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,171,172,176,177,179,180,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[54,54,54,54,54,54,54,54,54,54,-131,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-126,-128,-129,-130,-125,-127,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'END':([3,24,28,34,35,39,45,74,104,164,181,232,233,321,328,335,],[-5,-2,-4,-7,-6,-8,-113,-3,-9,-18,-24,-112,-179,330,334,337,]),'DO':([0,3,13,16,24,28,34,35,39,45,74,82,83,87,104,145,159,160,163,164,181,213,214,225,232,233,257,298,318,321,328,329,335,],[16,-5,16,16,-2,-4,-7,-6,-8,-113,-3,16,-115,16,-9,16,16,16,-116,-18,-24,16,16,16,-112,-179,16,16,16,16,16,16,16,]),'LOWER':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[17,-5,17,17,17,-2,-4,17,17,-7,-6,-8,-113,17,17,17,17,17,17,-3,17,17,-115,17,17,-131,17,17,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-116,-18,17,-126,-128,-129,-130,-125,-127,-24,17,17,17,17,17,17,17,17,17,17,17,-112,-179,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'GT':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,137,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,137,-101,-95,-100,137,137,137,-94,137,-93,137,-96,-98,-99,-97,137,-78,-161,-59,-169,-56,-75,-57,-76,]),'EQ':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,138,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,138,-101,-95,-100,138,138,138,-94,138,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-56,-75,-57,-76,]),'FOR':([16,],[78,]),'LT':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,130,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,130,-101,-95,-100,130,130,130,-94,130,-93,130,-96,-98,-99,-97,130,-78,-161,-59,-169,-56,-75,-57,-76,]),'FALSE':([9,30,31,46,49,52,61,73,81,90,92,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,171,172,176,177,179,180,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[56,56,56,56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-126,-128,-129,-130,-125,-127,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'NULL':([9,30,31,46,49,52,61,73,81,90,92,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,171,172,176,177,179,180,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[68,68,68,68,68,68,68,68,68,68,-131,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-126,-128,-129,-130,-125,-127,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'SCONST':([9,30,31,46,49,52,61,73,81,90,92,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,171,172,176,177,179,180,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[63,63,63,63,63,63,63,63,63,63,-131,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-126,-128,-129,-130,-125,-127,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ARROW':([2,9,15,20,23,30,31,33,37,46,47,49,52,58,60,61,73,81,90,92,94,95,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,149,150,167,171,172,176,177,179,180,184,189,191,192,193,195,220,221,223,228,234,235,236,239,246,253,256,260,279,280,281,285,292,301,324,],[-60,57,-17,-160,95,57,57,-56,-159,57,-60,57,57,-56,95,57,57,57,57,-131,57,-58,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,95,57,-162,57,-126,-128,-129,-130,-125,-127,-170,57,57,57,57,57,57,-161,57,57,-59,57,57,-169,-56,57,57,57,57,57,57,57,57,-57,57,]),'WHILE':([15,16,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,77,95,109,111,115,119,120,121,125,126,144,147,150,154,156,157,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,259,262,266,278,283,287,293,295,301,309,311,313,315,316,326,],[-17,81,-160,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,81,-58,-32,-38,-37,-35,-33,-34,-36,-106,-105,-111,-162,-145,-146,-144,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-75,-157,-155,-40,-39,-81,-150,-156,-57,-82,-76,-149,-154,-148,-147,]),'LPAREN':([4,8,9,10,12,15,17,25,27,29,30,31,33,36,38,46,49,52,58,61,73,81,90,92,94,101,109,111,114,115,119,120,121,122,124,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,168,171,172,176,177,179,180,189,191,192,193,195,220,223,228,235,236,246,247,250,253,256,260,262,263,278,279,280,281,283,285,292,295,317,324,],[-177,-178,61,73,-171,-17,-175,-172,101,-173,61,61,-42,-176,-174,61,61,61,-42,61,61,61,61,-131,61,61,-32,-38,191,-37,-35,-33,-34,193,-42,-36,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,231,-126,-128,-129,-130,-125,-127,61,61,61,61,61,61,61,61,61,61,-42,280,191,61,61,61,191,-42,-40,61,61,61,-39,61,61,191,327,61,]),'DIVIDE':([2,15,20,23,33,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-60,-17,-160,89,-56,-159,-60,-69,-65,131,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,131,-101,131,-100,131,131,131,131,131,131,131,131,131,-99,131,131,-78,-161,-59,-169,-56,-75,-57,-76,]),'SUCC':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[29,-5,29,29,29,-2,-4,29,29,-7,-6,-8,-113,29,29,29,29,29,29,-3,29,29,-115,29,29,-131,29,29,-9,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-116,-18,29,-126,-128,-129,-130,-125,-127,-24,29,29,29,29,29,29,29,29,29,29,29,-112,-179,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'FI':([15,20,37,45,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,83,95,126,144,145,146,147,150,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,221,232,234,239,255,257,259,284,286,287,301,309,311,],[-17,-160,-159,-113,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-115,-58,-106,-105,-135,216,-111,-162,-116,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-134,-137,258,-78,-161,-112,-59,-169,287,-136,-75,-85,309,-81,-57,-82,-76,]),'CHAR':([15,42,44,86,108,183,192,194,222,267,273,281,282,323,324,327,],[-17,111,-15,111,111,111,111,-16,111,111,111,111,111,111,111,111,]),'TRUE':([9,30,31,46,49,52,61,73,81,90,92,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,171,172,176,177,179,180,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[65,65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-126,-128,-129,-130,-125,-127,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'MOD':([2,15,20,23,33,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-60,-17,-160,91,-56,-159,-60,-69,-65,129,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,129,-101,129,-100,129,129,129,129,129,129,129,129,129,-99,129,129,-78,-161,-59,-169,-56,-75,-57,-76,]),'CONCAT':([2,15,20,23,33,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-60,-17,-160,93,-56,-159,-60,-69,-65,132,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-56,-75,-57,-76,]),'PRED':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[25,-5,25,25,25,-2,-4,25,25,-7,-6,-8,-113,25,25,25,25,25,25,-3,25,25,-115,25,25,-131,25,25,-9,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-116,-18,25,-126,-128,-129,-130,-125,-127,-24,25,25,25,25,25,25,25,25,25,25,25,-112,-179,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'OD':([45,82,83,160,163,225,232,],[-113,162,-115,226,-116,268,-112,]),'TYPE':([0,3,13,24,28,34,35,39,45,74,104,164,181,232,233,298,318,321,328,329,335,],[26,-5,26,-2,-4,-7,-6,-8,-113,-3,-9,-18,-24,-112,-179,26,26,26,26,26,26,]),'BOOL':([15,42,44,86,108,183,192,194,222,267,273,281,282,323,324,327,],[-17,115,-15,115,115,115,115,-16,115,115,115,115,115,115,115,115,]),'DOWN':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,95,126,144,147,150,155,158,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,259,264,265,266,287,291,301,309,311,312,],[-17,-160,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-58,-106,-105,-111,-162,-151,224,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-75,-152,294,-155,-81,314,-57,-82,-76,-153,]),'IN':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,155,158,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,224,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,133,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-151,222,-170,-90,-101,-95,-100,133,-103,-89,-94,133,-93,-91,-96,-98,-99,-97,-92,-78,-161,267,-59,-169,-56,-75,-57,-76,]),'AND':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,134,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,134,-101,-95,-100,134,134,-89,-94,134,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-56,-75,-57,-76,]),'THEN':([15,20,37,47,48,50,51,53,54,55,56,58,59,60,62,63,65,66,67,68,69,70,71,72,95,126,127,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,259,287,288,301,308,309,311,],[-17,-160,-159,-60,-69,-65,-79,-110,-72,145,-70,-56,-83,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-58,-106,195,-105,-111,-162,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-75,-81,195,-57,195,-82,-76,]),'SYN':([0,3,13,24,28,34,35,39,45,74,104,164,181,232,233,298,318,321,328,329,335,],[19,-5,19,-2,-4,-7,-6,-8,-113,-3,-9,-18,-24,-112,-179,19,19,19,19,19,19,]),'$end':([3,7,13,24,28,34,35,39,45,74,104,164,181,232,233,],[-5,0,-1,-2,-4,-7,-6,-8,-113,-3,-9,-18,-24,-112,-179,]),'PROC':([87,],[168,]),'UPPER':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[38,-5,38,38,38,-2,-4,38,38,-7,-6,-8,-113,38,38,38,38,38,38,-3,38,38,-115,38,38,-131,38,38,-9,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-116,-18,38,-126,-128,-129,-130,-125,-127,-24,38,38,38,38,38,38,38,38,38,38,38,-112,-179,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LBRACKET':([2,15,20,23,33,37,47,48,50,53,54,56,58,60,63,64,65,66,68,71,72,95,106,118,147,150,184,217,221,234,239,246,259,301,311,],[-60,-17,-160,90,-56,-159,-60,-69,-65,-77,-72,-70,-56,90,-74,149,-71,-67,-73,-66,-68,-58,187,192,90,-162,-170,-78,-161,-59,-169,-56,-75,-57,-76,]),'GE':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,135,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,135,-101,-95,-100,135,135,135,-94,135,-93,135,-96,-98,-99,-97,135,-78,-161,-59,-169,-56,-75,-57,-76,]),'RBRACKET':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,95,109,111,115,119,120,121,125,126,144,147,150,173,174,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,218,219,221,234,239,240,241,248,249,250,259,274,275,276,278,283,287,289,301,302,304,305,309,311,332,],[-17,-160,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-58,-32,-38,-37,-35,-33,-34,-36,-106,-105,-111,-162,234,-63,-170,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,259,-63,-161,-59,-169,277,-48,-54,282,-53,-75,-64,-62,301,-40,-39,-81,311,-57,-43,323,-51,-82,-76,-52,]),'COMMA':([15,20,37,41,42,43,44,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,84,85,86,95,98,99,100,107,109,110,111,112,113,114,115,116,117,119,120,121,124,125,126,144,147,150,151,152,173,174,184,185,186,188,190,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,218,219,221,227,229,230,234,237,238,239,242,248,249,250,259,261,269,270,271,273,274,275,277,278,283,287,299,300,301,302,303,304,305,306,307,309,311,320,322,331,332,],[-17,-160,-159,105,123,-10,-15,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-19,165,123,-58,182,123,-25,-31,-32,-13,-38,-28,-45,-29,-37,-46,-30,-35,-33,-34,-41,-36,-106,-105,-111,-162,220,-163,235,-63,-170,220,-11,-44,-12,-16,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,235,-63,-161,-20,-22,-23,-59,-26,-27,-169,-14,-54,281,-53,-75,-164,-21,-183,297,123,-64,-62,-47,-40,-39,-81,-188,-185,-57,-43,-163,324,-51,-55,-49,-82,-76,-184,-187,-50,-52,]),'LENGTH':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[36,-5,36,36,36,-2,-4,36,36,-7,-6,-8,-113,36,36,36,36,36,36,-3,36,36,-115,36,36,-131,36,36,-9,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-116,-18,36,-126,-128,-129,-130,-125,-127,-24,36,36,36,36,36,36,36,36,36,36,36,-112,-179,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ELSIF':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,69,70,71,72,95,126,144,147,150,184,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,252,254,259,287,301,309,310,311,325,],[-17,-160,-159,-60,-69,-65,-79,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-80,-107,-66,-68,-58,-106,-105,-111,-162,-170,256,-90,-101,-95,-100,-104,-103,-89,-94,-102,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-84,285,-75,-81,-57,-82,-86,-76,-87,]),'ASSIGN':([2,15,20,23,33,37,44,58,86,88,89,91,93,95,96,97,99,107,109,110,111,112,113,114,115,116,117,119,120,121,124,125,150,155,158,166,184,188,194,221,234,239,277,278,283,301,306,307,331,],[-60,-17,-160,92,-56,-159,-15,-56,167,171,172,176,177,-58,179,180,183,-31,-32,189,-38,-28,-45,-29,-37,-46,-30,-35,-33,-34,-41,-36,-162,-151,223,228,-170,-44,-16,-161,-59,-169,-47,-40,-39,-57,-55,-49,-50,]),'NUM':([0,3,9,13,16,24,28,30,31,34,35,39,45,46,49,52,57,61,73,74,81,82,83,87,90,92,94,101,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,163,164,167,171,172,176,177,179,180,181,189,191,192,193,195,213,214,220,223,225,228,232,233,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[12,-5,12,12,12,-2,-4,12,12,-7,-6,-8,-113,12,12,12,12,12,12,-3,12,12,-115,12,12,-131,12,12,-9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-116,-18,12,-126,-128,-129,-130,-125,-127,-24,12,12,12,12,12,12,12,12,12,12,12,-112,-179,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'TIMES':([2,15,20,23,33,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-60,-17,-160,97,-56,-159,-60,-69,-65,141,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,141,-101,141,-100,141,141,141,141,141,141,141,141,141,-99,141,141,-78,-161,-59,-169,-56,-75,-57,-76,]),'INT':([15,42,44,86,108,183,192,194,222,267,273,281,282,323,324,327,],[-17,125,-15,125,125,125,125,-16,125,125,125,125,125,125,125,125,]),'NEQ':([15,20,37,47,48,50,51,53,54,56,58,60,62,63,65,66,67,68,70,71,72,95,126,144,147,150,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,217,221,234,239,246,259,301,311,],[-17,-160,-159,-60,-69,-65,143,-110,-72,-70,-56,-108,-109,-74,-71,-67,-88,-73,-107,-66,-68,-58,-106,-105,-111,-162,-170,143,-101,-95,-100,143,143,143,-94,143,-93,-91,-96,-98,-99,-97,-92,-78,-161,-59,-169,-56,-75,-57,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'synonym_statement':([0,13,298,318,321,328,329,335,],[3,3,3,3,3,3,3,3,]),'declaration':([1,105,],[43,186,]),'boolean_mode':([42,86,108,183,192,222,267,273,281,282,323,324,327,],[120,120,120,120,120,120,120,120,120,120,120,120,120,]),'synonym_list':([19,],[85,]),'then_clause':([55,],[146,]),'program':([0,],[7,]),'end_value':([265,291,294,314,],[293,313,316,326,]),'discrete_mode_name':([0,9,13,16,30,31,42,46,49,52,57,61,73,81,82,86,87,90,94,101,108,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,167,183,189,191,192,193,195,213,214,220,222,223,225,228,235,236,253,256,257,260,267,273,279,280,281,282,285,292,298,318,321,323,324,327,328,329,335,],[10,10,10,10,10,10,122,10,10,10,10,10,10,10,10,122,10,10,10,10,122,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,122,10,10,247,10,10,10,10,10,122,10,10,10,10,10,10,10,10,10,122,122,10,10,247,122,10,10,10,10,10,122,247,122,10,10,10,]),'string_length':([187,],[240,]),'literal':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'binop':([9,30,31,49,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[51,51,51,51,51,51,51,51,51,51,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'statement_list':([0,298,318,329,],[13,321,328,335,]),'constant_expression':([167,228,],[229,269,]),'do_action':([0,13,16,82,87,145,159,160,213,214,225,257,298,318,321,328,329,335,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'parameter_list':([73,101,280,],[151,185,151,]),'character_mode':([42,86,108,183,192,222,267,273,281,282,323,324,327,],[121,121,121,121,121,121,121,121,121,121,121,121,121,]),'expression':([9,30,31,49,61,73,81,90,94,101,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[59,102,103,59,148,152,59,174,178,152,219,230,242,243,243,243,252,261,266,230,274,275,284,59,289,275,303,243,59,266,243,]),'return_action':([0,13,16,82,87,145,159,160,213,214,225,257,298,318,321,328,329,335,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'builtin_call':([0,9,13,16,30,31,46,49,52,57,61,73,81,82,87,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,167,189,191,192,193,195,213,214,220,223,225,228,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'mode':([42,86,108,183,273,282,323,327,],[110,166,188,238,299,306,306,299,]),'label_id':([0,13,16,82,145,160,213,214,225,257,298,318,321,328,329,335,],[21,21,79,79,79,79,79,79,79,79,21,21,21,21,21,21,]),'result_action':([0,13,16,82,87,145,159,160,213,214,225,257,298,318,321,328,329,335,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'location':([0,9,13,16,30,31,46,49,52,57,61,73,81,82,87,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,167,189,191,192,193,195,213,214,220,223,225,228,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[23,60,23,23,60,60,60,60,60,147,60,60,60,23,23,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,23,60,23,23,60,60,60,60,60,60,23,23,60,60,23,60,60,60,60,60,23,60,60,60,60,60,60,23,23,23,60,23,23,23,]),'literal_range':([191,192,193,280,281,324,],[244,248,251,251,248,248,]),'step_enumeration':([78,],[154,]),'composite_mode':([42,86,108,183,273,282,323,327,],[107,107,107,107,107,107,107,107,]),'integer_mode':([42,86,108,183,192,222,267,273,281,282,323,324,327,],[109,109,109,109,109,109,109,109,109,109,109,109,109,]),'string_mode':([42,86,108,183,273,282,323,327,],[113,113,113,113,113,113,113,113,]),'action_statement_list':([16,145,160,214,],[82,213,225,257,]),'array_primitive_value':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'mode_name':([42,86,108,183,273,282,323,327,],[112,112,112,112,112,112,112,112,]),'operand':([9,30,31,49,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'discrete_mode':([42,86,108,183,192,222,267,273,281,282,323,324,327,],[114,114,114,114,250,262,295,114,250,114,114,250,114,]),'builtin_name':([0,9,13,16,30,31,46,49,52,57,61,73,81,82,87,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,167,189,191,192,193,195,213,214,220,223,225,228,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'index_mode_list':([281,],[304,]),'conditional_expression':([9,30,31,49,61,73,81,90,94,101,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'loop_counter':([78,],[158,]),'operand1':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[70,70,70,126,70,144,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'assignment_action':([0,13,16,82,87,145,159,160,213,214,225,257,298,318,321,328,329,335,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'newmode_statement':([0,13,298,318,321,328,329,335,],[35,35,35,35,35,35,35,35,]),'element_mode':([282,323,],[307,331,]),'start_value':([223,],[265,]),'procedure_call':([0,9,13,16,30,31,46,49,52,57,61,73,81,82,87,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,167,189,191,192,193,195,213,214,220,223,225,228,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'value_array_element':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'step_value':([265,],[291,]),'parenthesized_expression':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'while_control':([16,77,],[76,153,]),'formal_parameter_list':([231,],[271,]),'call_action':([0,9,13,16,30,31,46,49,52,57,61,73,81,82,87,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,167,189,191,192,193,195,213,214,220,223,225,228,235,236,253,256,257,260,279,280,281,285,292,298,318,321,324,328,329,335,],[2,47,2,2,47,47,47,47,47,47,47,47,47,2,2,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,2,47,2,2,47,47,47,47,47,47,2,2,47,47,2,47,47,47,47,47,2,47,47,47,47,47,47,2,2,2,47,2,2,2,]),'declaration_list':([1,],[41,]),'for_control':([16,],[77,]),'assigning_operator':([23,],[94,]),'iteration':([78,],[157,]),'statement':([0,13,298,318,321,328,329,335,],[24,74,24,24,74,74,24,74,]),'exit_action':([0,13,16,82,87,145,159,160,213,214,225,257,298,318,321,328,329,335,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'synonym_definition':([19,165,],[84,227,]),'discrete_expression':([223,292,],[264,315,]),'discrete_range_mode':([42,86,108,183,192,222,267,273,281,282,323,324,327,],[119,119,119,119,119,119,119,119,119,119,119,119,119,]),'primitive_value':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'boolean_expression':([9,49,81,256,285,],[55,127,161,288,308,]),'expression_list':([90,149,],[173,218,]),'mode_definition':([26,182,],[100,237,]),'identifier':([0,1,9,13,14,16,19,26,30,31,42,46,49,52,57,61,73,78,81,82,86,87,90,94,101,105,108,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,159,160,165,167,182,183,189,191,192,193,195,213,214,220,222,223,225,228,231,235,236,253,256,257,260,267,273,279,280,281,282,285,292,297,298,318,321,323,324,327,328,329,335,],[33,44,58,33,75,33,44,44,58,58,124,58,58,58,58,58,58,155,58,33,124,58,58,58,58,44,124,194,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,33,58,58,33,44,58,44,124,58,58,246,58,58,33,33,58,263,58,33,58,44,58,58,58,58,33,58,263,124,58,58,246,124,58,58,44,33,33,33,124,246,124,33,33,33,]),'parameter_spec':([273,327,],[300,333,]),'value_array_slice':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'formal_parameter':([231,297,],[270,320,]),'control_part':([16,],[80,]),'range_enumeration':([78,],[156,]),'referenced_location':([9,30,31,46,49,52,61,73,81,90,94,101,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,167,189,191,192,193,195,220,223,228,235,236,253,256,260,279,280,281,285,292,324,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'else_clause':([146,],[215,]),'else_expression':([196,254,],[255,286,]),'index_mode':([192,281,324,],[249,305,332,]),'initialization':([110,],[190,]),'identifier_list':([1,19,26,105,165,182,231,297,],[42,86,99,42,86,99,273,273,]),'action':([0,13,16,82,87,145,159,160,213,214,225,257,298,318,321,328,329,335,],[5,5,5,5,169,5,169,5,5,5,5,5,5,5,5,5,5,5,]),'reference_mode':([42,86,108,183,273,282,323,327,],[117,117,117,117,117,117,117,117,]),'action_statement':([0,13,16,82,145,160,213,214,225,257,298,318,321,328,329,335,],[39,39,83,163,83,83,163,83,163,163,39,39,39,39,39,39,]),'array_mode':([42,86,108,183,273,282,323,327,],[116,116,116,116,116,116,116,116,]),'newmode_list':([26,],[98,]),'procedure_definition':([87,],[170,]),'procedure_statement':([0,13,298,318,321,328,329,335,],[34,34,34,34,34,34,34,34,]),'elsif_expression':([196,],[254,]),'then_expression':([127,288,308,],[196,310,325,]),'lower_bound':([90,191,192,193,280,281,324,],[175,245,245,245,245,245,245,]),'upper_bound':([236,279,],[276,302,]),'declaration_statement':([0,13,298,318,321,328,329,335,],[28,28,28,28,28,28,28,28,]),'if_action':([0,13,16,82,87,145,159,160,213,214,225,257,298,318,321,328,329,335,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'result_spec':([296,],[319,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',244),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',248),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',252),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',253),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',261),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',262),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',263),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',264),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',269),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',270),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',271),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',272),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',274),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',288),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',293),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',298),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',303),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',308),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',309),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',314),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',315),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',323),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',328),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',333),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',338),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',339),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',351),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',352),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',353),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',354),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',355),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',356),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',357),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',358),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',359),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',360),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',361),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',362),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',363),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',367),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',375),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',376),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',377),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',385),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',386),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',387),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',392),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',398),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',399),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',407),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',412),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',413),
  ('action -> if_action','action',1,'p_action','lyaparser.py',421),
  ('action -> do_action','action',1,'p_action','lyaparser.py',422),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',423),
  ('action -> call_action','action',1,'p_action','lyaparser.py',424),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',425),
  ('action -> return_action','action',1,'p_action','lyaparser.py',426),
  ('action -> result_action','action',1,'p_action','lyaparser.py',427),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',432),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',437),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',438),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',439),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',440),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',441),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',442),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',443),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',450),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',451),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',459),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',460),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',468),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',469),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',478),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',479),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',480),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',490),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',491),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',492),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',500),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',505),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',506),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',511),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',512),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',513),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',514),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',526),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',531),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',536),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',541),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',546),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',551),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',552),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',560),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',566),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',567),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',572),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',573),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',581),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',582),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',593),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',597),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',598),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',606),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',610),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',611),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',619),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',620),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',621),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',622),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',623),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',624),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',625),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',626),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',633),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',637),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',638),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',639),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',650),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',651),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',660),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',664),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',668),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',669),
]
