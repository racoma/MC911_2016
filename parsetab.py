
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D67A6736FC41914989C0296E6DE363E'
    
_lr_action_items = {'FI':([16,32,36,47,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,100,105,114,121,122,141,169,181,182,186,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,233,235,236,253,258,274,290,292,293,303,316,319,],[-159,-160,-17,-115,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-113,-170,-116,-106,-105,-111,-162,-135,234,-169,-112,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,-134,-137,275,292,-75,-136,316,-81,-85,-57,-82,-76,]),'EQ':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,128,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,128,128,-92,-91,-94,128,128,-97,-96,-95,-101,128,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'SUCC':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[3,-5,3,3,-2,-7,-8,-6,-4,3,3,3,3,3,-115,3,3,3,3,3,3,3,3,3,3,-131,-3,-113,3,-116,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-18,-24,-127,-129,-130,-126,-125,-128,3,-9,3,3,3,-179,-112,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'NOT':([12,16,31,32,34,36,41,48,52,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,75,85,87,88,89,92,105,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,155,169,171,176,177,178,179,180,186,187,188,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,218,223,225,229,230,231,232,238,254,255,257,258,261,280,291,296,297,298,303,319,334,],[51,-159,51,-160,51,-17,51,51,-109,-68,-60,-72,-107,-65,-69,-73,-70,51,-67,-66,-71,-108,-110,-88,51,130,-56,-74,51,51,51,-131,-58,-170,-106,-105,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-111,51,51,-162,-127,-129,-130,-126,-125,-128,-169,51,51,-78,51,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,130,-99,-93,-98,-100,51,51,51,51,-161,51,-59,51,51,51,51,51,-75,-56,51,51,51,51,51,-57,-76,51,]),'THEN':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,97,98,105,121,122,124,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,292,294,303,316,317,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,181,-83,-170,-106,-105,198,-111,-162,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,-75,-81,198,-57,-82,198,-76,]),'LE':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,133,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,133,133,133,133,-94,133,133,-97,-96,-95,-101,133,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'DO':([0,2,6,13,15,19,26,28,35,46,47,50,99,100,107,114,117,165,167,181,185,192,193,195,233,235,274,286,310,312,313,327,328,329,335,],[6,-5,6,-2,-7,-8,-6,-4,6,6,-115,6,-3,-113,6,-116,6,-18,-24,6,-9,6,-179,-112,6,6,6,6,6,6,6,6,6,6,6,]),'LT':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,134,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,134,134,134,134,-94,134,134,-97,-96,-95,-101,134,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'PLUS':([7,16,18,27,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-60,-159,-56,94,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,132,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,132,132,132,132,132,132,132,-97,132,132,-101,132,-99,132,-98,-100,-161,-59,-75,-56,-57,-76,]),'PRINT':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[4,-5,4,4,-2,-7,-8,-6,-4,4,4,4,4,4,-115,4,4,4,4,4,4,4,4,4,4,-131,-3,-113,4,-116,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-18,-24,-127,-129,-130,-126,-125,-128,4,-9,4,4,4,-179,-112,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'DOWN':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,105,109,112,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,241,242,243,258,279,292,303,308,316,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-170,-151,189,-106,-105,-111,-162,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,278,-152,-155,-75,306,-81,-57,-153,-82,-76,]),'ARRAY':([36,78,79,101,162,168,222,250,299,314,333,],[-17,-15,149,149,149,149,-16,149,149,149,149,]),'CCONST':([12,31,34,41,48,51,56,62,70,85,87,88,89,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,171,176,177,178,179,180,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[55,55,55,55,55,55,55,55,55,55,55,55,-131,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-127,-129,-130,-126,-125,-128,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LOWER':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[10,-5,10,10,-2,-7,-8,-6,-4,10,10,10,10,10,-115,10,10,10,10,10,10,10,10,10,10,-131,-3,-113,10,-116,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-18,-24,-127,-129,-130,-126,-125,-128,10,-9,10,10,10,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'MINUS':([7,12,16,18,27,31,32,34,36,41,48,52,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,75,85,87,88,89,92,105,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,155,169,171,176,177,178,179,180,186,187,188,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,218,223,225,229,230,231,232,238,254,255,257,258,261,280,291,296,297,298,303,319,334,],[-60,56,-159,-56,93,56,-160,56,-17,56,56,-109,-68,-60,-72,-107,-65,-69,-73,-70,56,-67,-66,-71,-108,-110,-88,56,139,-56,-74,56,56,56,-131,-58,-170,-106,-105,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-111,56,56,-162,-127,-129,-130,-126,-125,-128,-169,56,56,-78,56,139,139,139,139,139,139,139,-97,139,139,-101,139,-99,139,-98,-100,56,56,56,56,-161,56,-59,56,56,56,56,56,-75,-56,56,56,56,56,56,-57,-76,56,]),'BY':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,241,242,243,258,292,303,316,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-170,-106,-105,-111,-162,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,281,-152,-155,-75,-81,-57,-82,-76,]),'OR':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,125,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,-90,-89,-92,-91,-94,125,125,-97,-96,-95,-101,125,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'GE':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,129,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,129,129,129,129,-94,129,129,-97,-96,-95,-101,129,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'TIMES':([7,16,18,27,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-60,-159,-56,86,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,137,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,137,137,137,137,137,137,137,137,137,137,-101,137,-99,137,137,-100,-161,-59,-75,-56,-57,-76,]),'CHARS':([36,78,79,101,162,168,222,250,299,314,333,],[-17,-15,154,154,154,154,-16,154,154,154,154,]),'RBRACKET':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,105,121,122,141,145,146,147,148,151,156,160,169,174,175,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,231,258,260,262,265,267,268,271,272,273,292,295,300,302,303,316,319,320,322,323,340,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-170,-106,-105,-111,-32,-38,-33,-35,-36,-34,-37,-162,-63,231,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-63,258,-161,-59,-75,-54,-53,299,301,-48,303,-62,-64,-81,319,-39,-40,-57,-82,-76,-43,333,-51,-52,]),'LENGTH':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[14,-5,14,14,-2,-7,-8,-6,-4,14,14,14,14,14,-115,14,14,14,14,14,14,14,14,14,14,-131,-3,-113,14,-116,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-18,-24,-127,-129,-130,-126,-125,-128,14,-9,14,14,14,-179,-112,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'IF':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,62,70,85,87,88,89,99,100,107,114,117,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[34,-5,34,70,-2,-7,-8,-6,-4,70,70,34,70,34,-115,70,34,70,70,70,70,70,-131,-3,-113,34,-116,34,70,70,-18,-24,-127,-129,-130,-126,-125,-128,34,-9,70,70,34,-179,-112,70,70,70,70,70,70,70,34,34,70,70,70,70,34,70,34,70,70,70,70,34,34,34,34,34,34,70,34,]),'ID':([0,2,6,12,13,15,17,19,20,21,26,28,31,34,35,36,40,41,44,46,47,48,50,51,56,62,70,73,78,79,85,87,88,89,99,100,101,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,158,162,164,165,166,167,168,171,176,177,178,179,180,181,184,185,187,188,190,192,193,194,195,198,217,218,222,223,225,230,232,233,235,238,244,250,254,255,257,274,280,284,286,291,296,297,298,299,310,312,313,314,327,328,329,333,334,335,],[36,-5,36,36,-2,-7,36,-8,36,36,-6,-4,36,36,36,-17,36,36,36,36,-115,36,36,36,36,36,36,36,-15,36,36,36,36,-131,-3,-113,36,36,-116,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-18,36,-24,36,-127,-129,-130,-126,-125,-128,36,36,-9,36,36,36,36,-179,36,-112,36,36,36,-16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ELSE':([16,32,36,47,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,100,105,114,121,122,141,169,181,182,186,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,233,252,256,258,292,303,316,318,319,332,],[-159,-160,-17,-115,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-113,-170,-116,-106,-105,-111,-162,-135,235,-169,-112,-78,254,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,-134,254,-84,-75,-81,-57,-82,-86,-76,-87,]),'SYN':([0,2,13,15,19,26,28,35,99,100,165,167,185,193,195,286,310,312,313,327,328,329,335,],[17,-5,-2,-7,-8,-6,-4,17,-3,-113,-18,-24,-9,-179,-112,17,17,17,17,17,17,17,17,]),'ICONST':([12,31,34,41,48,51,56,62,70,85,87,88,89,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,171,176,177,178,179,180,187,188,198,217,218,219,223,225,230,232,238,254,255,257,280,281,291,296,297,298,334,],[59,59,59,59,59,59,59,59,59,59,59,59,-131,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-127,-129,-130,-126,-125,-128,59,59,59,59,59,268,59,59,59,59,59,59,59,59,59,308,59,59,59,59,59,]),'$end':([2,13,15,19,25,26,28,35,99,100,165,167,185,193,195,],[-5,-2,-7,-8,0,-6,-4,-1,-3,-113,-18,-24,-9,-179,-112,]),'NUM':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[30,-5,30,30,-2,-7,-8,-6,-4,30,30,30,30,30,-115,30,30,30,30,30,30,30,30,30,30,-131,-3,-113,30,-116,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-18,-24,-127,-129,-130,-126,-125,-128,30,-9,30,30,30,-179,-112,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'NULL':([12,31,34,41,48,51,56,62,70,85,87,88,89,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,171,176,177,178,179,180,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[60,60,60,60,60,60,60,60,60,60,60,60,-131,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-127,-129,-130,-126,-125,-128,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'CONCAT':([7,16,18,27,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-60,-159,-56,91,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,136,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'EXIT':([0,2,6,13,15,19,26,28,35,46,47,50,99,100,107,114,117,165,167,181,185,192,193,195,233,235,274,286,310,312,313,327,328,329,335,],[20,-5,20,-2,-7,-8,-6,-4,20,20,-115,20,-3,-113,20,-116,20,-18,-24,20,-9,20,-179,-112,20,20,20,20,20,20,20,20,20,20,20,]),'OD':([46,47,100,114,117,192,195,],[115,-115,-113,-116,191,247,-112,]),'REF':([36,78,79,101,162,168,222,250,299,314,333,],[-17,-15,162,162,162,162,-16,162,162,162,162,]),'TYPE':([0,2,13,15,19,26,28,35,99,100,165,167,185,193,195,286,310,312,313,327,328,329,335,],[21,-5,-2,-7,-8,-6,-4,21,-3,-113,-18,-24,-9,-179,-112,21,21,21,21,21,21,21,21,]),'IN':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,109,112,121,122,141,169,186,189,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,131,-56,-74,-58,-170,-151,190,-106,-105,-111,-162,-169,244,-78,-90,-89,-92,-91,-94,131,-103,-97,-96,-95,-101,131,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'LPAREN':([1,3,4,10,12,14,18,23,24,30,31,33,34,36,37,41,48,51,56,62,70,72,85,87,88,89,119,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,145,146,147,148,151,152,153,155,156,160,163,171,176,177,178,179,180,187,188,198,217,218,223,225,230,232,238,245,246,254,255,257,261,262,264,280,282,287,291,296,297,298,300,302,334,],[41,-173,-178,-175,62,-176,-42,-177,85,-171,62,-174,62,-17,-172,62,62,62,62,62,62,-42,62,62,62,-131,194,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-32,-38,-33,-35,-36,-42,218,62,-34,-37,225,-127,-129,-130,-126,-125,-128,62,62,62,62,62,62,62,62,62,62,225,-42,62,62,62,-42,225,297,62,225,314,62,62,62,62,-39,-40,62,]),'READ':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[23,-5,23,23,-2,-7,-8,-6,-4,23,23,23,23,23,-115,23,23,23,23,23,23,23,23,23,23,-131,-3,-113,23,-116,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-18,-24,-127,-129,-130,-126,-125,-128,23,-9,23,23,23,-179,-112,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'WHILE':([6,16,32,36,45,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,105,108,110,111,121,122,141,145,146,147,148,151,156,160,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,243,245,258,277,282,292,300,302,303,304,305,307,316,319,326,],[48,-159,-160,-17,48,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-170,-145,-144,-146,-106,-105,-111,-32,-38,-33,-35,-36,-34,-37,-162,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,-155,-157,-75,-150,-156,-81,-39,-40,-57,-148,-149,-154,-82,-76,-147,]),'NEQ':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,127,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,127,127,-92,-91,-94,127,127,-97,-96,-95,-101,127,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'END':([2,13,15,19,26,28,99,100,165,167,185,193,195,313,328,329,335,],[-5,-2,-7,-8,-6,-4,-3,-113,-18,-24,-9,-179,-112,330,336,337,341,]),'RETURN':([0,2,6,13,15,19,26,28,35,46,47,50,99,100,107,114,117,165,167,181,185,192,193,195,233,235,274,286,310,312,313,327,328,329,335,],[31,-5,31,-2,-7,-8,-6,-4,31,31,-115,31,-3,-113,31,-116,31,-18,-24,31,-9,31,-179,-112,31,31,31,31,31,31,31,31,31,31,31,]),'SEMI':([5,7,9,11,16,22,29,31,32,36,38,39,42,45,49,52,53,54,55,57,58,59,60,61,63,64,65,66,67,68,69,71,72,75,76,77,80,81,82,84,92,96,98,102,103,105,108,110,111,113,115,116,118,120,121,122,141,143,144,145,146,147,148,150,151,152,156,157,160,161,163,169,172,183,186,191,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,220,221,224,226,227,228,229,231,234,237,239,243,245,247,249,258,269,275,276,277,282,283,285,292,300,301,302,303,304,305,307,309,316,319,324,325,326,330,336,337,338,339,341,],[-118,-120,-121,-122,-159,-119,-123,-167,-160,-17,-117,100,-143,-142,117,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-168,-66,-71,-108,-110,-88,-79,-56,-74,-80,-19,165,-165,167,-25,-58,-166,-83,185,-10,-170,-145,-144,-146,-141,-140,-158,193,195,-106,-105,-111,-30,-28,-32,-38,-33,-35,-46,-36,-41,-34,-31,-37,-45,-29,-162,-124,-13,-169,-139,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-23,-22,-44,-20,-26,-27,-161,-59,-133,-12,-11,-155,-157,-138,286,-75,-21,-132,-14,-150,-156,310,312,-81,-39,-47,-40,-57,-148,-149,-154,327,-82,-76,-49,-55,-147,-183,-181,-182,-187,-50,-180,]),'COLON':([8,16,18,32,36,43,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,105,121,122,141,169,173,174,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,229,231,258,259,261,263,292,303,316,319,321,],[50,-159,-114,-160,-17,107,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-170,-106,-105,-111,-162,230,-61,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,257,-161,-59,-75,296,-56,-61,-81,-57,-82,-76,-61,]),'RESULT':([0,2,6,13,15,19,26,28,35,46,47,50,99,100,107,114,117,165,167,181,185,192,193,195,233,235,274,286,310,312,313,327,328,329,335,],[12,-5,12,-2,-7,-8,-6,-4,12,12,-115,12,-3,-113,12,-116,12,-18,-24,12,-9,12,-179,-112,12,12,12,12,12,12,12,12,12,12,12,]),'TRUE':([12,31,34,41,48,51,56,62,70,85,87,88,89,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,171,176,177,178,179,180,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[66,66,66,66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-127,-129,-130,-126,-125,-128,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RPAREN':([16,32,36,41,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,85,92,104,105,106,121,122,123,141,143,144,145,146,147,148,150,151,152,156,157,160,161,163,169,170,186,194,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,224,229,231,240,248,251,258,266,270,272,288,289,292,297,300,301,302,303,311,315,316,319,320,321,324,325,331,339,],[-159,-160,-17,105,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,169,-58,-163,-170,186,-106,-105,196,-111,-30,-28,-32,-38,-33,-35,-46,-36,-41,-34,-31,-37,-45,-29,-162,229,-169,249,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-44,-161,-59,-164,283,-184,-75,300,302,-62,-186,-189,-81,169,-39,-47,-40,-57,-185,-188,-82,-76,-43,-163,-49,-55,338,-50,]),'RETURNS':([249,283,],[287,287,]),'ELSIF':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,105,121,122,141,169,186,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,252,256,258,292,303,316,318,319,332,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-170,-106,-105,-111,-162,-169,-78,255,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,291,-84,-75,-81,-57,-82,-86,-76,-87,]),'CHAR':([36,78,79,101,162,168,190,217,222,244,250,298,299,314,333,334,],[-17,-15,146,146,146,146,146,146,-16,146,146,146,146,146,146,146,]),'LOC':([36,143,144,145,146,147,148,150,151,152,156,157,160,161,163,224,289,300,301,302,324,325,339,],[-17,-30,-28,-32,-38,-33,-35,-46,-36,-41,-34,-31,-37,-45,-29,-44,315,-39,-47,-40,-49,-55,-50,]),'INT':([36,78,79,101,162,168,190,217,222,244,250,298,299,314,333,334,],[-17,-15,151,151,151,151,151,151,-16,151,151,151,151,151,151,151,]),'DIVIDE':([7,16,18,27,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-60,-159,-56,95,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,140,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,140,140,140,140,140,140,140,140,140,140,-101,140,-99,140,140,-100,-161,-59,-75,-56,-57,-76,]),'AND':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,126,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,126,-89,-92,-91,-94,126,126,-97,-96,-95,-101,126,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'LBRACKET':([7,16,18,27,32,36,53,54,55,58,59,60,61,63,65,66,67,68,72,74,75,92,105,141,149,154,169,186,196,229,231,258,261,303,319,],[-60,-159,-56,88,-160,-17,-68,-60,-72,-65,-69,-73,-70,-67,-66,-71,88,-77,-56,142,-74,-58,-170,88,217,219,-162,-169,-78,-161,-59,-75,-56,-57,-76,]),'PROC':([50,],[119,]),'ASSIGN':([7,16,18,27,32,36,72,78,79,83,86,90,91,92,93,94,95,105,109,112,143,144,145,146,147,148,150,151,152,156,157,159,160,161,163,169,183,186,222,224,229,231,300,301,302,303,324,325,339,],[-60,-159,-56,89,-160,-17,-56,-15,155,168,171,176,177,-58,178,179,180,-170,-151,188,-30,-28,-32,-38,-33,-35,-46,-36,-41,-34,-31,223,-37,-45,-29,-162,238,-169,-16,-44,-161,-59,-39,-47,-40,-57,-49,-55,-50,]),'PRED':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[37,-5,37,37,-2,-7,-8,-6,-4,37,37,37,37,37,-115,37,37,37,37,37,37,37,37,37,37,-131,-3,-113,37,-116,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-18,-24,-127,-129,-130,-126,-125,-128,37,-9,37,37,37,-179,-112,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'SCONST':([12,31,34,41,48,51,56,62,70,85,87,88,89,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,171,176,177,178,179,180,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[75,75,75,75,75,75,75,75,75,75,75,75,-131,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-127,-129,-130,-126,-125,-128,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'COMMA':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,77,78,79,80,82,83,84,92,101,102,103,104,105,106,121,122,141,143,144,145,146,147,148,150,151,152,156,157,160,161,163,169,170,174,175,183,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,220,221,222,224,226,227,228,229,231,237,239,240,248,250,251,258,260,262,265,269,272,273,276,288,289,292,300,301,302,303,311,315,316,319,320,321,322,323,324,325,339,340,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-19,-15,158,164,166,158,-25,-58,158,184,-10,-163,-170,187,-106,-105,-111,-30,-28,-32,-38,-33,-35,-46,-36,-41,-34,-31,-37,-45,-29,-162,187,-63,232,-13,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-63,232,-23,-22,-16,-44,-20,-26,-27,-161,-59,-12,-11,-164,284,158,-184,-75,-54,-53,298,-21,-62,-64,-14,-186,-189,-81,-39,-47,-40,-57,-185,-188,-82,-76,-43,-163,334,-51,-49,-55,-50,-52,]),'FOR':([6,],[44,]),'BOOL':([36,78,79,101,162,168,190,217,222,244,250,298,299,314,333,334,],[-17,-15,160,160,160,160,160,160,-16,160,160,160,160,160,160,160,]),'FALSE':([12,31,34,41,48,51,56,62,70,85,87,88,89,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,171,176,177,178,179,180,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[61,61,61,61,61,61,61,61,61,61,61,61,-131,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-127,-129,-130,-126,-125,-128,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'MOD':([7,16,18,27,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-60,-159,-56,90,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,135,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,135,135,135,135,135,135,135,135,135,135,-101,135,-99,135,135,-100,-161,-59,-75,-56,-57,-76,]),'TO':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,76,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,241,242,243,258,278,279,292,303,306,308,316,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,-79,-56,-74,-80,-58,-170,-106,-105,-111,-162,-169,-78,-90,-89,-92,-91,-94,-102,-103,-97,-96,-95,-101,-104,-99,-93,-98,-100,-161,-59,280,-152,-155,-75,280,280,-81,-57,280,-153,-82,-76,]),'ARROW':([7,12,16,18,27,31,32,34,36,41,48,51,54,56,62,67,70,72,85,87,88,89,92,105,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,155,169,171,176,177,178,179,180,186,187,188,198,217,218,223,225,229,230,231,232,238,254,255,257,261,280,291,296,297,298,303,334,],[-60,73,-159,-56,92,73,-160,73,-17,73,73,73,-60,73,73,92,73,-56,73,73,73,-131,-58,-170,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,92,73,73,-162,-127,-129,-130,-126,-125,-128,-169,73,73,73,73,73,73,73,-161,73,-59,73,73,73,73,73,-56,73,73,73,73,73,-57,73,]),'DCL':([0,2,13,15,19,26,28,35,99,100,165,167,185,193,195,286,310,312,313,327,328,329,335,],[40,-5,-2,-7,-8,-6,-4,40,-3,-113,-18,-24,-9,-179,-112,40,40,40,40,40,40,40,40,]),'GT':([16,32,36,52,53,54,55,57,58,59,60,61,63,65,66,67,68,69,71,72,75,92,105,121,122,141,169,186,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,229,231,258,261,303,319,],[-159,-160,-17,-109,-68,-60,-72,-107,-65,-69,-73,-70,-67,-66,-71,-108,-110,-88,138,-56,-74,-58,-170,-106,-105,-111,-162,-169,-78,138,138,138,138,-94,138,138,-97,-96,-95,-101,138,-99,-93,-98,-100,-161,-59,-75,-56,-57,-76,]),'UPPER':([0,2,6,12,13,15,19,26,28,31,34,35,41,46,47,48,50,51,56,62,70,73,85,87,88,89,99,100,107,114,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,165,167,171,176,177,178,179,180,181,185,187,188,192,193,195,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[33,-5,33,33,-2,-7,-8,-6,-4,33,33,33,33,33,-115,33,33,33,33,33,33,33,33,33,33,-131,-3,-113,33,-116,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-18,-24,-127,-129,-130,-126,-125,-128,33,-9,33,33,33,-179,-112,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'boolean_expression':([34,48,70,255,291,],[97,116,124,294,317,]),'while_control':([6,45,],[42,113,]),'element_mode':([299,333,],[324,339,]),'synonym_statement':([0,35,286,310,312,313,327,328,329,335,],[2,2,2,2,2,2,2,2,2,2,]),'start_value':([188,],[241,]),'discrete_expression':([188,280,],[242,307,]),'referenced_location':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'then_clause':([97,],[182,]),'else_clause':([182,],[236,]),'identifier_list':([17,21,40,164,166,184,194,284,],[79,83,101,79,83,101,250,250,]),'label_id':([0,6,35,46,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[8,43,8,43,43,43,43,43,43,43,8,8,8,8,8,8,8,8,]),'conditional_expression':([12,31,34,41,48,62,70,85,87,88,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'literal_range':([217,218,225,297,298,334,],[260,266,270,266,260,260,]),'operand1':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[57,57,57,57,57,121,122,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'statement':([0,35,286,310,312,313,327,328,329,335,],[13,99,13,13,13,99,13,99,99,99,]),'literal':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'step_value':([241,],[279,]),'builtin_name':([0,6,12,31,34,35,41,46,48,50,51,56,62,70,73,85,87,88,107,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,181,187,188,192,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'procedure_call':([0,6,12,31,34,35,41,46,48,50,51,56,62,70,73,85,87,88,107,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,181,187,188,192,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'mode':([79,101,162,168,250,299,314,333,],[159,183,224,228,289,325,289,325,]),'action_statement':([0,6,35,46,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[19,47,19,114,47,47,114,114,47,114,19,19,19,19,19,19,19,19,]),'assignment_action':([0,6,35,46,50,107,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'action_statement_list':([6,117,181,235,],[46,192,233,274,]),'mode_definition':([21,166,],[84,227,]),'newmode_list':([21,],[82,]),'assigning_operator':([27,],[87,]),'initialization':([183,],[237,]),'primitive_value':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'expression':([12,31,34,41,48,62,70,85,87,88,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[64,96,98,104,98,123,98,104,172,174,215,220,240,243,256,263,263,220,263,272,273,276,293,98,295,243,98,272,321,263,263,]),'elsif_expression':([197,],[252,]),'newmode_statement':([0,35,286,310,312,313,327,328,329,335,],[26,26,26,26,26,26,26,26,26,26,]),'value_array_element':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'else_expression':([197,252,],[253,290,]),'result_action':([0,6,35,46,50,107,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'then_expression':([124,294,317,],[197,318,332,]),'formal_parameter_list':([194,],[248,]),'loop_counter':([44,],[112,]),'builtin_call':([0,6,12,31,34,35,41,46,48,50,51,56,62,70,73,85,87,88,107,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,181,187,188,192,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'composite_mode':([79,101,162,168,250,299,314,333,],[157,157,157,157,157,157,157,157,]),'discrete_mode':([79,101,162,168,190,217,244,250,298,299,314,333,334,],[163,163,163,163,245,262,282,163,262,163,163,163,262,]),'statement_list':([0,286,310,312,327,],[35,313,328,329,335,]),'string_length':([219,],[267,]),'string_mode':([79,101,162,168,250,299,314,333,],[161,161,161,161,161,161,161,161,]),'control_part':([6,],[49,]),'operand':([12,31,34,41,48,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'lower_bound':([88,217,218,225,297,298,334,],[173,259,259,259,259,259,259,]),'step_enumeration':([44,],[108,]),'upper_bound':([230,296,],[271,320,]),'reference_mode':([79,101,162,168,250,299,314,333,],[143,143,143,143,143,143,143,143,]),'declaration':([40,184,],[103,239,]),'mode_name':([79,101,162,168,250,299,314,333,],[144,144,144,144,144,144,144,144,]),'parameter_spec':([250,314,],[288,331,]),'array_mode':([79,101,162,168,250,299,314,333,],[150,150,150,150,150,150,150,150,]),'boolean_mode':([79,101,162,168,190,217,244,250,298,299,314,333,334,],[147,147,147,147,147,147,147,147,147,147,147,147,147,]),'call_action':([0,6,12,31,34,35,41,46,48,50,51,56,62,70,73,85,87,88,107,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,181,187,188,192,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[7,7,54,54,54,7,54,7,54,7,54,54,54,54,54,54,54,54,7,7,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,7,54,54,7,54,54,54,54,54,54,54,7,7,54,54,54,54,7,54,7,54,54,54,54,7,7,7,7,7,7,54,7,]),'exit_action':([0,6,35,46,50,107,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'formal_parameter':([194,284,],[251,311,]),'end_value':([241,278,279,306,],[277,304,305,326,]),'return_action':([0,6,35,46,50,107,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'character_mode':([79,101,162,168,190,217,244,250,298,299,314,333,334,],[156,156,156,156,156,156,156,156,156,156,156,156,156,]),'procedure_statement':([0,35,286,310,312,313,327,328,329,335,],[15,15,15,15,15,15,15,15,15,15,]),'procedure_definition':([50,],[118,]),'do_action':([0,6,35,46,50,107,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'iteration':([44,],[110,]),'declaration_statement':([0,35,286,310,312,313,327,328,329,335,],[28,28,28,28,28,28,28,28,28,28,]),'range_enumeration':([44,],[111,]),'synonym_list':([17,],[80,]),'result_spec':([249,283,],[285,309,]),'parenthesized_expression':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'value_array_slice':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'synonym_definition':([17,164,],[77,226,]),'program':([0,],[25,]),'integer_mode':([79,101,162,168,190,217,244,250,298,299,314,333,334,],[145,145,145,145,145,145,145,145,145,145,145,145,145,]),'index_mode_list':([298,],[322,]),'location':([0,6,12,31,34,35,41,46,48,50,51,56,62,70,73,85,87,88,107,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,181,187,188,192,198,217,218,223,225,230,232,233,235,238,254,255,257,274,280,286,291,296,297,298,310,312,313,327,328,329,334,335,],[27,27,67,67,67,27,67,27,67,27,67,67,67,67,141,67,67,67,27,27,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,27,67,67,27,67,67,67,67,67,67,67,27,27,67,67,67,67,27,67,27,67,67,67,67,27,27,27,27,27,27,67,27,]),'for_control':([6,],[45,]),'discrete_mode_name':([0,6,12,31,34,35,41,46,48,50,51,56,62,70,73,79,85,87,88,101,107,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,162,168,181,187,188,190,192,198,217,218,223,225,230,232,233,235,238,244,250,254,255,257,274,280,286,291,296,297,298,299,310,312,313,314,327,328,329,333,334,335,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,153,24,24,24,153,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,153,153,24,24,24,153,24,24,264,24,24,24,24,24,24,24,24,153,153,24,24,24,24,24,24,24,24,24,264,153,24,24,24,153,24,24,24,153,264,24,]),'discrete_range_mode':([79,101,162,168,190,217,244,250,298,299,314,333,334,],[148,148,148,148,148,148,148,148,148,148,148,148,148,]),'declaration_list':([40,],[102,]),'constant_expression':([155,223,],[221,269,]),'index_mode':([217,298,334,],[265,323,340,]),'binop':([12,31,34,41,48,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[71,71,71,71,71,71,71,71,71,71,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'identifier':([0,6,12,17,20,21,31,34,35,40,41,44,46,48,50,51,56,62,70,73,79,85,87,88,101,107,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,158,162,164,166,168,181,184,187,188,190,192,194,198,217,218,223,225,230,232,233,235,238,244,250,254,255,257,274,280,284,286,291,296,297,298,299,310,312,313,314,327,328,329,333,334,335,],[18,18,72,78,81,78,72,72,18,78,72,109,18,72,72,72,72,72,72,72,152,72,72,72,152,72,18,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,222,152,78,78,152,18,78,72,72,246,18,78,72,261,72,72,72,72,72,18,18,72,246,152,72,72,72,18,72,78,18,72,72,72,261,152,18,18,18,152,18,18,18,152,261,18,]),'if_action':([0,6,35,46,50,107,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'action':([0,6,35,46,50,107,117,181,192,233,235,274,286,310,312,313,327,328,329,335,],[39,39,39,39,120,120,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'expression_list':([88,142,],[175,216,]),'parameter_list':([41,85,297,],[106,170,170,]),'array_primitive_value':([12,31,34,41,48,51,56,62,70,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,155,187,188,198,217,218,223,225,230,232,238,254,255,257,280,291,296,297,298,334,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
