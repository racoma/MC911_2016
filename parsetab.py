
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0D642C1D01EE64D8F7D30FD40ECA902F'
    
_lr_action_items = {'NULL':([28,37,38,47,50,52,55,67,68,73,74,80,86,118,120,121,122,123,124,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[70,70,70,70,70,70,-131,70,70,70,70,70,70,-127,-128,-125,-130,-129,-126,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'TRUE':([28,37,38,47,50,52,55,67,68,73,74,80,86,118,120,121,122,123,124,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[96,96,96,96,96,96,-131,96,96,96,96,96,96,-127,-128,-125,-130,-129,-126,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'FI':([12,32,40,46,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,101,106,150,153,159,160,161,180,181,191,206,207,210,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,267,273,275,283,299,302,303,322,325,],[-159,-160,-17,-115,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-113,-116,-170,-162,-106,-105,-111,-135,233,-59,-169,-161,-112,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-134,274,-137,-75,303,-136,-57,-85,325,-81,-76,-82,]),'EQ':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,167,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,167,-91,167,-92,-100,-97,-95,167,-96,-93,-94,167,167,-98,-56,-75,-57,-76,]),'SUCC':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[3,3,-4,3,-5,-6,-7,-8,3,3,3,-2,3,-115,3,-3,3,3,-131,3,3,3,3,3,3,3,3,-113,-116,3,3,-127,-128,-125,-130,-129,-126,-24,-9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-18,3,3,3,3,3,3,3,3,3,3,-179,-112,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'READ':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[5,5,-4,5,-5,-6,-7,-8,5,5,5,-2,5,-115,5,-3,5,5,-131,5,5,5,5,5,5,5,5,-113,-116,5,5,-127,-128,-125,-130,-129,-126,-24,-9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-18,5,5,5,5,5,5,5,5,5,5,-179,-112,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'COMMA':([12,32,40,59,60,61,62,63,64,65,66,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,98,99,100,115,117,131,133,134,135,137,138,139,140,141,142,143,144,146,148,149,150,151,152,153,154,159,160,161,191,194,195,196,197,201,202,206,207,211,212,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,236,238,239,247,249,254,256,257,258,262,264,265,266,267,276,283,285,289,290,296,297,303,309,310,311,312,313,314,320,321,322,325,335,336,],[-159,-160,-17,-58,-15,-25,125,128,-10,129,128,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,183,-19,128,192,-63,-38,-34,-41,-36,-33,-37,-13,-32,-46,-31,-28,-35,-30,-45,-29,-170,-163,205,-162,205,-106,-105,-111,-59,-26,-27,-16,-11,-12,-44,-169,-161,-78,192,-63,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-20,-23,-22,-64,-62,-54,288,-53,-14,-164,295,128,-184,-75,-21,-57,-39,-47,-40,-189,-186,-81,-43,-163,-55,-49,328,-51,-185,-188,-76,-82,-50,-52,]),'LBRACKET':([1,4,11,12,32,40,59,70,75,76,77,78,79,82,84,85,87,89,90,91,93,96,136,147,150,153,161,191,206,207,211,253,267,283,322,],[-56,-60,50,-159,-160,-17,-58,-73,-60,-70,50,-74,-69,-68,-67,162,-77,-65,-72,-56,-66,-71,199,203,-170,-162,50,-59,-169,-161,-78,-56,-75,-57,-76,]),'PLUS':([1,4,11,12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-56,-60,54,-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,171,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,171,171,171,171,-100,-97,171,171,171,171,171,171,171,-98,-56,-75,-57,-76,]),'FALSE':([28,37,38,47,50,52,55,67,68,73,74,80,86,118,120,121,122,123,124,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[76,76,76,76,76,76,-131,76,76,76,76,76,76,-127,-128,-125,-130,-129,-126,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'AND':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,173,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,173,-91,173,-92,-100,-97,-95,-89,-96,-93,-94,173,173,-98,-56,-75,-57,-76,]),'LE':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,174,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,174,174,174,174,-100,-97,-95,174,-96,-93,-94,174,174,-98,-56,-75,-57,-76,]),'OD':([43,46,101,106,107,186,210,],[105,-115,-113,-116,187,240,-112,]),'BOOL':([40,60,66,100,127,145,190,196,199,241,265,287,288,317,327,328,],[-17,-15,138,138,138,138,138,-16,138,138,138,138,138,138,138,138,]),'RETURNS':([263,294,],[293,293,]),'GE':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,176,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,176,176,176,176,-100,-97,-95,176,-96,-93,-94,176,176,-98,-56,-75,-57,-76,]),'CONCAT':([1,4,11,12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-56,-60,56,-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,177,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-56,-75,-57,-76,]),'DOWN':([12,32,40,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,112,114,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,243,244,267,282,283,303,306,322,325,],[-159,-160,-17,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-151,188,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-152,278,-155,-75,307,-57,-81,-153,-76,-82,]),'MOD':([1,4,11,12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-56,-60,57,-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,165,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,165,165,165,165,-100,165,165,165,165,165,165,165,165,165,-56,-75,-57,-76,]),'PRINT':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[23,23,-4,23,-5,-6,-7,-8,23,23,23,-2,23,-115,23,-3,23,23,-131,23,23,23,23,23,23,23,23,-113,-116,23,23,-127,-128,-125,-130,-129,-126,-24,-9,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-18,23,23,23,23,23,23,23,23,23,23,-179,-112,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ID':([0,2,6,10,15,17,18,19,21,26,28,29,31,37,38,39,40,43,46,47,48,49,50,52,55,60,66,67,68,69,73,74,80,81,86,100,101,106,107,108,118,120,121,122,123,124,125,126,127,128,129,130,145,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,185,186,189,190,192,193,196,198,199,200,204,205,208,209,210,214,232,235,237,241,265,268,270,271,275,280,284,286,287,288,292,295,301,315,316,317,319,327,328,329,332,333,339,],[40,40,-4,40,-5,40,40,-6,-7,-8,40,40,40,40,40,-2,-17,40,-115,40,40,-3,40,40,-131,-15,40,40,40,40,40,40,40,40,40,40,-113,-116,40,40,-127,-128,-125,-130,-129,-126,40,-24,40,40,40,-9,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-18,40,40,40,40,40,40,40,-16,40,40,40,40,40,-179,40,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'CHAR':([40,60,66,100,127,145,190,196,199,241,265,287,288,317,327,328,],[-17,-15,131,131,131,131,131,-16,131,131,131,131,131,131,131,131,]),'LPAREN':([1,3,5,8,14,22,23,24,25,28,30,35,37,38,40,47,50,52,55,67,68,73,74,80,86,91,118,120,121,122,123,124,131,132,133,134,135,137,138,140,144,149,156,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,245,246,253,255,257,268,270,271,277,280,284,285,286,288,290,293,301,328,],[-42,-173,-177,-176,-172,-174,-178,67,68,73,-175,-171,73,73,-17,73,73,73,-131,73,73,73,73,73,73,-42,-127,-128,-125,-130,-129,-126,-38,198,-34,-42,-36,-33,-37,-32,-35,204,209,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-42,204,-42,286,204,73,73,73,204,73,73,-39,73,73,-40,317,73,73,]),'ICONST':([28,37,38,47,50,52,55,67,68,73,74,80,86,118,120,121,122,123,124,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,203,204,205,214,237,268,270,271,280,281,284,286,288,301,328,],[79,79,79,79,79,79,-131,79,79,79,79,79,79,-127,-128,-125,-130,-129,-126,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,260,79,79,79,79,79,79,79,79,306,79,79,79,79,79,]),'DIVIDE':([1,4,11,12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-56,-60,53,-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,170,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,170,170,170,170,-100,170,170,170,170,170,170,170,170,170,-56,-75,-57,-76,]),'SEMI':([4,7,9,12,16,20,32,33,34,36,38,40,41,42,44,59,61,62,64,65,70,71,72,75,76,77,78,79,82,83,84,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,109,110,111,113,119,131,133,134,135,137,138,139,140,141,142,143,144,146,148,149,150,153,155,157,159,160,161,187,191,194,195,197,201,202,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,236,238,239,240,244,246,258,263,267,274,276,277,279,283,285,289,290,291,294,303,304,305,308,311,312,318,322,325,326,330,335,337,338,340,341,],[-120,-121,-119,-159,-117,-122,-160,101,-118,-123,-167,-17,-142,-143,107,-58,-25,126,-10,130,-73,-80,-88,-60,-70,-108,-74,-69,-68,-83,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-165,182,-19,-168,-166,-141,-140,-158,-144,-145,-146,-124,-38,-34,-41,-36,-33,-37,-13,-32,-46,-31,-28,-35,-30,-45,-29,-170,-162,208,210,-106,-105,-111,-139,-59,-26,-27,-11,-12,-44,-169,-161,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-133,-20,-23,-22,-138,-155,-157,-14,292,-75,-132,-21,-156,-150,-57,-39,-47,-40,315,319,-81,-148,-154,-149,-55,-49,332,-76,-82,-147,-183,-50,-182,-187,-181,-180,]),'NOT':([12,28,32,37,38,40,47,50,52,55,59,67,68,70,72,73,75,76,77,78,79,82,84,86,87,88,89,90,91,93,94,95,96,118,120,121,122,123,124,150,153,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,191,192,193,198,199,200,204,205,206,207,211,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,237,253,267,268,270,271,280,283,284,286,288,301,322,328,],[-159,74,-160,74,74,-17,74,74,74,-131,-58,74,74,-73,-88,74,-60,-70,-108,-74,-69,-68,-67,74,-110,168,-65,-72,-56,-66,-107,-109,-71,-127,-128,-125,-130,-129,-126,-170,-162,-106,-105,-111,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-59,74,74,74,74,74,74,74,-169,-161,-78,74,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,168,-103,-98,74,-56,-75,74,74,74,74,-57,74,74,74,74,-76,74,]),'ELSE':([12,32,40,46,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,101,106,150,153,159,160,161,180,181,191,206,207,210,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,267,269,272,283,303,322,323,325,334,],[-159,-160,-17,-115,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-113,-116,-170,-162,-106,-105,-111,-135,235,-59,-169,-161,-112,-78,270,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-134,-75,-84,270,-57,-81,-76,-86,-82,-87,]),'BY':([12,32,40,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,243,244,267,283,303,322,325,],[-159,-160,-17,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-152,281,-155,-75,-57,-81,-76,-82,]),'THEN':([12,32,40,59,70,71,72,75,76,77,78,79,82,83,84,87,88,89,90,91,92,93,94,95,96,150,153,159,160,161,163,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,267,283,300,303,322,324,325,],[-159,-160,-17,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-83,-67,-110,-79,-65,-72,-56,180,-66,-107,-109,-71,-170,-162,-106,-105,-111,214,-59,-169,-161,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-75,-57,214,-81,-76,214,-82,]),'CCONST':([28,37,38,47,50,52,55,67,68,73,74,80,86,118,120,121,122,123,124,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[90,90,90,90,90,90,-131,90,90,90,90,90,90,-127,-128,-125,-130,-129,-126,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'DO':([0,2,6,10,15,19,21,26,39,43,46,49,69,101,106,107,108,126,130,180,182,186,208,210,232,235,275,292,315,316,319,329,332,333,339,],[2,2,-4,2,-5,-6,-7,-8,-2,2,-115,-3,2,-113,-116,2,2,-24,-9,2,-18,2,-179,-112,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([1,4,11,12,28,32,37,38,40,47,50,52,55,59,67,68,70,72,73,75,76,77,78,79,82,84,86,87,88,89,90,91,93,94,95,96,118,120,121,122,123,124,150,153,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,191,192,193,198,199,200,204,205,206,207,211,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,237,253,267,268,270,271,280,283,284,286,288,301,322,328,],[-56,-60,58,-159,80,-160,80,80,-17,80,80,80,-131,-58,80,80,-73,-88,80,-60,-70,-108,-74,-69,-68,-67,80,-110,179,-65,-72,-56,-66,-107,-109,-71,-127,-128,-125,-130,-129,-126,-170,-162,-106,-105,-111,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-59,80,80,80,80,80,80,80,-169,-161,-78,80,-99,-101,179,179,179,179,-100,-97,179,179,179,179,179,179,179,-98,80,-56,-75,80,80,80,80,-57,80,80,80,80,-76,80,]),'ARROW':([1,4,11,12,28,32,37,38,40,47,50,52,55,59,67,68,73,74,75,77,80,86,91,118,120,121,122,123,124,150,153,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,191,192,193,198,199,200,204,205,206,207,214,237,253,268,270,271,280,283,284,286,288,301,328,],[-56,-60,59,-159,81,-160,81,81,-17,81,81,81,-131,-58,81,81,81,81,-60,59,81,81,-56,-127,-128,-125,-130,-129,-126,-170,-162,59,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-59,81,81,81,81,81,81,81,-169,-161,81,81,-56,81,81,81,81,-57,81,81,81,81,81,]),'UPPER':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[22,22,-4,22,-5,-6,-7,-8,22,22,22,-2,22,-115,22,-3,22,22,-131,22,22,22,22,22,22,22,22,-113,-116,22,22,-127,-128,-125,-130,-129,-126,-24,-9,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-18,22,22,22,22,22,22,22,22,22,22,-179,-112,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'LENGTH':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[8,8,-4,8,-5,-6,-7,-8,8,8,8,-2,8,-115,8,-3,8,8,-131,8,8,8,8,8,8,8,8,-113,-116,8,8,-127,-128,-125,-130,-129,-126,-24,-9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-18,8,8,8,8,8,8,8,8,8,8,-179,-112,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'RBRACKET':([12,32,40,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,115,117,131,133,135,137,138,140,144,150,153,159,160,161,191,206,207,211,212,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,247,248,249,254,256,257,259,260,267,283,285,290,298,303,309,313,314,322,325,336,],[-159,-160,-17,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,191,-63,-38,-34,-36,-33,-37,-32,-35,-170,-162,-106,-105,-111,-59,-169,-161,-78,267,-63,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-64,283,-62,-54,287,-53,289,-48,-75,-57,-39,-40,322,-81,-43,327,-51,-76,-82,-52,]),'PRED':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[14,14,-4,14,-5,-6,-7,-8,14,14,14,-2,14,-115,14,-3,14,14,-131,14,14,14,14,14,14,14,14,-113,-116,14,14,-127,-128,-125,-130,-129,-126,-24,-9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-18,14,14,14,14,14,14,14,14,14,14,-179,-112,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'END':([6,15,19,21,26,39,49,101,126,130,182,208,210,316,329,333,339,],[-4,-5,-6,-7,-8,-2,-3,-113,-24,-9,-18,-179,-112,330,337,340,341,]),'LOC':([40,131,133,134,135,137,138,140,141,142,143,144,146,148,149,202,285,289,290,296,311,312,335,],[-17,-38,-34,-41,-36,-33,-37,-32,-46,-31,-28,-35,-30,-45,-29,-44,-39,-47,-40,321,-55,-49,-50,]),'PROC':([69,],[156,]),'TO':([12,32,40,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,243,244,267,278,282,283,303,306,307,322,325,],[-159,-160,-17,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-152,280,-155,-75,280,280,-57,-81,-153,280,-76,-82,]),'TYPE':([0,6,10,15,19,21,26,39,49,101,126,130,182,208,210,292,315,316,319,329,332,333,339,],[17,-4,17,-5,-6,-7,-8,-2,-3,-113,-24,-9,-18,-179,-112,17,17,17,17,17,17,17,17,]),'IF':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,86,101,106,107,108,118,120,121,122,123,124,126,130,162,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[28,28,-4,28,-5,-6,-7,-8,86,86,86,-2,28,-115,86,-3,86,86,-131,86,86,28,86,86,-113,-116,28,28,-127,-128,-125,-130,-129,-126,-24,-9,86,28,-18,86,28,86,86,86,86,86,86,86,86,-179,-112,86,28,28,86,86,86,86,28,86,86,86,86,28,86,28,28,28,86,28,28,28,28,]),'EXIT':([0,2,6,10,15,19,21,26,39,43,46,49,69,101,106,107,108,126,130,180,182,186,208,210,232,235,275,292,315,316,319,329,332,333,339,],[29,29,-4,29,-5,-6,-7,-8,-2,29,-115,-3,29,-113,-116,29,29,-24,-9,29,-18,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,]),'LOWER':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[30,30,-4,30,-5,-6,-7,-8,30,30,30,-2,30,-115,30,-3,30,30,-131,30,30,30,30,30,30,30,30,-113,-116,30,30,-127,-128,-125,-130,-129,-126,-24,-9,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-18,30,30,30,30,30,30,30,30,30,30,-179,-112,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'SYN':([0,6,10,15,19,21,26,39,49,101,126,130,182,208,210,292,315,316,319,329,332,333,339,],[31,-4,31,-5,-6,-7,-8,-2,-3,-113,-24,-9,-18,-179,-112,31,31,31,31,31,31,31,31,]),'NEQ':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,169,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,169,-91,169,-92,-100,-97,-95,169,-96,-93,-94,169,169,-98,-56,-75,-57,-76,]),'LT':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,172,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,172,172,172,172,-100,-97,-95,172,-96,-93,-94,172,172,-98,-56,-75,-57,-76,]),'RPAREN':([12,32,40,59,67,68,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,131,133,134,135,137,138,140,141,142,143,144,146,148,149,150,151,152,153,154,158,159,160,161,191,202,206,207,209,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,249,251,261,262,264,266,267,283,285,286,289,290,296,297,303,309,310,311,312,320,321,322,325,331,335,],[-159,-160,-17,-58,150,153,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-38,-34,-41,-36,-33,-37,-32,-46,-31,-28,-35,-30,-45,-29,-170,-163,206,-162,207,211,-106,-105,-111,-59,-44,-169,-161,263,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-62,285,290,-164,294,-184,-75,-57,-39,153,-47,-40,-189,-186,-81,-43,-163,-55,-49,-185,-188,-76,-82,338,-50,]),'TIMES':([1,4,11,12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-56,-60,51,-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,164,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,164,164,164,164,-100,164,164,164,164,164,164,164,164,164,-56,-75,-57,-76,]),'IN':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,112,114,150,153,159,160,161,188,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,178,-65,-72,-56,-66,-107,-109,-71,-151,190,-170,-162,-106,-105,-111,241,-59,-169,-161,-78,-99,-101,-90,-91,178,-92,-100,-97,-95,-89,-96,-93,-94,178,-103,-98,-56,-75,-57,-76,]),'ARRAY':([40,60,66,100,127,145,196,265,287,317,327,],[-17,-15,136,136,136,136,-16,136,136,136,136,]),'COLON':([1,12,27,32,40,45,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,116,117,150,153,159,160,161,191,206,207,211,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,250,252,253,267,283,303,310,322,325,],[-114,-159,69,-160,-17,108,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,193,-61,-170,-162,-106,-105,-111,-59,-169,-161,-78,268,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,284,-61,-56,-75,-57,-81,-61,-76,-82,]),'CHARS':([40,60,66,100,127,145,196,265,287,317,327,],[-17,-15,147,147,147,147,-16,147,147,147,147,]),'OR':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,166,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,-90,-91,166,-92,-100,-97,-95,-89,-96,-93,-94,166,166,-98,-56,-75,-57,-76,]),'REF':([40,60,66,100,127,145,196,265,287,317,327,],[-17,-15,145,145,145,145,-16,145,145,145,145,]),'INT':([40,60,66,100,127,145,190,196,199,241,265,287,288,317,327,328,],[-17,-15,135,135,135,135,135,-16,135,135,135,135,135,135,135,135,]),'SCONST':([28,37,38,47,50,52,55,67,68,73,74,80,86,118,120,121,122,123,124,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[78,78,78,78,78,78,-131,78,78,78,78,78,78,-127,-128,-125,-130,-129,-126,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'ASSIGN':([1,4,11,12,32,40,51,53,54,56,57,58,59,60,63,91,100,112,114,131,133,134,135,137,138,139,140,141,142,143,144,146,148,149,150,153,184,191,196,202,206,207,283,285,289,290,311,312,335,],[-56,-60,55,-159,-160,-17,118,120,121,122,123,124,-58,-15,127,-56,185,-151,189,-38,-34,-41,-36,-33,-37,200,-32,-46,-31,-28,-35,-30,-45,-29,-170,-162,237,-59,-16,-44,-169,-161,-57,-39,-47,-40,-55,-49,-50,]),'ELSIF':([12,32,40,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,267,269,272,283,303,322,323,325,334,],[-159,-160,-17,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,271,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-75,-84,301,-57,-81,-76,-86,-82,-87,]),'$end':([6,10,13,15,19,21,26,39,49,101,126,130,182,208,210,],[-4,-1,0,-5,-6,-7,-8,-2,-3,-113,-24,-9,-18,-179,-112,]),'NUM':([0,2,6,10,15,19,21,26,28,37,38,39,43,46,47,49,50,52,55,67,68,69,73,74,80,81,86,101,106,107,108,118,120,121,122,123,124,126,130,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,185,186,189,192,193,198,199,200,204,205,208,210,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[35,35,-4,35,-5,-6,-7,-8,35,35,35,-2,35,-115,35,-3,35,35,-131,35,35,35,35,35,35,35,35,-113,-116,35,35,-127,-128,-125,-130,-129,-126,-24,-9,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-18,35,35,35,35,35,35,35,35,35,35,-179,-112,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'GT':([12,32,40,59,70,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,253,267,283,322,],[-159,-160,-17,-58,-73,-88,-60,-70,-108,-74,-69,-68,-67,-110,175,-65,-72,-56,-66,-107,-109,-71,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,175,175,175,175,-100,-97,-95,175,-96,-93,-94,175,175,-98,-56,-75,-57,-76,]),'WHILE':([2,12,32,40,41,59,70,71,72,75,76,77,78,79,82,84,87,88,89,90,91,93,94,95,96,110,111,113,131,133,135,137,138,140,144,150,153,159,160,161,191,206,207,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,244,246,267,277,279,283,285,290,303,304,305,308,322,325,326,],[47,-159,-160,-17,47,-58,-73,-80,-88,-60,-70,-108,-74,-69,-68,-67,-110,-79,-65,-72,-56,-66,-107,-109,-71,-144,-145,-146,-38,-34,-36,-33,-37,-32,-35,-170,-162,-106,-105,-111,-59,-169,-161,-78,-99,-101,-90,-91,-102,-92,-100,-97,-95,-89,-96,-93,-94,-104,-103,-98,-155,-157,-75,-156,-150,-57,-39,-40,-81,-148,-154,-149,-76,-82,-147,]),'DCL':([0,6,10,15,19,21,26,39,49,101,126,130,182,208,210,292,315,316,319,329,332,333,339,],[18,-4,18,-5,-6,-7,-8,-2,-3,-113,-24,-9,-18,-179,-112,18,18,18,18,18,18,18,18,]),'RESULT':([0,2,6,10,15,19,21,26,39,43,46,49,69,101,106,107,108,126,130,180,182,186,208,210,232,235,275,292,315,316,319,329,332,333,339,],[37,37,-4,37,-5,-6,-7,-8,-2,37,-115,-3,37,-113,-116,37,37,-24,-9,37,-18,37,-179,-112,37,37,37,37,37,37,37,37,37,37,37,]),'RETURN':([0,2,6,10,15,19,21,26,39,43,46,49,69,101,106,107,108,126,130,180,182,186,208,210,232,235,275,292,315,316,319,329,332,333,339,],[38,38,-4,38,-5,-6,-7,-8,-2,38,-115,-3,38,-113,-116,38,38,-24,-9,38,-18,38,-179,-112,38,38,38,38,38,38,38,38,38,38,38,]),'FOR':([2,],[48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'end_value':([243,278,282,307,],[279,304,308,326,]),'discrete_expression':([189,280,],[242,305,]),'conditional_expression':([28,37,38,47,50,52,67,68,73,86,162,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'index_mode_list':([288,],[313,]),'string_length':([203,],[259,]),'declaration_statement':([0,10,292,315,316,319,329,332,333,339,],[6,6,6,6,6,6,6,6,6,6,]),'character_mode':([66,100,127,145,190,199,241,265,287,288,317,327,328,],[133,133,133,133,133,133,133,133,133,133,133,133,133,]),'exit_action':([0,2,10,43,69,107,108,180,186,232,235,275,292,315,316,319,329,332,333,339,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assignment_action':([0,2,10,43,69,107,108,180,186,232,235,275,292,315,316,319,329,332,333,339,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'boolean_mode':([66,100,127,145,190,199,241,265,287,288,317,327,328,],[137,137,137,137,137,137,137,137,137,137,137,137,137,]),'initialization':([139,],[201,]),'else_clause':([181,],[234,]),'mode_name':([66,100,127,145,265,287,317,327,],[143,143,143,143,143,143,143,143,]),'array_mode':([66,100,127,145,265,287,317,327,],[141,141,141,141,141,141,141,141,]),'composite_mode':([66,100,127,145,265,287,317,327,],[142,142,142,142,142,142,142,142,]),'while_control':([2,41,],[42,104,]),'then_clause':([92,],[181,]),'lower_bound':([50,198,199,204,286,288,328,],[116,250,250,250,250,250,250,]),'procedure_statement':([0,10,292,315,316,319,329,332,333,339,],[21,21,21,21,21,21,21,21,21,21,]),'parenthesized_expression':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'expression':([28,37,38,47,50,52,67,68,73,86,162,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[83,102,103,83,117,119,151,151,158,83,213,238,244,247,249,252,252,258,252,262,269,238,298,299,83,244,249,310,252,83,252,]),'parameter_list':([67,68,286,],[152,154,154,]),'discrete_mode_name':([0,2,10,28,37,38,43,47,50,52,66,67,68,69,73,74,80,81,86,100,107,108,127,145,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,185,186,189,190,192,193,198,199,200,204,205,214,232,235,237,241,265,268,270,271,275,280,284,286,287,288,292,301,315,316,317,319,327,328,329,332,333,339,],[25,25,25,25,25,25,25,25,25,25,132,25,25,25,25,25,25,25,25,132,25,25,132,132,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,132,25,25,25,255,25,25,25,25,25,25,25,132,132,25,25,25,25,25,25,25,132,255,25,25,25,25,132,25,132,255,25,25,25,25,]),'synonym_list':([31,],[98,]),'step_enumeration':([48,],[111,]),'for_control':([2,],[41,]),'formal_parameter':([209,295,],[266,320,]),'constant_expression':([185,237,],[239,276,]),'elsif_expression':([215,],[272,]),'mode':([66,100,127,145,265,287,317,327,],[139,184,195,202,296,311,296,311,]),'integer_mode':([66,100,127,145,190,199,241,265,287,288,317,327,328,],[140,140,140,140,140,140,140,140,140,140,140,140,140,]),'primitive_value':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'binop':([28,37,38,47,50,52,67,68,73,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[88,88,88,88,88,88,88,88,88,88,88,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'upper_bound':([193,284,],[248,309,]),'iteration':([48,],[110,]),'action_statement_list':([2,107,180,235,],[43,186,232,275,]),'loop_counter':([48,],[114,]),'operand1':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[94,94,94,94,94,94,94,94,94,159,160,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'do_action':([0,2,10,43,69,107,108,180,186,232,235,275,292,315,316,319,329,332,333,339,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'range_enumeration':([48,],[113,]),'element_mode':([287,327,],[312,335,]),'referenced_location':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'result_action':([0,2,10,43,69,107,108,180,186,232,235,275,292,315,316,319,329,332,333,339,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'else_expression':([215,272,],[273,302,]),'declaration':([18,129,],[64,197,]),'start_value':([189,],[243,]),'operand':([28,37,38,47,50,52,67,68,73,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'mode_definition':([17,125,],[61,194,]),'call_action':([0,2,10,28,37,38,43,47,50,52,67,68,69,73,74,80,81,86,107,108,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,185,186,189,192,193,198,199,200,204,205,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[4,4,4,75,75,75,4,75,75,75,75,75,4,75,75,75,75,75,4,4,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,4,75,4,75,75,75,75,75,75,75,75,75,4,4,75,75,75,75,4,75,75,75,75,4,75,4,4,4,75,4,4,4,4,]),'value_array_element':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'identifier':([0,2,10,17,18,28,29,31,37,38,43,47,48,50,52,66,67,68,69,73,74,80,81,86,100,107,108,125,127,128,129,145,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,185,186,189,190,192,193,198,199,200,204,205,209,214,232,235,237,241,265,268,270,271,275,280,284,286,287,288,292,295,301,315,316,317,319,327,328,329,332,333,339,],[1,1,1,60,60,91,97,60,91,91,1,91,112,91,91,134,91,91,91,91,91,91,91,91,134,1,91,60,134,196,60,134,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,1,60,91,1,91,245,91,91,91,253,91,91,91,60,91,1,1,91,245,134,91,91,91,1,91,91,91,134,253,1,60,91,1,1,134,1,134,253,1,1,1,1,]),'statement_list':([0,292,315,319,332,],[10,316,329,333,339,]),'location':([0,2,10,28,37,38,43,47,50,52,67,68,69,73,74,80,81,86,107,108,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,185,186,189,192,193,198,199,200,204,205,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[11,11,11,77,77,77,11,77,77,77,77,77,11,77,77,77,161,77,11,11,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,11,77,11,77,77,77,77,77,77,77,77,77,11,11,77,77,77,77,11,77,77,77,77,11,77,11,11,11,77,11,11,11,11,]),'procedure_call':([0,2,10,28,37,38,43,47,50,52,67,68,69,73,74,80,81,86,107,108,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,185,186,189,192,193,198,199,200,204,205,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'program':([0,],[13,]),'literal_range':([198,199,204,286,288,328,],[251,254,261,251,254,254,]),'array_primitive_value':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'synonym_statement':([0,10,292,315,316,319,329,332,333,339,],[15,15,15,15,15,15,15,15,15,15,]),'expression_list':([50,162,],[115,212,]),'if_action':([0,2,10,43,69,107,108,180,186,232,235,275,292,315,316,319,329,332,333,339,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'step_value':([243,],[282,]),'control_part':([2,],[44,]),'string_mode':([66,100,127,145,265,287,317,327,],[148,148,148,148,148,148,148,148,]),'then_expression':([163,300,324,],[215,323,334,]),'newmode_statement':([0,10,292,315,316,319,329,332,333,339,],[19,19,19,19,19,19,19,19,19,19,]),'return_action':([0,2,10,43,69,107,108,180,186,232,235,275,292,315,316,319,329,332,333,339,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'builtin_name':([0,2,10,28,37,38,43,47,50,52,67,68,69,73,74,80,81,86,107,108,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,185,186,189,192,193,198,199,200,204,205,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'value_array_slice':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'formal_parameter_list':([209,],[264,]),'newmode_list':([17,],[62,]),'declaration_list':([18,],[65,]),'procedure_definition':([69,],[155,]),'index_mode':([199,288,328,],[256,314,336,]),'assigning_operator':([11,],[52,]),'literal':([28,37,38,47,50,52,67,68,73,74,80,86,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,189,192,193,198,199,200,204,205,214,237,268,270,271,280,284,286,288,301,328,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'result_spec':([263,294,],[291,318,]),'builtin_call':([0,2,10,28,37,38,43,47,50,52,67,68,69,73,74,80,81,86,107,108,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,185,186,189,192,193,198,199,200,204,205,214,232,235,237,268,270,271,275,280,284,286,288,292,301,315,316,319,328,329,332,333,339,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'action_statement':([0,2,10,43,107,180,186,232,235,275,292,315,316,319,329,332,333,339,],[26,46,26,106,46,46,106,106,46,106,26,26,26,26,26,26,26,26,]),'discrete_range_mode':([66,100,127,145,190,199,241,265,287,288,317,327,328,],[144,144,144,144,144,144,144,144,144,144,144,144,144,]),'boolean_expression':([28,47,86,271,301,],[92,109,163,300,324,]),'identifier_list':([17,18,31,125,129,183,209,295,],[63,66,100,63,66,100,265,265,]),'action':([0,2,10,43,69,107,108,180,186,232,235,275,292,315,316,319,329,332,333,339,],[33,33,33,33,157,33,157,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'synonym_definition':([31,183,],[99,236,]),'parameter_spec':([265,317,],[297,331,]),'label_id':([0,2,10,43,107,180,186,232,235,275,292,315,316,319,329,332,333,339,],[27,45,27,45,45,45,45,45,45,45,27,27,27,27,27,27,27,27,]),'statement':([0,10,292,315,316,319,329,332,333,339,],[39,49,39,39,49,39,49,39,49,49,]),'reference_mode':([66,100,127,145,265,287,317,327,],[146,146,146,146,146,146,146,146,]),'discrete_mode':([66,100,127,145,190,199,241,265,287,288,317,327,328,],[149,149,149,149,246,257,277,149,149,257,149,149,257,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
