
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0C6940C9035F0F53366945483CC096A7'
    
_lr_action_items = {'ARROW':([7,10,12,16,19,22,28,33,36,46,48,50,52,55,59,66,71,75,79,80,81,90,93,105,128,130,132,136,137,139,140,141,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,197,198,199,200,201,209,229,231,243,267,272,273,277,278,279,284,296,300,326,],[-17,-56,50,-60,-160,-159,69,69,69,69,69,-58,69,69,-131,69,69,69,-60,-56,69,50,69,69,-162,-170,-127,-128,-130,-129,-125,-126,50,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-161,-169,69,-59,69,69,69,69,-56,69,69,69,69,69,69,-57,69,69,69,]),'NEQ':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,163,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,163,-99,-92,-96,-93,-100,-91,163,-94,163,-95,163,-98,-101,163,-56,-75,-57,-76,]),'LPAREN':([4,7,8,9,10,15,17,24,27,28,31,33,35,36,40,46,48,52,55,59,66,71,75,80,81,93,104,105,107,108,110,112,113,117,118,121,124,132,136,137,139,140,141,142,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,241,243,246,261,262,267,272,273,277,278,279,281,283,288,292,296,300,326,],[46,-17,-172,48,-42,-174,-173,-176,-171,71,-177,71,-178,71,-175,71,71,71,71,-131,71,71,71,-42,71,71,-35,71,189,-33,-38,-37,-36,-42,-34,-32,194,-127,-128,-130,-129,-125,-126,202,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,277,-42,194,194,-42,71,71,71,71,71,71,-39,-40,312,194,71,71,71,]),'CHAR':([7,42,44,95,114,183,188,193,207,256,263,279,280,312,326,327,],[-17,110,-15,110,110,110,110,-16,110,110,110,110,110,110,110,110,]),'PRINT':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[35,35,-6,-4,-2,-5,35,35,-7,-8,35,35,35,-3,35,-113,35,35,-131,35,35,35,-115,35,35,35,35,35,35,-18,-127,-128,-130,-129,-125,-126,35,-116,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-9,35,-24,35,35,35,35,35,35,35,-112,-179,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'PROC':([60,],[142,]),'FI':([7,19,22,49,50,68,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,153,156,158,159,181,182,197,198,200,203,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,234,235,237,268,271,275,284,299,301,303,322,323,],[-17,-160,-159,-113,-58,-115,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-116,-111,-105,-106,-135,236,-161,-169,-59,-112,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-134,-137,276,-75,301,-136,-57,323,-81,-85,-76,-82,]),'SYN':([0,5,14,18,21,23,30,32,47,49,126,180,184,203,204,287,311,313,315,330,331,332,340,],[3,3,-6,-4,-2,-5,-7,-8,-3,-113,-18,-9,-24,-112,-179,3,3,3,3,3,3,3,3,]),'WHILE':([7,19,22,26,50,63,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,104,108,110,112,113,118,121,128,130,147,148,149,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,261,264,268,281,283,284,292,295,301,318,319,321,322,323,333,],[-17,-160,-159,66,-58,66,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-35,-33,-38,-37,-36,-34,-32,-162,-170,-144,-146,-145,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-157,-155,-75,-39,-40,-57,-156,-150,-81,-148,-154,-149,-76,-82,-147,]),'RPAREN':([7,19,22,46,48,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,104,108,109,110,111,112,113,116,117,118,120,121,123,124,127,128,129,130,131,156,157,158,159,190,197,198,200,202,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,247,251,252,254,258,259,268,277,281,282,283,284,285,286,301,304,305,308,309,310,314,322,323,329,336,],[-17,-160,-159,128,130,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-35,-33,-46,-38,-30,-37,-36,-28,-41,-34,-31,-32,-45,-29,-163,-162,197,-170,198,-111,210,-105,-106,-44,-161,-169,-59,257,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,281,283,-164,-62,-184,291,-75,128,-39,-47,-40,-57,-189,-186,-81,-163,-43,-49,-55,-188,-185,-76,-82,337,-50,]),'ID':([0,1,3,5,7,14,18,21,23,26,28,29,30,32,33,34,36,42,44,46,47,48,49,52,55,59,60,62,64,66,68,69,71,75,81,93,95,105,114,122,125,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,180,181,183,184,185,188,189,191,193,194,196,199,201,202,203,204,206,207,209,229,231,234,235,256,263,267,272,273,275,277,278,279,280,287,290,296,300,311,312,313,315,326,327,330,331,332,340,],[7,7,7,7,-17,-6,-4,-2,-5,7,7,7,-7,-8,7,7,7,7,-15,7,-3,7,-113,7,7,-131,7,7,7,7,-115,7,7,7,7,7,7,7,7,7,7,-18,-127,-128,-130,-129,-125,-126,7,-116,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-9,7,7,-24,7,7,7,7,-16,7,7,7,7,7,-112,-179,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CCONST':([28,33,36,46,48,52,55,59,66,71,75,81,93,105,132,136,137,139,140,141,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[73,73,73,73,73,73,73,-131,73,73,73,73,73,73,-127,-128,-130,-129,-125,-126,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'IN':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,146,150,156,158,159,197,198,200,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,170,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,207,-151,-111,-105,-106,-161,-169,-59,263,-78,-97,170,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,170,-98,-101,-89,-56,-75,-57,-76,]),'RETURNS':([257,291,],[288,288,]),'REF':([7,42,44,95,114,183,193,256,280,312,327,],[-17,114,-15,114,114,114,-16,114,114,114,114,]),'COLON':([7,10,19,22,25,50,67,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,133,135,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,240,243,244,268,284,301,304,322,323,],[-17,-114,-160,-159,60,-58,155,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-61,201,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,267,-61,-56,278,-75,-57,-81,-61,-76,-82,]),'ELSE':([7,19,22,49,50,68,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,153,156,158,159,181,182,197,198,200,203,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,230,234,268,269,270,284,301,322,323,325,334,],[-17,-160,-159,-113,-58,-115,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-116,-111,-105,-106,-135,235,-161,-169,-59,-112,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,273,-134,-75,-84,273,-57,-81,-76,-82,-86,-87,]),'PRED':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[8,8,-6,-4,-2,-5,8,8,-7,-8,8,8,8,-3,8,-113,8,8,-131,8,8,8,-115,8,8,8,8,8,8,-18,-127,-128,-130,-129,-125,-126,8,-116,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-9,8,-24,8,8,8,8,8,8,8,-112,-179,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'AND':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,175,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,175,-99,-92,-96,-93,-100,-91,175,-94,175,-95,175,-98,-101,-89,-56,-75,-57,-76,]),'EQ':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,167,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,167,-99,-92,-96,-93,-100,-91,167,-94,167,-95,167,-98,-101,167,-56,-75,-57,-76,]),'BY':([7,19,22,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,264,265,266,268,284,301,322,323,],[-17,-160,-159,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-155,293,-152,-75,-57,-81,-76,-82,]),'DO':([0,5,14,18,21,23,26,30,32,47,49,60,64,68,126,145,153,155,180,181,184,203,204,206,234,235,275,287,311,313,315,330,331,332,340,],[26,26,-6,-4,-2,-5,26,-7,-8,-3,-113,26,26,-115,-18,26,-116,26,-9,26,-24,-112,-179,26,26,26,26,26,26,26,26,26,26,26,26,]),'RESULT':([0,5,14,18,21,23,26,30,32,47,49,60,64,68,126,145,153,155,180,181,184,203,204,206,234,235,275,287,311,313,315,330,331,332,340,],[28,28,-6,-4,-2,-5,28,-7,-8,-3,-113,28,28,-115,-18,28,-116,28,-9,28,-24,-112,-179,28,28,28,28,28,28,28,28,28,28,28,28,]),'DIVIDE':([7,10,12,16,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-56,53,-60,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,166,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,166,166,-99,166,166,166,-100,166,166,166,166,166,166,166,-101,166,-56,-75,-57,-76,]),'NULL':([28,33,36,46,48,52,55,59,66,71,75,81,93,105,132,136,137,139,140,141,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[76,76,76,76,76,76,76,-131,76,76,76,76,76,76,-127,-128,-130,-129,-125,-126,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'EXIT':([0,5,14,18,21,23,26,30,32,47,49,60,64,68,126,145,153,155,180,181,184,203,204,206,234,235,275,287,311,313,315,330,331,332,340,],[1,1,-6,-4,-2,-5,1,-7,-8,-3,-113,1,1,-115,-18,1,-116,1,-9,1,-24,-112,-179,1,1,1,1,1,1,1,1,1,1,1,1,]),'FOR':([26,],[62,]),'UPPER':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[15,15,-6,-4,-2,-5,15,15,-7,-8,15,15,15,-3,15,-113,15,15,-131,15,15,15,-115,15,15,15,15,15,15,-18,-127,-128,-130,-129,-125,-126,15,-116,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-9,15,-24,15,15,15,15,15,15,15,-112,-179,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'SUCC':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[17,17,-6,-4,-2,-5,17,17,-7,-8,17,17,17,-3,17,-113,17,17,-131,17,17,17,-115,17,17,17,17,17,17,-18,-127,-128,-130,-129,-125,-126,17,-116,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-9,17,-24,17,17,17,17,17,17,17,-112,-179,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'MOD':([7,10,12,16,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-56,56,-60,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,174,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,174,174,-99,174,174,174,-100,174,174,174,174,174,174,174,-101,174,-56,-75,-57,-76,]),'$end':([5,14,18,20,21,23,30,32,47,49,126,180,184,203,204,],[-1,-6,-4,0,-2,-5,-7,-8,-3,-113,-18,-9,-24,-112,-179,]),'LT':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,171,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,171,-99,171,-96,-93,-100,171,171,-94,171,-95,171,-98,-101,171,-56,-75,-57,-76,]),'NOT':([7,19,22,28,33,36,46,48,50,52,55,59,66,71,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,93,94,105,128,130,132,136,137,139,140,141,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,197,198,199,200,201,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,229,231,243,267,268,272,273,277,278,279,284,296,300,322,326,],[-17,-160,-159,81,81,81,81,81,-58,81,81,-131,81,81,-72,-88,-73,-67,-110,-60,-56,172,-65,-107,-68,-66,-70,-74,-71,-108,-69,81,-109,81,-162,-170,-127,-128,-130,-129,-125,-126,-111,-105,-106,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-161,-169,81,-59,81,81,-78,-97,172,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,81,81,-56,81,-75,81,81,81,81,81,-57,81,81,-76,81,]),'TO':([7,19,22,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,264,265,266,268,284,294,297,301,317,320,322,323,],[-17,-160,-159,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-155,296,-152,-75,-57,296,296,-81,-153,296,-76,-82,]),'GE':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,169,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,169,-99,169,-96,-93,-100,169,169,-94,169,-95,169,-98,-101,169,-56,-75,-57,-76,]),'PLUS':([7,10,12,16,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-56,57,-60,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,160,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,160,-99,160,160,160,-100,160,160,160,160,160,160,-98,-101,160,-56,-75,-57,-76,]),'ARRAY':([7,42,44,95,114,183,193,256,280,312,327,],[-17,106,-15,106,106,106,-16,106,106,106,106,]),'TIMES':([7,10,12,16,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-56,51,-60,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,162,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,162,162,-99,162,162,162,-100,162,162,162,162,162,162,162,-101,162,-56,-75,-57,-76,]),'TRUE':([28,33,36,46,48,52,55,59,66,71,75,81,93,105,132,136,137,139,140,141,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[89,89,89,89,89,89,89,-131,89,89,89,89,89,89,-127,-128,-130,-129,-125,-126,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'CHARS':([7,42,44,95,114,183,193,256,280,312,327,],[-17,119,-15,119,119,119,-16,119,119,119,119,]),'LOC':([7,104,108,109,110,111,112,113,116,117,118,120,121,123,124,190,281,282,283,285,308,309,336,],[-17,-35,-33,-46,-38,-30,-37,-36,-28,-41,-34,-31,-32,-45,-29,-44,-39,-47,-40,310,-49,-55,-50,]),'GT':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,165,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,165,-99,165,-96,-93,-100,165,165,-94,165,-95,165,-98,-101,165,-56,-75,-57,-76,]),'FALSE':([28,33,36,46,48,52,55,59,66,71,75,81,93,105,132,136,137,139,140,141,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[87,87,87,87,87,87,87,-131,87,87,87,87,87,87,-127,-128,-130,-129,-125,-126,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'LENGTH':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[24,24,-6,-4,-2,-5,24,24,-7,-8,24,24,24,-3,24,-113,24,24,-131,24,24,24,-115,24,24,24,24,24,24,-18,-127,-128,-130,-129,-125,-126,24,-116,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-9,24,-24,24,24,24,24,24,24,24,-112,-179,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'SEMI':([2,6,7,11,13,16,19,22,36,37,38,39,41,43,45,50,61,63,65,70,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,96,97,98,101,102,103,104,108,109,110,111,112,113,116,117,118,120,121,123,124,128,130,138,143,144,147,148,149,151,152,154,156,158,159,178,186,187,190,195,197,198,200,205,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,232,233,236,238,239,248,257,260,261,264,268,274,276,281,282,283,284,289,291,292,295,301,308,309,316,318,319,321,322,323,328,333,336,337,338,339,341,],[-123,-121,-17,49,-117,-120,-160,-159,-167,-119,-118,-122,-165,-19,126,-58,145,-142,-143,-168,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-10,180,-83,-25,184,-166,-35,-33,-46,-38,-30,-37,-36,-28,-41,-34,-31,-32,-45,-29,-162,-170,-124,203,204,-144,-146,-145,-141,-140,-158,-111,-105,-106,-13,-23,-22,-44,-20,-161,-169,-59,-139,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-12,-11,-133,-27,-26,-21,287,-138,-157,-155,-75,-14,-132,-39,-47,-40,-57,313,315,-156,-150,-81,-49,-55,332,-148,-154,-149,-76,-82,-183,-147,-50,-187,-182,-181,-180,]),'NUM':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[27,27,-6,-4,-2,-5,27,27,-7,-8,27,27,27,-3,27,-113,27,27,-131,27,27,27,-115,27,27,27,27,27,27,-18,-127,-128,-130,-129,-125,-126,27,-116,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-9,27,-24,27,27,27,27,27,27,27,-112,-179,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'END':([14,18,21,23,30,32,47,49,126,180,184,203,204,311,330,331,340,],[-6,-4,-2,-5,-7,-8,-3,-113,-18,-9,-24,-112,-179,328,338,339,341,]),'BOOL':([7,42,44,95,114,183,188,193,207,256,263,279,280,312,326,327,],[-17,112,-15,112,112,112,112,-16,112,112,112,112,112,112,112,112,]),'INT':([7,42,44,95,114,183,188,193,207,256,263,279,280,312,326,327,],[-17,113,-15,113,113,113,113,-16,113,113,113,113,113,113,113,113,]),'OD':([49,64,68,145,153,203,206,],[-113,152,-115,205,-116,-112,260,]),'MINUS':([7,10,12,16,19,22,28,33,36,46,48,50,52,55,59,66,71,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,93,94,105,128,130,132,136,137,139,140,141,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,197,198,199,200,201,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,229,231,243,267,268,272,273,277,278,279,284,296,300,322,326,],[-17,-56,58,-60,-160,-159,75,75,75,75,75,-58,75,75,-131,75,75,-72,-88,-73,-67,-110,-60,-56,173,-65,-107,-68,-66,-70,-74,-71,-108,-69,75,-109,75,-162,-170,-127,-128,-130,-129,-125,-126,-111,-105,-106,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-161,-169,75,-59,75,75,-78,-97,173,-99,173,173,173,-100,173,173,173,173,173,173,-98,-101,173,75,75,-56,75,-75,75,75,75,75,75,-57,75,75,-76,75,]),'ASSIGN':([7,10,12,16,19,22,42,44,50,51,53,54,56,57,58,80,100,104,108,109,110,111,112,113,115,116,117,118,120,121,123,124,128,130,146,150,178,190,193,197,198,200,281,282,283,284,308,309,336,],[-17,-56,59,-60,-160,-159,105,-15,-58,132,136,137,139,140,141,-56,183,-35,-33,-46,-38,-30,-37,-36,191,-28,-41,-34,-31,-32,-45,-29,-162,-170,209,-151,231,-44,-16,-161,-169,-59,-39,-47,-40,-57,-49,-55,-50,]),'RBRACKET':([7,19,22,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,104,108,110,112,113,118,121,128,130,133,134,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,242,245,246,249,250,253,254,255,268,281,283,284,298,301,305,306,307,322,323,335,],[-17,-160,-159,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-35,-33,-38,-37,-36,-34,-32,-162,-170,-63,200,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-63,268,-54,280,-53,282,-48,-64,-62,284,-75,-39,-40,-57,322,-81,-43,-51,327,-76,-82,-52,]),'SCONST':([28,33,36,46,48,52,55,59,66,71,75,81,93,105,132,136,137,139,140,141,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[88,88,88,88,88,88,88,-131,88,88,88,88,88,88,-127,-128,-130,-129,-125,-126,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'ICONST':([28,33,36,46,48,52,55,59,66,71,75,81,93,105,132,136,137,139,140,141,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,192,194,196,199,201,209,229,231,267,272,273,277,278,279,293,296,300,326,],[91,91,91,91,91,91,91,-131,91,91,91,91,91,91,-127,-128,-130,-129,-125,-126,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,250,91,91,91,91,91,91,91,91,91,91,91,91,91,317,91,91,91,]),'THEN':([7,19,22,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,98,99,128,130,156,158,159,177,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,268,284,301,302,322,323,324,],[-17,-160,-159,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-83,181,-162,-170,-111,-105,-106,229,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-75,-57,-81,229,-76,-82,229,]),'LBRACKET':([7,10,12,16,19,22,50,73,76,77,78,79,80,83,85,86,87,88,89,90,91,92,106,119,128,130,156,197,198,200,210,243,268,284,322,],[-17,-56,52,-60,-160,-159,-58,-72,-73,-67,-77,-60,-56,-65,-68,-66,-70,-74,-71,52,-69,176,188,192,-162,-170,52,-161,-169,-59,-78,-56,-75,-57,-76,]),'READ':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[31,31,-6,-4,-2,-5,31,31,-7,-8,31,31,31,-3,31,-113,31,31,-131,31,31,31,-115,31,31,31,31,31,31,-18,-127,-128,-130,-129,-125,-126,31,-116,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-9,31,-24,31,31,31,31,31,31,31,-112,-179,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'LE':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,164,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,164,-99,164,-96,-93,-100,164,164,-94,164,-95,164,-98,-101,164,-56,-75,-57,-76,]),'CONCAT':([7,10,12,16,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-56,54,-60,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,161,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-56,-75,-57,-76,]),'OR':([7,19,22,50,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,243,268,284,322,],[-17,-160,-159,-58,-72,-88,-73,-67,-110,-60,-56,168,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,168,-99,-92,-96,-93,-100,-91,-90,-94,168,-95,168,-98,-101,-89,-56,-75,-57,-76,]),'IF':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,71,93,105,126,132,136,137,139,140,141,145,153,155,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[33,33,-6,-4,-2,-5,33,93,-7,-8,93,93,93,-3,93,-113,93,93,-131,33,33,93,-115,93,93,93,-18,-127,-128,-130,-129,-125,-126,33,-116,33,93,-9,33,-24,93,93,93,93,93,93,93,-112,-179,33,93,93,93,33,33,93,93,93,33,93,93,93,33,93,93,33,33,33,93,33,33,33,33,]),'COMMA':([7,19,22,42,43,44,45,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,95,96,97,100,101,102,104,108,109,110,111,112,113,116,117,118,120,121,123,124,127,128,129,130,131,133,134,156,158,159,178,186,187,190,193,195,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,232,233,238,239,242,245,246,248,252,253,254,256,258,259,268,274,281,282,283,284,285,286,301,304,305,306,307,308,309,310,314,322,323,335,336,],[-17,-160,-159,122,-19,-15,125,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,122,-10,179,122,-25,185,-35,-33,-46,-38,-30,-37,-36,-28,-41,-34,-31,-32,-45,-29,-163,-162,196,-170,196,-63,199,-111,-105,-106,-13,-23,-22,-44,-16,-20,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-63,199,-12,-11,-27,-26,-54,279,-53,-21,-164,-64,-62,122,-184,290,-75,-14,-39,-47,-40,-57,-189,-186,-81,-163,-43,-51,326,-49,-55,-188,-185,-76,-82,-52,-50,]),'TYPE':([0,5,14,18,21,23,30,32,47,49,126,180,184,203,204,287,311,313,315,330,331,332,340,],[34,34,-6,-4,-2,-5,-7,-8,-3,-113,-18,-9,-24,-112,-179,34,34,34,34,34,34,34,34,]),'DOWN':([7,19,22,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,146,150,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,264,265,266,268,284,297,301,317,322,323,],[-17,-160,-159,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,208,-151,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,-155,294,-152,-75,-57,320,-81,-153,-76,-82,]),'RETURN':([0,5,14,18,21,23,26,30,32,47,49,60,64,68,126,145,153,155,180,181,184,203,204,206,234,235,275,287,311,313,315,330,331,332,340,],[36,36,-6,-4,-2,-5,36,-7,-8,-3,-113,36,36,-115,-18,36,-116,36,-9,36,-24,-112,-179,36,36,36,36,36,36,36,36,36,36,36,36,]),'ELSIF':([7,19,22,50,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,94,128,130,156,158,159,197,198,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,230,268,269,270,284,301,322,323,325,334,],[-17,-160,-159,-58,-80,-72,-88,-73,-67,-110,-60,-56,-79,-65,-107,-68,-66,-70,-74,-71,-108,-69,-109,-162,-170,-111,-105,-106,-161,-169,-59,-78,-97,-104,-99,-92,-96,-93,-100,-91,-90,-94,-103,-95,-102,-98,-101,-89,272,-75,-84,300,-57,-81,-76,-82,-86,-87,]),'DCL':([0,5,14,18,21,23,30,32,47,49,126,180,184,203,204,287,311,313,315,330,331,332,340,],[29,29,-6,-4,-2,-5,-7,-8,-3,-113,-18,-9,-24,-112,-179,29,29,29,29,29,29,29,29,]),'LOWER':([0,5,14,18,21,23,26,28,30,32,33,36,46,47,48,49,52,55,59,60,64,66,68,69,71,75,81,93,105,126,132,136,137,139,140,141,145,153,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,184,188,189,191,194,196,199,201,203,204,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[40,40,-6,-4,-2,-5,40,40,-7,-8,40,40,40,-3,40,-113,40,40,-131,40,40,40,-115,40,40,40,40,40,40,-18,-127,-128,-130,-129,-125,-126,40,-116,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-9,40,-24,40,40,40,40,40,40,40,-112,-179,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([28,33,36,46,48,52,55,66,71,93,105,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[70,98,103,127,127,133,138,98,157,98,186,227,240,240,186,240,252,253,254,264,269,274,298,98,303,304,254,240,264,98,240,]),'literal_range':([188,189,194,277,279,326,],[242,247,251,247,242,242,]),'identifier_list':([3,29,34,125,179,185,202,290,],[42,95,100,42,95,100,256,256,]),'exit_action':([0,5,26,60,64,145,155,181,206,234,235,275,287,311,313,315,330,331,332,340,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'control_part':([26,],[61,]),'formal_parameter':([202,290,],[258,314,]),'integer_mode':([42,95,114,183,188,207,256,263,279,280,312,326,327,],[121,121,121,121,121,121,121,121,121,121,121,121,121,]),'identifier':([0,1,3,5,26,28,29,33,34,36,42,46,48,52,55,60,62,64,66,69,71,75,81,93,95,105,114,122,125,145,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,181,183,185,188,189,191,194,196,199,201,202,206,207,209,229,231,234,235,256,263,267,272,273,275,277,278,279,280,287,290,296,300,311,312,313,315,326,327,330,331,332,340,],[10,41,44,10,10,80,44,80,44,80,117,80,80,80,80,80,150,10,80,80,80,80,80,80,117,80,117,193,44,10,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,44,10,117,44,243,80,80,80,80,80,80,44,10,262,80,80,80,10,10,117,262,80,80,80,10,80,80,243,117,10,44,80,80,10,117,10,10,243,117,10,10,10,10,]),'step_value':([265,],[297,]),'lower_bound':([52,188,189,194,277,279,326,],[135,244,244,244,244,244,244,]),'statement':([0,5,287,311,313,315,330,331,332,340,],[21,47,21,47,21,21,47,47,21,47,]),'builtin_call':([0,5,26,28,33,36,46,48,52,55,60,64,66,69,71,75,81,93,105,145,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,188,189,191,194,196,199,201,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'if_action':([0,5,26,60,64,145,155,181,206,234,235,275,287,311,313,315,330,331,332,340,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'element_mode':([280,327,],[308,336,]),'value_array_slice':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'parameter_spec':([256,312,],[286,329,]),'primitive_value':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'call_action':([0,5,26,28,33,36,46,48,52,55,60,64,66,69,71,75,81,93,105,145,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,188,189,191,194,196,199,201,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[16,16,16,79,79,79,79,79,79,79,16,16,79,79,79,79,79,79,79,16,16,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,16,79,79,79,79,79,79,79,16,79,79,79,16,16,79,79,79,16,79,79,79,16,79,79,16,16,16,79,16,16,16,16,]),'parameter_list':([46,48,277,],[129,131,129,]),'binop':([28,33,36,46,48,52,55,66,71,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[82,82,82,82,82,82,82,82,82,82,82,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'literal':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'newmode_list':([34,],[102,]),'discrete_range_mode':([42,95,114,183,188,207,256,263,279,280,312,326,327,],[104,104,104,104,104,104,104,104,104,104,104,104,104,]),'while_control':([26,63,],[65,151,]),'location':([0,5,26,28,33,36,46,48,52,55,60,64,66,69,71,75,81,93,105,145,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,188,189,191,194,196,199,201,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[12,12,12,90,90,90,90,90,90,90,12,12,90,156,90,90,90,90,90,12,12,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,12,90,90,90,90,90,90,90,12,90,90,90,12,12,90,90,90,12,90,90,90,12,90,90,12,12,12,90,12,12,12,12,]),'procedure_call':([0,5,26,28,33,36,46,48,52,55,60,64,66,69,71,75,81,93,105,145,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,188,189,191,194,196,199,201,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'boolean_mode':([42,95,114,183,188,207,256,263,279,280,312,326,327,],[108,108,108,108,108,108,108,108,108,108,108,108,108,]),'synonym_definition':([3,125,],[43,195,]),'label_id':([0,5,26,64,145,181,206,234,235,275,287,311,313,315,330,331,332,340,],[25,25,67,67,67,67,67,67,67,67,25,25,25,25,25,25,25,25,]),'constant_expression':([105,191,],[187,248,]),'index_mode':([188,279,326,],[245,306,335,]),'formal_parameter_list':([202,],[259,]),'start_value':([209,],[265,]),'loop_counter':([62,],[146,]),'else_expression':([230,270,],[271,299,]),'array_primitive_value':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'procedure_statement':([0,5,287,311,313,315,330,331,332,340,],[30,30,30,30,30,30,30,30,30,30,]),'procedure_definition':([60,],[144,]),'else_clause':([182,],[237,]),'range_enumeration':([62,],[148,]),'referenced_location':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'discrete_mode':([42,95,114,183,188,207,256,263,279,280,312,326,327,],[124,124,124,124,246,261,124,292,246,124,124,246,124,]),'do_action':([0,5,26,60,64,145,155,181,206,234,235,275,287,311,313,315,330,331,332,340,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'return_action':([0,5,26,60,64,145,155,181,206,234,235,275,287,311,313,315,330,331,332,340,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'end_value':([265,294,297,320,],[295,318,321,333,]),'result_action':([0,5,26,60,64,145,155,181,206,234,235,275,287,311,313,315,330,331,332,340,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'discrete_mode_name':([0,5,26,28,33,36,42,46,48,52,55,60,64,66,69,71,75,81,93,95,105,114,145,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,183,188,189,191,194,196,199,201,206,207,209,229,231,234,235,256,263,267,272,273,275,277,278,279,280,287,296,300,311,312,313,315,326,327,330,331,332,340,],[4,4,4,4,4,4,107,4,4,4,4,4,4,4,4,4,4,4,4,107,4,107,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,107,241,4,4,4,4,4,4,4,107,4,4,4,4,4,107,107,4,4,4,4,4,4,241,107,4,4,4,4,107,4,4,241,107,4,4,4,4,]),'conditional_expression':([28,33,36,46,48,52,55,66,71,93,105,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'assigning_operator':([12,],[55,]),'index_mode_list':([279,],[307,]),'statement_list':([0,287,313,315,332,],[5,311,330,331,340,]),'builtin_name':([0,5,26,28,33,36,46,48,52,55,60,64,66,69,71,75,81,93,105,145,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,188,189,191,194,196,199,201,206,209,229,231,234,235,267,272,273,275,277,278,279,287,296,300,311,313,315,326,330,331,332,340,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'array_mode':([42,95,114,183,256,280,312,327,],[109,109,109,109,109,109,109,109,]),'result_spec':([257,291,],[289,316,]),'mode':([42,95,114,183,256,280,312,327,],[115,178,190,238,285,309,285,309,]),'operand':([28,33,36,46,48,52,55,66,71,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'action':([0,5,26,60,64,145,155,181,206,234,235,275,287,311,313,315,330,331,332,340,],[11,11,11,143,11,11,143,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'composite_mode':([42,95,114,183,256,280,312,327,],[120,120,120,120,120,120,120,120,]),'then_expression':([177,302,324,],[230,325,334,]),'mode_name':([42,95,114,183,256,280,312,327,],[116,116,116,116,116,116,116,116,]),'for_control':([26,],[63,]),'declaration_statement':([0,5,287,311,313,315,330,331,332,340,],[18,18,18,18,18,18,18,18,18,18,]),'mode_definition':([34,185,],[101,239,]),'action_statement_list':([26,145,181,235,],[64,206,234,275,]),'operand1':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[84,84,84,84,84,84,84,84,84,158,159,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'iteration':([62,],[147,]),'program':([0,],[20,]),'boolean_expression':([33,66,93,272,300,],[99,154,177,302,324,]),'parenthesized_expression':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'elsif_expression':([230,],[270,]),'value_array_element':([28,33,36,46,48,52,55,66,71,75,81,93,105,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,189,191,194,196,199,201,209,229,231,267,272,273,277,278,279,296,300,326,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'synonym_statement':([0,5,287,311,313,315,330,331,332,340,],[23,23,23,23,23,23,23,23,23,23,]),'initialization':([178,],[232,]),'expression_list':([52,176,],[134,228,]),'step_enumeration':([62,],[149,]),'declaration':([29,179,],[96,233,]),'reference_mode':([42,95,114,183,256,280,312,327,],[111,111,111,111,111,111,111,111,]),'declaration_list':([29,],[97,]),'then_clause':([99,],[182,]),'synonym_list':([3,],[45,]),'assignment_action':([0,5,26,60,64,145,155,181,206,234,235,275,287,311,313,315,330,331,332,340,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'string_length':([192,],[249,]),'newmode_statement':([0,5,287,311,313,315,330,331,332,340,],[14,14,14,14,14,14,14,14,14,14,]),'upper_bound':([201,278,],[255,305,]),'action_statement':([0,5,26,64,145,181,206,234,235,275,287,311,313,315,330,331,332,340,],[32,32,68,153,68,68,153,153,68,153,32,32,32,32,32,32,32,32,]),'discrete_expression':([209,296,],[266,319,]),'character_mode':([42,95,114,183,188,207,256,263,279,280,312,326,327,],[118,118,118,118,118,118,118,118,118,118,118,118,118,]),'string_mode':([42,95,114,183,256,280,312,327,],[123,123,123,123,123,123,123,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
