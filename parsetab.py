
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D13CB7D2856407AF05E890E5B9A99495'
    
_lr_action_items = {'PROC':([95,],[175,]),'RESULT':([0,1,9,10,12,16,26,34,35,85,86,87,88,95,137,140,141,148,152,180,181,211,213,214,232,233,250,297,319,320,323,331,333,334,340,],[2,-6,-2,-4,2,2,-8,-5,-7,2,-115,-3,-113,2,2,2,2,-116,-18,-24,-9,2,2,2,-179,-112,2,2,2,2,2,2,2,2,2,]),'RPAREN':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,89,103,104,107,108,125,149,150,151,154,156,157,158,159,161,163,166,167,168,169,170,171,173,184,185,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,222,231,239,246,248,259,267,269,274,275,278,283,292,294,295,296,300,301,304,307,315,316,317,318,322,325,332,336,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,149,184,-106,-105,190,-111,-170,220,-163,-34,-30,-28,-46,-45,-32,-33,-31,-41,-35,-38,-36,-37,-29,-162,239,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-44,272,-161,-75,-62,-164,294,295,302,-184,-81,-57,184,-39,-40,-47,-186,-189,-82,-76,-55,-49,-163,-43,-188,-185,338,-50,]),'IF':([0,1,2,8,9,10,12,16,23,26,34,35,48,59,68,73,76,80,85,86,87,88,89,95,103,106,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[8,-6,48,48,-2,-4,8,8,48,-8,-5,-7,48,48,48,48,-131,48,8,-115,-3,-113,48,8,48,48,-127,-125,-129,-126,-128,-130,8,8,8,-116,-18,48,-24,-9,48,48,48,8,8,8,48,48,48,48,48,48,-179,-112,48,48,48,48,8,48,48,48,48,48,8,8,8,8,48,8,8,8,8,]),'UPPER':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[14,-6,14,14,-2,-4,14,14,14,-8,-5,-7,14,14,14,14,14,14,14,-131,14,14,-115,-3,-113,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-127,-125,-129,-126,-128,-130,14,14,14,-116,-18,14,-24,-9,14,14,14,14,14,14,14,14,14,14,14,14,-179,-112,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'PRINT':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[25,-6,25,25,-2,-4,25,25,25,-8,-5,-7,25,25,25,25,25,25,25,-131,25,25,-115,-3,-113,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-127,-125,-129,-126,-128,-130,25,25,25,-116,-18,25,-24,-9,25,25,25,25,25,25,25,25,25,25,25,25,-179,-112,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'WHILE':([4,12,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,81,104,107,125,142,143,145,149,154,161,163,168,169,170,171,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,254,257,278,283,288,289,294,295,304,307,308,310,312,327,],[-17,80,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,80,-106,-105,-111,-144,-146,-145,-170,-34,-32,-33,-35,-38,-36,-37,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,-155,-157,-81,-57,-150,-156,-39,-40,-82,-76,-154,-148,-149,-147,]),'$end':([1,7,9,10,16,26,34,35,87,88,152,180,181,232,233,],[-6,0,-2,-4,-1,-8,-5,-7,-3,-113,-18,-24,-9,-179,-112,]),'DIVIDE':([3,4,18,30,33,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[74,-17,-160,-60,-56,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,118,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,118,118,118,118,118,118,118,118,118,-100,118,118,118,-101,118,-99,-59,-169,-161,-75,-56,-57,-76,]),'LT':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,119,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,119,119,-96,119,-94,-97,119,-93,-98,-100,-95,119,119,-101,119,-99,-59,-169,-161,-75,-56,-57,-76,]),'NOT':([2,4,8,18,23,38,41,42,43,44,45,46,48,49,50,51,52,53,58,59,60,61,62,63,65,66,67,68,73,76,80,89,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,132,134,135,149,164,184,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,216,219,220,223,224,228,229,237,239,241,244,245,246,263,280,283,284,290,292,293,307,328,],[47,-17,47,-160,47,-159,-68,-110,-108,-66,-70,-65,47,-72,-74,-109,-88,-60,-107,47,-67,120,-73,-56,-69,-71,-58,47,47,-131,47,47,47,-106,47,-105,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-111,-127,-125,-129,-126,-128,-130,-170,47,-162,47,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,120,-101,-89,-99,-59,47,47,47,47,-169,47,47,47,47,47,-161,47,47,47,-75,-56,47,-57,47,47,47,47,-76,47,]),'CCONST':([2,8,23,47,48,57,59,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[49,49,49,49,49,49,49,49,49,-131,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-127,-125,-129,-126,-128,-130,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'SCONST':([2,8,23,47,48,57,59,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[50,50,50,50,50,50,50,50,50,-131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-127,-125,-129,-126,-128,-130,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'OD':([85,86,88,141,148,214,233,],[147,-115,-113,215,-116,252,-112,]),'REF':([4,91,92,101,155,178,227,273,291,321,329,],[-17,155,-15,155,155,155,-16,155,155,155,155,]),'MOD':([3,4,18,30,33,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[71,-17,-160,-60,-56,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,122,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,122,122,122,122,122,122,122,122,122,-100,122,122,122,-101,122,-99,-59,-169,-161,-75,-56,-57,-76,]),'NEQ':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,109,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,-92,109,-96,-91,-94,-97,109,-93,-98,-100,-95,109,109,-101,109,-99,-59,-169,-161,-75,-56,-57,-76,]),'EQ':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,112,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,-92,112,-96,-91,-94,-97,112,-93,-98,-100,-95,112,112,-101,112,-99,-59,-169,-161,-75,-56,-57,-76,]),'THEN':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,77,78,104,105,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,278,281,283,304,305,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,137,-83,-106,186,-105,-111,-170,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,-81,186,-57,-82,186,-76,]),'SUCC':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[11,-6,11,11,-2,-4,11,11,11,-8,-5,-7,11,11,11,11,11,11,11,-131,11,11,-115,-3,-113,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-127,-125,-129,-126,-128,-130,11,11,11,-116,-18,11,-24,-9,11,11,11,11,11,11,11,11,11,11,11,11,-179,-112,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'PLUS':([3,4,18,30,33,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[70,-17,-160,-60,-56,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,114,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,114,114,114,114,114,-97,114,114,-98,-100,114,114,114,-101,114,-99,-59,-169,-161,-75,-56,-57,-76,]),'OR':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,110,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,-92,-90,-96,-91,-94,-97,110,-93,-98,-100,-95,110,110,-101,-89,-99,-59,-169,-161,-75,-56,-57,-76,]),'LE':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,111,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,111,111,-96,111,-94,-97,111,-93,-98,-100,-95,111,111,-101,111,-99,-59,-169,-161,-75,-56,-57,-76,]),'DO':([0,1,9,10,12,16,26,34,35,85,86,87,88,95,137,140,141,148,152,180,181,211,213,214,232,233,250,297,319,320,323,331,333,334,340,],[12,-6,-2,-4,12,12,-8,-5,-7,12,-115,-3,-113,12,12,12,12,-116,-18,-24,-9,12,12,12,-179,-112,12,12,12,12,12,12,12,12,12,]),'CHAR':([4,91,92,101,155,178,217,223,227,258,273,290,291,321,328,329,],[-17,169,-15,169,169,169,169,169,-16,169,169,169,169,169,169,169,]),'INT':([4,91,92,101,155,178,217,223,227,258,273,290,291,321,328,329,],[-17,170,-15,170,170,170,170,170,-16,170,170,170,170,170,170,170,]),'ELSE':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,86,88,104,107,125,136,137,148,149,184,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,213,220,233,239,240,243,246,278,283,304,306,307,326,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,-115,-113,-106,-105,-111,211,-135,-116,-170,-162,241,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-134,-169,-112,-161,-84,241,-75,-81,-57,-82,-86,-76,-87,]),'LOC':([4,154,156,157,158,159,161,163,166,167,168,169,170,171,173,222,294,295,296,301,315,316,336,],[-17,-34,-30,-28,-46,-45,-32,-33,-31,-41,-35,-38,-36,-37,-29,-44,-39,-40,-47,322,-55,-49,-50,]),'TIMES':([3,4,18,30,33,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[69,-17,-160,-60,-56,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,124,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,124,124,124,124,124,124,124,124,124,-100,124,124,124,-101,124,-99,-59,-169,-161,-75,-56,-57,-76,]),'RBRACKET':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,104,107,125,126,127,149,154,161,163,168,169,170,171,184,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,247,248,249,260,264,266,270,271,278,282,283,294,295,304,307,313,314,318,335,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,-106,-105,-111,-63,207,-170,-34,-32,-33,-35,-38,-36,-37,-162,-63,246,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,-64,-62,283,291,-54,-53,296,-48,-81,307,-57,-39,-40,-82,-76,329,-51,-43,-52,]),'CONCAT':([3,4,18,30,33,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[75,-17,-160,-60,-56,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,121,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,-56,-57,-76,]),'FALSE':([2,8,23,47,48,57,59,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[45,45,45,45,45,45,45,45,45,-131,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-127,-125,-129,-126,-128,-130,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'DOWN':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,104,107,125,144,146,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,253,254,255,278,283,287,304,307,309,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,-106,-105,-111,218,-151,-170,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,286,-155,-152,-81,-57,311,-82,-76,-153,]),'TO':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,253,254,255,278,283,286,287,304,307,309,311,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,284,-155,-152,-81,-57,284,284,-82,-76,-153,284,]),'END':([1,9,10,26,34,35,87,88,152,180,181,232,233,319,331,333,340,],[-6,-2,-4,-8,-5,-7,-3,-113,-18,-24,-9,-179,-112,330,337,339,341,]),'LBRACKET':([3,4,18,30,33,38,41,42,43,44,45,46,49,50,53,56,60,62,63,65,66,67,125,149,160,174,184,190,207,220,239,246,263,283,307,],[68,-17,-160,-60,-56,-159,-68,-77,68,-66,-70,-65,-72,-74,-60,106,-67,-73,-56,-69,-71,-58,68,-170,223,230,-162,-78,-59,-169,-161,-75,-56,-57,-76,]),'DCL':([0,1,9,10,16,26,34,35,87,88,152,180,181,232,233,297,319,320,323,331,333,334,340,],[29,-6,-2,-4,29,-8,-5,-7,-3,-113,-18,-24,-9,-179,-112,29,29,29,29,29,29,29,29,]),'SYN':([0,1,9,10,16,26,34,35,87,88,152,180,181,232,233,297,319,320,323,331,333,334,340,],[22,-6,-2,-4,22,-8,-5,-7,-3,-113,-18,-24,-9,-179,-112,22,22,22,22,22,22,22,22,]),'IN':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,144,146,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,218,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,115,-73,-56,-69,-71,-58,-106,-105,-111,217,-151,-170,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,115,115,-101,-89,-99,-59,258,-169,-161,-75,-56,-57,-76,]),'RETURN':([0,1,9,10,12,16,26,34,35,85,86,87,88,95,137,140,141,148,152,180,181,211,213,214,232,233,250,297,319,320,323,331,333,334,340,],[23,-6,-2,-4,23,23,-8,-5,-7,23,-115,-3,-113,23,23,23,23,-116,-18,-24,-9,23,23,23,-179,-112,23,23,23,23,23,23,23,23,23,]),'MINUS':([2,3,4,8,18,23,30,33,38,41,42,43,44,45,46,48,49,50,51,52,53,58,59,60,61,62,63,65,66,67,68,73,76,80,89,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,132,134,135,149,164,184,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,216,219,220,223,224,228,229,237,239,241,244,245,246,263,280,283,284,290,292,293,307,328,],[57,72,-17,57,-160,57,-60,-56,-159,-68,-110,-108,-66,-70,-65,57,-72,-74,-109,-88,-60,-107,57,-67,117,-73,-56,-69,-71,-58,57,57,-131,57,57,57,-106,57,-105,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-111,-127,-125,-129,-126,-128,-130,-170,57,-162,57,-78,117,117,117,117,117,-97,117,117,-98,-100,117,117,117,-101,117,-99,-59,57,57,57,57,-169,57,57,57,57,57,-161,57,57,57,-75,-56,57,-57,57,57,57,57,-76,57,]),'FOR':([12,],[84,]),'ID':([0,1,2,4,8,9,10,12,16,22,23,26,27,29,31,34,35,47,48,57,59,64,68,73,76,80,84,85,86,87,88,89,91,92,95,101,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,153,155,164,165,178,179,180,181,182,186,208,209,211,213,214,216,217,219,223,224,227,228,229,231,232,233,237,241,244,245,250,258,273,280,284,290,291,292,293,297,303,319,320,321,323,328,329,331,333,334,340,],[4,-6,4,-17,4,-2,-4,4,4,4,4,-8,4,4,4,-5,-7,4,4,4,4,4,4,4,-131,4,4,4,-115,-3,-113,4,4,-15,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-127,-125,-129,-126,-128,-130,4,4,4,-116,-18,4,4,4,4,4,4,-24,-9,4,4,4,4,4,4,4,4,4,4,4,4,-16,4,4,4,-179,-112,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LPAREN':([2,4,8,11,14,21,23,25,28,32,33,36,37,39,40,47,48,57,59,63,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,154,161,162,163,164,167,168,169,170,171,173,175,186,208,209,216,219,223,224,228,229,237,241,244,245,256,257,262,263,266,280,284,289,290,292,293,294,295,299,328,],[59,-17,59,-173,-174,89,59,-178,-171,-176,-42,-177,103,-175,-172,59,59,59,59,-42,59,59,-131,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-127,-125,-129,-126,-128,-130,-34,-32,224,-33,59,-42,-35,-38,-36,-37,229,231,59,59,59,59,59,59,59,59,59,59,59,59,59,-42,229,292,-42,229,59,59,229,59,59,59,-39,-40,321,59,]),'ARRAY':([4,91,92,101,155,178,227,273,291,321,329,],[-17,160,-15,160,160,160,-16,160,160,160,160,]),'FI':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,86,88,104,107,125,136,137,148,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,220,233,239,242,246,250,277,278,279,283,304,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,-115,-113,-106,-105,-111,210,-135,-116,-170,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-137,251,-134,-169,-112,-161,278,-75,-136,-85,-81,304,-57,-82,-76,]),'SEMI':([4,5,6,13,15,17,18,19,20,23,30,38,41,42,43,44,45,46,49,50,51,52,53,54,55,58,60,61,62,63,65,66,67,78,79,81,83,90,93,94,96,98,99,100,102,104,107,125,133,138,139,142,143,145,147,149,154,156,157,158,159,161,163,166,167,168,169,170,171,173,176,177,183,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,215,220,221,222,225,226,234,235,236,238,239,246,251,252,254,257,268,272,276,278,283,288,289,294,295,296,298,302,304,307,308,310,312,315,316,324,327,330,336,337,338,339,341,],[-17,-119,-117,-121,-122,-123,-160,88,-118,-167,-120,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-168,-107,-67,-79,-73,-56,-69,-71,-58,-83,-143,-142,141,152,-19,-166,-25,180,181,-10,-165,-106,-105,-111,-124,-158,-141,-144,-146,-145,-140,-170,-34,-30,-28,-46,-45,-32,-33,-31,-41,-35,-38,-36,-37,-29,232,233,-13,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-133,-139,-169,-20,-44,-22,-23,-27,-26,-11,-12,-161,-75,-132,-138,-155,-157,-21,297,-14,-81,-57,-150,-156,-39,-40,-47,320,323,-82,-76,-154,-148,-149,-55,-49,334,-147,-183,-50,-182,-187,-181,-180,]),'AND':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,123,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,-92,123,-96,-91,-94,-97,123,-93,-98,-100,-95,123,123,-101,-89,-99,-59,-169,-161,-75,-56,-57,-76,]),'LOWER':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[39,-6,39,39,-2,-4,39,39,39,-8,-5,-7,39,39,39,39,39,39,39,-131,39,39,-115,-3,-113,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-127,-125,-129,-126,-128,-130,39,39,39,-116,-18,39,-24,-9,39,39,39,39,39,39,39,39,39,39,39,39,-179,-112,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'TYPE':([0,1,9,10,16,26,34,35,87,88,152,180,181,232,233,297,319,320,323,331,333,334,340,],[27,-6,-2,-4,27,-8,-5,-7,-3,-113,-18,-24,-9,-179,-112,27,27,27,27,27,27,27,27,]),'NUM':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[28,-6,28,28,-2,-4,28,28,28,-8,-5,-7,28,28,28,28,28,28,28,-131,28,28,-115,-3,-113,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-127,-125,-129,-126,-128,-130,28,28,28,-116,-18,28,-24,-9,28,28,28,28,28,28,28,28,28,28,28,28,-179,-112,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ASSIGN':([3,4,18,30,33,38,63,67,69,70,71,72,74,75,91,92,97,144,146,149,154,156,157,158,159,161,163,166,167,168,169,170,171,172,173,183,184,207,220,222,227,239,283,294,295,296,315,316,336,],[76,-17,-160,-60,-56,-159,-56,-58,129,130,131,132,134,135,164,-15,178,216,-151,-170,-34,-30,-28,-46,-45,-32,-33,-31,-41,-35,-38,-36,-37,228,-29,237,-162,-59,-169,-44,-16,-161,-57,-39,-40,-47,-55,-49,-50,]),'COMMA':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,90,91,92,93,96,97,98,99,100,101,104,107,125,126,127,149,150,151,154,156,157,158,159,161,163,166,167,168,169,170,171,173,183,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,221,222,225,226,227,234,235,236,238,239,246,247,248,259,260,264,266,268,273,274,275,276,278,283,294,295,296,300,301,304,307,313,314,315,316,317,318,322,325,335,336,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,153,165,-15,-19,-25,165,179,182,-10,165,-106,-105,-111,-63,208,-170,219,-163,-34,-30,-28,-46,-45,-32,-33,-31,-41,-35,-38,-36,-37,-29,-13,-162,219,-63,208,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-20,-44,-22,-23,-16,-27,-26,-11,-12,-161,-75,-64,-62,-164,290,-54,-53,-21,165,303,-184,-14,-81,-57,-39,-40,-47,-186,-189,-82,-76,328,-51,-55,-49,-163,-43,-188,-185,-52,-50,]),'GT':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,116,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,116,116,-96,116,-94,-97,116,-93,-98,-100,-95,116,116,-101,116,-99,-59,-169,-161,-75,-56,-57,-76,]),'EXIT':([0,1,9,10,12,16,26,34,35,85,86,87,88,95,137,140,141,148,152,180,181,211,213,214,232,233,250,297,319,320,323,331,333,334,340,],[31,-6,-2,-4,31,31,-8,-5,-7,31,-115,-3,-113,31,31,31,31,-116,-18,-24,-9,31,31,31,-179,-112,31,31,31,31,31,31,31,31,31,]),'COLON':([4,18,24,33,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,82,104,107,125,126,128,149,184,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,261,263,265,278,283,304,307,317,],[-17,-160,95,-114,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,140,-106,-105,-111,-61,209,-170,-162,245,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,-61,-56,293,-81,-57,-82,-76,-61,]),'NULL':([2,8,23,47,48,57,59,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[62,62,62,62,62,62,62,62,62,-131,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-127,-125,-129,-126,-128,-130,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LENGTH':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[32,-6,32,32,-2,-4,32,32,32,-8,-5,-7,32,32,32,32,32,32,32,-131,32,32,-115,-3,-113,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-127,-125,-129,-126,-128,-130,32,32,32,-116,-18,32,-24,-9,32,32,32,32,32,32,32,32,32,32,32,32,-179,-112,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'GE':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,263,283,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-107,-67,113,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,113,113,-96,113,-94,-97,113,-93,-98,-100,-95,113,113,-101,113,-99,-59,-169,-161,-75,-56,-57,-76,]),'TRUE':([2,8,23,47,48,57,59,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-127,-125,-129,-126,-128,-130,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'CHARS':([4,91,92,101,155,178,227,273,291,321,329,],[-17,174,-15,174,174,174,-16,174,174,174,174,]),'RETURNS':([272,302,],[299,299,]),'ARROW':([2,3,4,8,18,23,30,33,38,43,47,48,53,57,59,63,67,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,132,134,135,149,164,184,186,207,208,209,216,219,220,223,224,228,229,237,239,241,244,245,263,280,283,284,290,292,293,328,],[64,67,-17,64,-160,64,-60,-56,-159,67,64,64,-60,64,64,-56,-58,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,67,-127,-125,-129,-126,-128,-130,-170,64,-162,64,-59,64,64,64,64,-169,64,64,64,64,64,-161,64,64,64,-56,64,-57,64,64,64,64,64,]),'ICONST':([2,8,23,47,48,57,59,68,73,76,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,164,186,208,209,216,219,223,224,228,229,230,237,241,244,245,280,284,285,290,292,293,328,],[65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-127,-125,-129,-126,-128,-130,65,65,65,65,65,65,65,65,65,65,271,65,65,65,65,65,65,309,65,65,65,65,]),'BY':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,104,107,125,149,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,246,253,254,255,278,283,304,307,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-75,285,-155,-152,-81,-57,-82,-76,]),'BOOL':([4,91,92,101,155,178,217,223,227,258,273,290,291,321,328,329,],[-17,171,-15,171,171,171,171,171,-16,171,171,171,171,171,171,171,]),'ELSIF':([4,18,38,41,42,43,44,45,46,49,50,51,52,53,54,58,60,61,62,63,65,66,67,104,107,125,149,184,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,239,240,243,246,278,283,304,306,307,326,],[-17,-160,-159,-68,-110,-108,-66,-70,-65,-72,-74,-109,-88,-60,-80,-107,-67,-79,-73,-56,-69,-71,-58,-106,-105,-111,-170,-162,244,-78,-92,-90,-96,-91,-94,-97,-103,-93,-98,-100,-95,-102,-104,-101,-89,-99,-59,-169,-161,-84,280,-75,-81,-57,-82,-86,-76,-87,]),'READ':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[36,-6,36,36,-2,-4,36,36,36,-8,-5,-7,36,36,36,36,36,36,36,-131,36,36,-115,-3,-113,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-127,-125,-129,-126,-128,-130,36,36,36,-116,-18,36,-24,-9,36,36,36,36,36,36,36,36,36,36,36,36,-179,-112,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PRED':([0,1,2,8,9,10,12,16,23,26,34,35,47,48,57,59,64,68,73,76,80,85,86,87,88,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,130,131,132,134,135,137,140,141,148,152,164,180,181,186,208,209,211,213,214,216,219,223,224,228,229,232,233,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[40,-6,40,40,-2,-4,40,40,40,-8,-5,-7,40,40,40,40,40,40,40,-131,40,40,-115,-3,-113,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-127,-125,-129,-126,-128,-130,40,40,40,-116,-18,40,-24,-9,40,40,40,40,40,40,40,40,40,40,40,40,-179,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_length':([230,],[270,]),'while_control':([12,81,],[79,139,]),'location':([0,2,8,12,16,23,47,48,57,59,64,68,73,80,85,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,140,141,164,186,208,209,211,213,214,216,219,223,224,228,229,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[3,43,43,3,3,43,43,43,43,43,125,43,43,43,3,43,3,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,3,3,3,43,43,43,43,3,3,3,43,43,43,43,43,43,43,43,43,43,3,43,43,43,43,43,3,3,3,3,43,3,3,3,3,]),'return_action':([0,12,16,85,95,137,140,141,211,213,214,250,297,319,320,323,331,333,334,340,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'assignment_action':([0,12,16,85,95,137,140,141,211,213,214,250,297,319,320,323,331,333,334,340,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_action':([0,12,16,85,95,137,140,141,211,213,214,250,297,319,320,323,331,333,334,340,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'value_array_element':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'reference_mode':([91,101,155,178,273,291,321,329,],[156,156,156,156,156,156,156,156,]),'boolean_expression':([8,48,80,244,280,],[77,105,138,281,305,]),'identifier_list':([22,27,29,153,179,182,231,303,],[91,97,101,91,97,101,273,273,]),'then_clause':([77,],[136,]),'statement':([0,16,297,319,320,323,331,333,334,340,],[9,87,9,87,9,9,87,87,9,87,]),'parameter_spec':([273,321,],[300,332,]),'boolean_mode':([91,101,155,178,217,223,258,273,290,291,321,328,329,],[163,163,163,163,163,163,163,163,163,163,163,163,163,]),'referenced_location':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'declaration_statement':([0,16,297,319,320,323,331,333,334,340,],[10,10,10,10,10,10,10,10,10,10,]),'start_value':([216,],[253,]),'loop_counter':([84,],[144,]),'constant_expression':([164,228,],[225,268,]),'for_control':([12,],[81,]),'discrete_mode_name':([0,2,8,12,16,23,47,48,57,59,64,68,73,80,85,89,91,95,101,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,140,141,155,164,178,186,208,209,211,213,214,216,217,219,223,224,228,229,237,241,244,245,250,258,273,280,284,290,291,292,293,297,319,320,321,323,328,329,331,333,334,340,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,162,37,162,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,162,37,162,37,37,37,37,37,37,37,162,37,262,37,37,37,37,37,37,37,37,162,162,37,37,262,162,37,37,37,37,37,162,37,262,162,37,37,37,37,]),'declaration':([29,182,],[100,236,]),'result_action':([0,12,16,85,95,137,140,141,211,213,214,250,297,319,320,323,331,333,334,340,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'mode':([91,101,155,178,273,291,321,329,],[172,183,222,234,301,315,301,315,]),'builtin_call':([0,2,8,12,16,23,47,48,57,59,64,68,73,80,85,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,140,141,164,186,208,209,211,213,214,216,219,223,224,228,229,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'newmode_list':([27,],[98,]),'do_action':([0,12,16,85,95,137,140,141,211,213,214,250,297,319,320,323,331,333,334,340,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'expression':([2,8,23,48,59,68,73,80,89,103,106,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[55,78,94,78,108,126,133,78,151,151,188,226,240,247,248,254,259,261,261,226,261,276,277,78,282,78,254,261,317,248,261,]),'literal_range':([223,224,229,290,292,328,],[264,267,269,264,267,264,]),'formal_parameter_list':([231,],[274,]),'label_id':([0,12,16,85,137,141,211,213,214,250,297,319,320,323,331,333,334,340,],[24,82,24,82,82,82,82,82,82,82,24,24,24,24,24,24,24,24,]),'mode_definition':([27,179,],[96,235,]),'value_array_slice':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'index_mode':([223,290,328,],[260,314,335,]),'binop':([2,8,23,48,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[61,61,61,61,61,61,61,61,61,61,61,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'then_expression':([105,281,305,],[187,306,326,]),'control_part':([12,],[83,]),'lower_bound':([68,223,224,229,290,292,328,],[128,265,265,265,265,265,265,]),'composite_mode':([91,101,155,178,273,291,321,329,],[166,166,166,166,166,166,166,166,]),'discrete_mode':([91,101,155,178,217,223,258,273,290,291,321,328,329,],[173,173,173,173,257,266,289,173,266,173,173,266,173,]),'newmode_statement':([0,16,297,319,320,323,331,333,334,340,],[1,1,1,1,1,1,1,1,1,1,]),'parenthesized_expression':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'procedure_definition':([95,],[176,]),'primitive_value':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'discrete_range_mode':([91,101,155,178,217,223,258,273,290,291,321,328,329,],[168,168,168,168,168,168,168,168,168,168,168,168,168,]),'else_expression':([187,243,],[242,279,]),'step_enumeration':([84,],[145,]),'mode_name':([91,101,155,178,273,291,321,329,],[157,157,157,157,157,157,157,157,]),'call_action':([0,2,8,12,16,23,47,48,57,59,64,68,73,80,85,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,140,141,164,186,208,209,211,213,214,216,219,223,224,228,229,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[30,53,53,30,30,53,53,53,53,53,53,53,53,53,30,53,30,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,30,30,30,53,53,53,53,30,30,30,53,53,53,53,53,53,53,53,53,53,30,53,53,53,53,53,30,30,30,30,53,30,30,30,30,]),'integer_mode':([91,101,155,178,217,223,258,273,290,291,321,328,329,],[161,161,161,161,161,161,161,161,161,161,161,161,161,]),'literal':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'end_value':([253,286,287,311,],[288,310,312,327,]),'operand':([2,8,23,48,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'parameter_list':([89,103,292,],[150,185,185,]),'result_spec':([272,302,],[298,324,]),'exit_action':([0,12,16,85,95,137,140,141,211,213,214,250,297,319,320,323,331,333,334,340,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'assigning_operator':([3,],[73,]),'index_mode_list':([290,],[313,]),'statement_list':([0,297,320,323,334,],[16,319,331,333,340,]),'formal_parameter':([231,303,],[275,325,]),'step_value':([253,],[287,]),'initialization':([183,],[238,]),'character_mode':([91,101,155,178,217,223,258,273,290,291,321,328,329,],[154,154,154,154,154,154,154,154,154,154,154,154,154,]),'action':([0,12,16,85,95,137,140,141,211,213,214,250,297,319,320,323,331,333,334,340,],[19,19,19,19,177,19,177,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'conditional_expression':([2,8,23,48,59,68,73,80,89,103,106,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'builtin_name':([0,2,8,12,16,23,47,48,57,59,64,68,73,80,85,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,140,141,164,186,208,209,211,213,214,216,219,223,224,228,229,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'array_primitive_value':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'operand1':([2,8,23,47,48,57,59,68,73,80,89,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,186,208,209,216,219,223,224,228,229,237,241,244,245,280,284,290,292,293,328,],[58,58,58,104,58,107,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'array_mode':([91,101,155,178,273,291,321,329,],[158,158,158,158,158,158,158,158,]),'string_mode':([91,101,155,178,273,291,321,329,],[159,159,159,159,159,159,159,159,]),'action_statement_list':([12,137,141,211,],[85,213,214,250,]),'else_clause':([136,],[212,]),'action_statement':([0,12,16,85,137,141,211,213,214,250,297,319,320,323,331,333,334,340,],[26,86,26,148,86,86,86,148,148,148,26,26,26,26,26,26,26,26,]),'expression_list':([68,106,],[127,189,]),'upper_bound':([209,293,],[249,318,]),'iteration':([84,],[142,]),'procedure_call':([0,2,8,12,16,23,47,48,57,59,64,68,73,80,85,89,95,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,140,141,164,186,208,209,211,213,214,216,219,223,224,228,229,237,241,244,245,250,280,284,290,292,293,297,319,320,323,328,331,333,334,340,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'range_enumeration':([84,],[143,]),'synonym_list':([22,],[90,]),'element_mode':([291,329,],[316,336,]),'identifier':([0,2,8,12,16,22,23,27,29,31,47,48,57,59,64,68,73,80,84,85,89,91,95,101,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,140,141,153,155,164,165,178,179,182,186,208,209,211,213,214,216,217,219,223,224,228,229,231,237,241,244,245,250,258,273,280,284,290,291,292,293,297,303,319,320,321,323,328,329,331,333,334,340,],[33,63,63,33,33,92,63,92,92,102,63,63,63,63,63,63,63,63,146,33,63,167,63,167,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,33,63,33,92,167,63,227,167,92,92,63,63,63,33,33,33,63,256,63,263,63,63,63,92,63,63,63,63,33,256,167,63,63,263,167,63,63,33,92,33,33,167,33,263,167,33,33,33,33,]),'synonym_statement':([0,16,297,319,320,323,331,333,334,340,],[34,34,34,34,34,34,34,34,34,34,]),'procedure_statement':([0,16,297,319,320,323,331,333,334,340,],[35,35,35,35,35,35,35,35,35,35,]),'discrete_expression':([216,284,],[255,308,]),'elsif_expression':([187,],[243,]),'program':([0,],[7,]),'declaration_list':([29,],[99,]),'synonym_definition':([22,153,],[93,221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',292),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',297),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',302),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',307),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',312),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',313),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',318),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',319),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',327),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',332),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',337),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',342),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',343),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',361),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',362),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',363),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',377),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',385),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',386),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',387),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',395),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',396),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',397),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',402),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',408),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',409),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',417),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',422),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',423),
  ('action -> if_action','action',1,'p_action','lyaparser.py',431),
  ('action -> do_action','action',1,'p_action','lyaparser.py',432),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',433),
  ('action -> call_action','action',1,'p_action','lyaparser.py',434),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',435),
  ('action -> return_action','action',1,'p_action','lyaparser.py',436),
  ('action -> result_action','action',1,'p_action','lyaparser.py',437),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',442),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',447),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',448),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',453),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',460),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',461),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',469),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',470),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',478),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',479),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',488),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',489),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',490),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',500),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',501),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',502),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',510),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',515),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',516),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',521),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',522),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',524),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',536),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',541),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',546),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',551),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',556),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',561),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',562),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',570),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',576),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',577),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',582),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',583),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',591),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',592),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',603),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',607),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',608),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',616),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',621),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',629),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',630),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',643),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',648),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',650),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',663),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',664),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',673),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',677),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',681),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',682),
]
