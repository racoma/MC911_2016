
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1AF2653F8737E382E44CEC7293C0DAC2'
    
_lr_action_items = {'RPAREN':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,76,85,95,105,107,108,125,130,131,132,133,135,137,138,139,140,141,142,143,145,146,150,151,152,164,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,217,220,227,229,235,245,250,254,261,270,273,275,278,283,285,286,289,296,299,300,305,307,308,311,312,313,321,322,332,336,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,152,165,-58,-111,-105,190,-106,-34,-38,-45,-46,-31,-33,-41,-28,-32,-36,-30,-29,-37,-35,-163,220,-170,227,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-44,-169,-161,-59,276,-75,283,286,-164,-62,297,-184,-81,-39,-47,-40,165,-57,-186,-189,-82,-76,-43,-49,-55,-163,-185,-188,339,-50,]),'READ':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[34,-6,34,34,34,34,-8,-4,34,-5,-2,-7,34,34,34,34,34,-3,34,-115,34,34,34,34,34,-131,34,-113,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-9,-116,34,34,-129,-126,-130,-125,-127,-128,34,-18,-24,34,34,34,34,34,34,34,34,34,34,34,34,34,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'CHAR':([11,72,74,97,147,183,218,219,223,267,274,287,288,323,327,328,],[-17,-15,131,131,131,131,131,-16,131,131,131,131,131,131,131,131,]),'BY':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,262,263,264,278,296,305,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-155,-152,290,-81,-57,-82,-76,]),'IF':([0,1,2,5,7,10,12,16,17,26,27,28,42,53,68,76,78,79,81,85,90,91,92,99,103,106,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[2,-6,42,2,42,42,-8,-4,2,-5,-2,-7,42,42,-3,42,-115,42,2,42,42,42,-131,2,-113,42,2,-9,-116,2,2,-129,-126,-130,-125,-127,-128,42,-18,-24,42,2,2,42,42,42,42,42,42,2,42,42,42,-179,-112,42,42,42,2,42,42,42,42,42,2,2,2,2,42,2,2,2,2,]),'GE':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,124,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,124,124,-95,-101,124,-96,-98,-97,-99,124,124,-100,-93,124,124,-94,-169,-161,-59,-75,-56,-57,-76,]),'LT':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,111,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,111,111,-95,-101,111,-96,-98,-97,-99,111,111,-100,-93,111,111,-94,-169,-161,-59,-75,-56,-57,-76,]),'IN':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,156,158,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,224,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,113,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,223,-151,-162,-78,113,-92,-95,-101,-103,-96,-98,-97,-99,113,-91,-100,-93,-90,-89,-94,-169,267,-161,-59,-75,-56,-57,-76,]),'PROC':([99,],[180,]),'DIVIDE':([11,19,20,23,30,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-60,94,-56,-159,-60,-70,-71,-68,-66,-107,-74,-65,120,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,120,120,120,-101,120,120,120,120,-99,120,120,-100,120,120,120,120,-169,-161,-59,-75,-56,-57,-76,]),'ELSE':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,78,95,103,105,107,125,126,127,152,159,165,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,220,227,229,237,242,244,245,278,296,305,306,307,326,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-115,-58,-113,-111,-105,-106,-135,208,-170,-116,-162,240,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-134,-169,-161,-59,-112,240,-84,-75,-81,-57,-82,-86,-76,-87,]),'TRUE':([2,7,10,42,52,53,58,76,79,85,90,91,92,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,166,167,168,169,174,175,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[45,45,45,45,45,45,45,45,45,45,45,45,-131,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-129,-126,-130,-125,-127,-128,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'EXIT':([0,1,5,12,16,17,26,27,28,68,78,81,99,103,126,128,159,162,163,178,184,207,208,225,236,237,247,302,319,324,325,330,331,334,338,],[8,-6,8,-8,-4,8,-5,-2,-7,-3,-115,8,8,-113,8,-9,-116,8,8,-18,-24,8,8,8,-179,-112,8,8,8,8,8,8,8,8,8,]),'LBRACKET':([11,19,20,23,30,31,41,44,45,46,47,50,51,54,57,59,60,61,65,66,67,95,105,136,148,152,165,190,220,227,229,245,258,296,307,],[-17,-160,-60,91,-56,-159,-60,-70,-71,-68,-66,-74,106,-65,-69,91,-77,-72,-73,-67,-56,-58,91,213,218,-170,-162,-78,-169,-161,-59,-75,-56,-57,-76,]),'FALSE':([2,7,10,42,52,53,58,76,79,85,90,91,92,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,166,167,168,169,174,175,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[44,44,44,44,44,44,44,44,44,44,44,44,-131,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-129,-126,-130,-125,-127,-128,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'GT':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,121,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,121,121,-95,-101,121,-96,-98,-97,-99,121,121,-100,-93,121,121,-94,-169,-161,-59,-75,-56,-57,-76,]),'DCL':([0,1,5,12,16,26,27,28,68,103,128,178,184,236,237,302,319,324,325,330,331,334,338,],[9,-6,9,-8,-4,-5,-2,-7,-3,-113,-9,-18,-24,-179,-112,9,9,9,9,9,9,9,9,]),'RESULT':([0,1,5,12,16,17,26,27,28,68,78,81,99,103,126,128,159,162,163,178,184,207,208,225,236,237,247,302,319,324,325,330,331,334,338,],[10,-6,10,-8,-4,10,-5,-2,-7,-3,-115,10,10,-113,10,-9,-116,10,10,-18,-24,10,10,10,-179,-112,10,10,10,10,10,10,10,10,10,]),'ID':([0,1,2,5,7,8,9,10,11,12,16,17,24,26,27,28,35,42,49,52,53,58,68,72,74,76,78,79,80,81,85,90,91,92,97,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,147,149,159,162,163,166,167,168,169,174,175,177,178,179,183,184,185,187,207,208,212,214,216,218,219,221,222,223,225,228,230,231,235,236,237,240,243,246,247,267,274,279,284,287,288,289,291,298,302,319,323,324,325,327,328,330,331,334,338,],[11,-6,11,11,11,11,11,11,-17,-8,-4,11,11,-5,-2,-7,11,11,11,11,11,11,-3,-15,11,11,-115,11,11,11,11,11,11,-131,11,11,-113,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-9,11,11,11,-116,11,11,-129,-126,-130,-125,-127,-128,11,-18,11,11,-24,11,11,11,11,11,11,11,11,-16,11,11,11,11,11,11,11,11,-179,-112,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ARROW':([2,7,10,11,19,20,23,30,31,41,42,52,53,58,59,67,76,79,85,90,91,92,95,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,152,165,166,167,168,169,174,175,177,187,212,214,216,218,220,221,222,227,228,229,230,231,240,243,246,258,279,284,287,289,291,296,327,],[49,49,49,-17,-160,-60,95,-56,-159,-60,49,49,49,49,95,-56,49,49,49,49,49,-131,-58,95,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-170,-162,-129,-126,-130,-125,-127,-128,49,49,49,49,49,49,-169,49,49,-161,49,-59,49,49,49,49,49,-56,49,49,49,49,49,-57,49,]),'SCONST':([2,7,10,42,52,53,58,76,79,85,90,91,92,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,166,167,168,169,174,175,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[50,50,50,50,50,50,50,50,50,50,50,50,-131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-129,-126,-130,-125,-127,-128,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'DOWN':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,95,105,107,125,152,156,158,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,262,263,264,278,292,296,305,307,314,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-58,-111,-105,-106,-170,224,-151,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-155,-152,294,-81,317,-57,-82,-76,-153,]),'ELSIF':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,95,105,107,125,152,165,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,242,244,245,278,296,305,306,307,326,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,243,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,279,-84,-75,-81,-57,-82,-86,-76,-87,]),'UPPER':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[13,-6,13,13,13,13,-8,-4,13,-5,-2,-7,13,13,13,13,13,-3,13,-115,13,13,13,13,13,-131,13,-113,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-9,-116,13,13,-129,-126,-130,-125,-127,-128,13,-18,-24,13,13,13,13,13,13,13,13,13,13,13,13,13,-179,-112,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'COLON':([11,19,30,31,32,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,83,95,105,107,125,152,165,171,173,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,249,251,258,278,296,305,307,313,],[-17,-160,-114,-159,99,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,162,-58,-111,-105,-106,-170,-162,-61,230,246,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-61,284,-56,-81,-57,-82,-76,-61,]),'NEQ':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,110,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,110,-92,-95,-101,110,-96,-98,-97,-99,110,-91,-100,-93,110,110,-94,-169,-161,-59,-75,-56,-57,-76,]),'MOD':([11,19,20,23,30,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-60,86,-56,-159,-60,-70,-71,-68,-66,-107,-74,-65,112,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,112,112,112,-101,112,112,112,112,-99,112,112,-100,112,112,112,112,-169,-161,-59,-75,-56,-57,-76,]),'THEN':([11,19,31,41,43,44,45,46,47,48,50,54,55,56,57,59,60,61,62,63,64,65,66,67,95,104,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,278,281,296,304,305,307,],[-17,-160,-159,-60,-83,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,126,-109,-73,-67,-56,-58,187,-111,-105,-106,-170,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-81,187,-57,187,-82,-76,]),'MINUS':([2,7,10,11,19,20,23,30,31,41,42,44,45,46,47,48,50,53,54,55,56,57,59,60,61,64,65,66,67,76,79,85,90,91,92,95,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,152,165,166,167,168,169,174,175,177,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,212,214,216,218,220,221,222,227,228,229,230,231,240,243,245,246,258,279,284,287,289,291,296,307,327,],[52,52,52,-17,-160,-60,87,-56,-159,-60,52,-70,-71,-68,-66,-107,-74,52,-65,115,-88,-69,-108,-110,-72,-109,-73,-67,-56,52,52,52,52,52,-131,-58,-111,52,-105,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-106,-170,-162,-129,-126,-130,-125,-127,-128,52,52,-78,115,115,115,-101,115,115,-98,-97,-99,115,115,-100,115,115,115,115,52,52,52,52,-169,52,52,-161,52,-59,52,52,52,52,-75,52,-56,52,52,52,52,52,-57,-76,52,]),'LOC':([11,130,131,132,133,135,137,138,139,140,141,142,143,145,146,217,283,285,286,300,311,312,336,],[-17,-34,-38,-45,-46,-31,-33,-41,-28,-32,-36,-30,-29,-37,-35,-44,-39,-47,-40,322,-49,-55,-50,]),'LPAREN':([2,3,4,7,10,11,13,15,18,21,25,30,34,39,40,42,52,53,58,67,76,79,85,90,91,92,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,131,134,137,138,140,141,143,145,146,166,167,168,169,174,175,177,180,187,212,214,216,218,221,222,228,230,231,240,243,246,257,258,259,265,266,279,283,284,286,287,289,291,295,301,327,],[53,-175,-172,53,53,-17,-174,76,-171,85,-173,-42,-177,-176,-178,53,53,53,53,-42,53,53,53,53,53,-131,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-34,-38,212,-33,-42,-32,-36,214,-37,-35,-129,-126,-130,-125,-127,-128,53,235,53,53,53,53,53,53,53,53,53,53,53,53,53,289,-42,214,214,-42,53,-39,53,-40,53,53,53,214,323,53,]),'BOOL':([11,72,74,97,147,183,218,219,223,267,274,287,288,323,327,328,],[-17,-15,145,145,145,145,145,-16,145,145,145,145,145,145,145,145,]),'LOWER':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[3,-6,3,3,3,3,-8,-4,3,-5,-2,-7,3,3,3,3,3,-3,3,-115,3,3,3,3,3,-131,3,-113,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-9,-116,3,3,-129,-126,-130,-125,-127,-128,3,-18,-24,3,3,3,3,3,3,3,3,3,3,3,3,3,-179,-112,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'DO':([0,1,5,12,16,17,26,27,28,68,78,81,99,103,126,128,159,162,163,178,184,207,208,225,236,237,247,302,319,324,325,330,331,334,338,],[17,-6,17,-8,-4,17,-5,-2,-7,-3,-115,17,17,-113,17,-9,-116,17,17,-18,-24,17,17,17,-179,-112,17,17,17,17,17,17,17,17,17,]),'REF':([11,72,74,97,147,183,219,274,288,323,328,],[-17,-15,147,147,147,147,-16,147,147,147,147,]),'ARRAY':([11,72,74,97,147,183,219,274,288,323,328,],[-17,-15,148,148,148,148,-16,148,148,148,148,]),'RBRACKET':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,95,105,107,125,130,131,137,140,141,145,146,152,165,171,172,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,252,253,256,259,260,269,270,271,278,282,283,286,296,305,307,308,309,310,335,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-58,-111,-105,-106,-34,-38,-33,-32,-36,-37,-35,-170,-162,-63,229,245,-63,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,285,-48,288,-53,-54,-64,-62,296,-81,307,-39,-40,-57,-82,-76,-43,328,-51,-52,]),'AND':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,123,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,123,-92,-95,-101,123,-96,-98,-97,-99,123,-91,-100,-93,123,-89,-94,-169,-161,-59,-75,-56,-57,-76,]),'ASSIGN':([11,19,20,23,30,31,67,72,86,87,88,89,93,94,95,97,101,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,152,156,158,165,176,217,219,220,227,229,283,285,286,296,311,312,336,],[-17,-160,-60,92,-56,-159,-56,-15,166,167,168,169,174,175,-58,177,183,-34,-38,-45,-46,-31,-33,-41,-28,-32,-36,-30,-29,216,-37,-35,-170,222,-151,-162,231,-44,-16,-169,-161,-59,-39,-47,-40,-57,-49,-55,-50,]),'COMMA':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,71,72,73,74,95,96,97,98,100,101,102,105,107,125,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,150,151,152,164,165,171,172,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,211,215,217,219,220,227,229,232,233,234,238,239,245,255,256,259,260,261,269,270,272,273,274,275,278,283,285,286,296,299,300,305,307,308,309,310,311,312,313,321,322,335,336,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-10,-15,129,149,-58,-19,149,179,-25,149,185,-111,-105,-106,-34,-38,-45,-46,-31,-33,-41,-28,-32,-36,-30,-29,-13,-37,-35,-163,221,-170,221,-162,-63,228,228,-63,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-11,-12,-44,-16,-169,-161,-59,-23,-22,-20,-27,-26,-75,-14,287,-53,-54,-164,-64,-62,-21,298,149,-184,-81,-39,-47,-40,-57,-186,-189,-82,-76,-43,327,-51,-49,-55,-163,-185,-188,-52,-50,]),'PRED':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[4,-6,4,4,4,4,-8,-4,4,-5,-2,-7,4,4,4,4,4,-3,4,-115,4,4,4,4,4,-131,4,-113,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-9,-116,4,4,-129,-126,-130,-125,-127,-128,4,-18,-24,4,4,4,4,4,4,4,4,4,4,4,4,4,-179,-112,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'RETURN':([0,1,5,12,16,17,26,27,28,68,78,81,99,103,126,128,159,162,163,178,184,207,208,225,236,237,247,302,319,324,325,330,331,334,338,],[7,-6,7,-8,-4,7,-5,-2,-7,-3,-115,7,7,-113,7,-9,-116,7,7,-18,-24,7,7,7,-179,-112,7,7,7,7,7,7,7,7,7,]),'ICONST':([2,7,10,42,52,53,58,76,79,85,90,91,92,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,166,167,168,169,174,175,177,187,212,213,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,290,291,327,],[57,57,57,57,57,57,57,57,57,57,57,57,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-129,-126,-130,-125,-127,-128,57,57,57,253,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,314,57,57,]),'EQ':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,119,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,119,-92,-95,-101,119,-96,-98,-97,-99,119,-91,-100,-93,119,119,-94,-169,-161,-59,-75,-56,-57,-76,]),'NOT':([2,7,10,11,19,31,41,42,44,45,46,47,48,50,53,54,55,56,57,59,60,61,64,65,66,67,76,79,85,90,91,92,95,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,152,165,166,167,168,169,174,175,177,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,212,214,216,218,220,221,222,227,228,229,230,231,240,243,245,246,258,279,284,287,289,291,296,307,327,],[58,58,58,-17,-160,-159,-60,58,-70,-71,-68,-66,-107,-74,58,-65,109,-88,-69,-108,-110,-72,-109,-73,-67,-56,58,58,58,58,58,-131,-58,-111,58,-105,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-106,-170,-162,-129,-126,-130,-125,-127,-128,58,58,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,109,-91,-100,-93,-90,-89,-94,58,58,58,58,-169,58,58,-161,58,-59,58,58,58,58,-75,58,-56,58,58,58,58,58,-57,-76,58,]),'SUCC':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[25,-6,25,25,25,25,-8,-4,25,-5,-2,-7,25,25,25,25,25,-3,25,-115,25,25,25,25,25,-131,25,-113,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-9,-116,25,25,-129,-126,-130,-125,-127,-128,25,-18,-24,25,25,25,25,25,25,25,25,25,25,25,25,25,-179,-112,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'SYN':([0,1,5,12,16,26,27,28,68,103,128,178,184,236,237,302,319,324,325,330,331,334,338,],[24,-6,24,-8,-4,-5,-2,-7,-3,-113,-9,-18,-24,-179,-112,24,24,24,24,24,24,24,24,]),'TO':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,262,263,264,278,292,294,296,305,307,314,317,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-155,-152,291,-81,291,291,-57,-82,-76,-153,291,]),'CONCAT':([11,19,20,23,30,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-60,88,-56,-159,-60,-70,-71,-68,-66,-107,-74,-65,118,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-56,-57,-76,]),'CHARS':([11,72,74,97,147,183,219,274,288,323,328,],[-17,-15,136,136,136,136,-16,136,136,136,136,]),'CCONST':([2,7,10,42,52,53,58,76,79,85,90,91,92,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,166,167,168,169,174,175,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[61,61,61,61,61,61,61,61,61,61,61,61,-131,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-129,-126,-130,-125,-127,-128,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'OR':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,122,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,122,-92,-95,-101,122,-96,-98,-97,-99,122,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-56,-57,-76,]),'WHILE':([11,17,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,82,95,105,107,125,130,131,137,140,141,145,146,152,154,155,157,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,262,265,278,283,286,293,295,296,305,307,315,316,318,329,],[-17,79,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,79,-58,-111,-105,-106,-34,-38,-33,-32,-36,-37,-35,-170,-145,-146,-144,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-169,-161,-59,-75,-155,-157,-81,-39,-40,-150,-156,-57,-82,-76,-154,-149,-148,-147,]),'NUM':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[18,-6,18,18,18,18,-8,-4,18,-5,-2,-7,18,18,18,18,18,-3,18,-115,18,18,18,18,18,-131,18,-113,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-9,-116,18,18,-129,-126,-130,-125,-127,-128,18,-18,-24,18,18,18,18,18,18,18,18,18,18,18,18,18,-179,-112,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'$end':([1,5,6,12,16,26,27,28,68,103,128,178,184,236,237,],[-6,-1,0,-8,-4,-5,-2,-7,-3,-113,-9,-18,-24,-179,-112,]),'INT':([11,72,74,97,147,183,218,219,223,267,274,287,288,323,327,328,],[-17,-15,141,141,141,141,141,-16,141,141,141,141,141,141,141,141,]),'FOR':([17,],[80,]),'NULL':([2,7,10,42,52,53,58,76,79,85,90,91,92,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,166,167,168,169,174,175,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[65,65,65,65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-129,-126,-130,-125,-127,-128,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'LE':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,114,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,114,114,-95,-101,114,-96,-98,-97,-99,114,114,-100,-93,114,114,-94,-169,-161,-59,-75,-56,-57,-76,]),'TIMES':([11,19,20,23,30,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-60,93,-56,-159,-60,-70,-71,-68,-66,-107,-74,-65,117,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,117,117,117,-101,117,117,117,117,-99,117,117,-100,117,117,117,117,-169,-161,-59,-75,-56,-57,-76,]),'PLUS':([11,19,20,23,30,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,64,65,66,67,95,105,107,125,152,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,220,227,229,245,258,296,307,],[-17,-160,-60,89,-56,-159,-60,-70,-71,-68,-66,-107,-74,-65,116,-88,-69,-108,-110,-72,-109,-73,-67,-56,-58,-111,-105,-106,-170,-162,-78,116,116,116,-101,116,116,-98,-97,-99,116,116,-100,116,116,116,116,-169,-161,-59,-75,-56,-57,-76,]),'RETURNS':([276,297,],[301,301,]),'TYPE':([0,1,5,12,16,26,27,28,68,103,128,178,184,236,237,302,319,324,325,330,331,334,338,],[35,-6,35,-8,-4,-5,-2,-7,-3,-113,-9,-18,-24,-179,-112,35,35,35,35,35,35,35,35,]),'SEMI':([7,11,14,19,20,22,29,31,33,36,37,38,41,43,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,69,70,71,73,75,77,82,84,95,96,98,100,102,105,107,125,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,152,153,154,155,157,160,161,165,170,181,182,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,211,215,217,220,226,227,229,232,233,234,238,239,245,248,255,262,265,268,272,276,278,283,285,286,293,295,296,297,303,305,307,311,312,315,316,318,320,329,333,336,337,339,340,341,],[-167,-17,-121,-160,-120,-119,-117,-159,-122,-118,-123,103,-60,-83,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-166,-165,-10,128,-168,-143,-142,163,-58,-19,178,-25,184,-111,-105,-106,-34,-38,-45,-46,-31,-33,-41,-28,-32,-36,-30,-29,-13,-37,-35,-170,-158,-145,-146,-144,-140,-141,-162,-124,236,237,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-133,-11,-12,-44,-169,-139,-161,-59,-23,-22,-20,-27,-26,-75,-132,-14,-155,-157,-138,-21,302,-81,-39,-47,-40,-150,-156,-57,319,325,-82,-76,-49,-55,-154,-149,-148,331,-147,-183,-50,-181,-187,-182,-180,]),'FI':([11,19,31,41,44,45,46,47,48,50,54,55,56,57,59,60,61,62,64,65,66,67,78,95,103,105,107,125,126,127,152,159,165,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,220,227,229,237,241,245,247,277,278,280,296,305,307,],[-17,-160,-159,-60,-70,-71,-68,-66,-107,-74,-65,-79,-88,-69,-108,-110,-72,-80,-109,-73,-67,-56,-115,-58,-113,-111,-105,-106,-135,210,-170,-116,-162,-78,-102,-92,-95,-101,-103,-96,-98,-97,-99,-104,-91,-100,-93,-90,-89,-94,-134,-137,248,-169,-161,-59,-112,278,-75,-136,-85,-81,305,-57,-82,-76,]),'LENGTH':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[39,-6,39,39,39,39,-8,-4,39,-5,-2,-7,39,39,39,39,39,-3,39,-115,39,39,39,39,39,-131,39,-113,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-9,-116,39,39,-129,-126,-130,-125,-127,-128,39,-18,-24,39,39,39,39,39,39,39,39,39,39,39,39,39,-179,-112,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PRINT':([0,1,2,5,7,10,12,16,17,26,27,28,42,49,52,53,58,68,76,78,79,81,85,90,91,92,99,103,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,159,162,163,166,167,168,169,174,175,177,178,184,187,207,208,212,214,216,218,221,222,225,228,230,231,236,237,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[40,-6,40,40,40,40,-8,-4,40,-5,-2,-7,40,40,40,40,40,-3,40,-115,40,40,40,40,40,-131,40,-113,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-9,-116,40,40,-129,-126,-130,-125,-127,-128,40,-18,-24,40,40,40,40,40,40,40,40,40,40,40,40,40,-179,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'END':([1,12,16,26,27,28,68,103,128,178,184,236,237,324,330,334,338,],[-6,-8,-4,-5,-2,-7,-3,-113,-9,-18,-24,-179,-112,333,337,340,341,]),'OD':([78,81,103,159,163,225,237,],[-115,160,-113,-116,226,268,-112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'character_mode':([74,97,147,183,218,223,267,274,287,288,323,327,328,],[130,130,130,130,130,130,130,130,130,130,130,130,130,]),'while_control':([17,82,],[77,161,]),'synonym_definition':([24,179,],[96,234,]),'array_mode':([74,97,147,183,274,288,323,328,],[133,133,133,133,133,133,133,133,]),'statement_list':([0,302,319,325,331,],[5,324,330,334,338,]),'program':([0,],[6,]),'expression':([2,7,10,42,53,76,79,85,90,91,106,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[43,69,75,43,108,150,43,150,170,171,189,232,244,249,249,255,249,261,262,269,270,232,277,43,282,43,270,249,313,262,249,]),'else_expression':([186,242,],[241,280,]),'index_mode':([218,287,327,],[256,310,335,]),'discrete_mode':([74,97,147,183,218,223,267,274,287,288,323,327,328,],[143,143,143,143,259,265,295,143,259,143,143,259,143,]),'step_value':([264,],[292,]),'for_control':([17,],[82,]),'then_expression':([104,281,304,],[186,306,326,]),'discrete_range_mode':([74,97,147,183,218,223,267,274,287,288,323,327,328,],[146,146,146,146,146,146,146,146,146,146,146,146,146,]),'binop':([2,7,10,42,53,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[55,55,55,55,55,55,55,55,55,55,55,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'declaration_list':([9,],[73,]),'builtin_call':([0,2,5,7,10,17,42,49,52,53,58,76,79,81,85,90,91,99,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,162,163,177,187,207,208,212,214,216,218,221,222,225,228,230,231,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'initialization':([144,],[215,]),'procedure_definition':([99,],[181,]),'reference_mode':([74,97,147,183,274,288,323,328,],[142,142,142,142,142,142,142,142,]),'elsif_expression':([186,],[242,]),'synonym_statement':([0,5,302,319,324,325,330,331,334,338,],[26,26,26,26,26,26,26,26,26,26,]),'statement':([0,5,302,319,324,325,330,331,334,338,],[27,68,27,27,68,27,68,27,68,68,]),'range_enumeration':([80,],[155,]),'identifier':([0,2,5,7,8,9,10,17,24,35,42,49,52,53,58,74,76,79,80,81,85,90,91,97,99,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,129,147,149,162,163,177,179,183,185,187,207,208,212,214,216,218,221,222,223,225,228,230,231,235,240,243,246,247,267,274,279,284,287,288,289,291,298,302,319,323,324,325,327,328,330,331,334,338,],[30,67,30,67,70,72,67,30,72,72,67,67,67,67,67,138,67,67,158,30,67,67,67,138,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,30,72,138,219,67,30,67,72,138,72,67,30,30,67,67,67,258,67,67,266,30,67,67,67,72,67,67,67,30,266,138,67,67,258,138,67,67,72,30,30,138,30,30,258,138,30,30,30,30,]),'integer_mode':([74,97,147,183,218,223,267,274,287,288,323,327,328,],[140,140,140,140,140,140,140,140,140,140,140,140,140,]),'conditional_expression':([2,7,10,42,53,76,79,85,90,91,106,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'procedure_call':([0,2,5,7,10,17,42,49,52,53,58,76,79,81,85,90,91,99,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,162,163,177,187,207,208,212,214,216,218,221,222,225,228,230,231,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'string_length':([213,],[252,]),'constant_expression':([177,231,],[233,272,]),'label_id':([0,5,17,81,126,163,207,208,225,247,302,319,324,325,330,331,334,338,],[32,32,83,83,83,83,83,83,83,83,32,32,32,32,32,32,32,32,]),'array_primitive_value':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'mode':([74,97,147,183,274,288,323,328,],[144,176,217,238,300,312,300,312,]),'upper_bound':([230,284,],[271,308,]),'assigning_operator':([23,],[90,]),'mode_definition':([35,185,],[100,239,]),'loop_counter':([80,],[156,]),'element_mode':([288,328,],[311,336,]),'action':([0,5,17,81,99,126,162,163,207,208,225,247,302,319,324,325,330,331,334,338,],[38,38,38,38,182,38,182,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'return_action':([0,5,17,81,99,126,162,163,207,208,225,247,302,319,324,325,330,331,334,338,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'iteration':([80,],[157,]),'value_array_slice':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'start_value':([222,],[264,]),'newmode_statement':([0,5,302,319,324,325,330,331,334,338,],[1,1,1,1,1,1,1,1,1,1,]),'composite_mode':([74,97,147,183,274,288,323,328,],[135,135,135,135,135,135,135,135,]),'do_action':([0,5,17,81,99,126,162,163,207,208,225,247,302,319,324,325,330,331,334,338,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'identifier_list':([9,24,35,129,179,185,235,298,],[74,97,101,74,97,101,274,274,]),'boolean_mode':([74,97,147,183,218,223,267,274,287,288,323,327,328,],[137,137,137,137,137,137,137,137,137,137,137,137,137,]),'parenthesized_expression':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'value_array_element':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'operand1':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[48,48,48,48,107,48,125,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'action_statement':([0,5,17,81,126,163,207,208,225,247,302,319,324,325,330,331,334,338,],[12,12,78,159,78,78,159,78,159,159,12,12,12,12,12,12,12,12,]),'expression_list':([91,106,],[172,188,]),'step_enumeration':([80,],[154,]),'builtin_name':([0,2,5,7,10,17,42,49,52,53,58,76,79,81,85,90,91,99,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,162,163,177,187,207,208,212,214,216,218,221,222,225,228,230,231,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaration_statement':([0,5,302,319,324,325,330,331,334,338,],[16,16,16,16,16,16,16,16,16,16,]),'newmode_list':([35,],[102,]),'declaration':([9,129,],[71,211,]),'else_clause':([127,],[209,]),'end_value':([264,292,294,317,],[293,316,318,329,]),'operand':([2,7,10,42,53,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'literal_range':([212,214,218,287,289,327,],[250,254,260,260,250,260,]),'call_action':([0,2,5,7,10,17,42,49,52,53,58,76,79,81,85,90,91,99,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,162,163,177,187,207,208,212,214,216,218,221,222,225,228,230,231,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[20,41,20,41,41,20,41,41,41,41,41,41,41,20,41,41,41,20,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,41,41,20,20,41,41,41,41,41,41,20,41,41,41,41,41,41,20,41,41,41,41,41,20,20,20,20,41,20,20,20,20,]),'action_statement_list':([17,126,163,208,],[81,207,225,247,]),'assignment_action':([0,5,17,81,99,126,162,163,207,208,225,247,302,319,324,325,330,331,334,338,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'string_mode':([74,97,147,183,274,288,323,328,],[132,132,132,132,132,132,132,132,]),'discrete_mode_name':([0,2,5,7,10,17,42,49,52,53,58,74,76,79,81,85,90,91,97,99,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,147,162,163,177,183,187,207,208,212,214,216,218,221,222,223,225,228,230,231,240,243,246,247,267,274,279,284,287,288,289,291,302,319,323,324,325,327,328,330,331,334,338,],[21,21,21,21,21,21,21,21,21,21,21,134,21,21,21,21,21,21,134,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,134,21,21,21,134,21,21,21,21,21,21,257,21,21,134,21,21,21,21,21,21,21,21,134,134,21,21,257,134,21,21,21,21,134,21,21,257,134,21,21,21,21,]),'literal':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'formal_parameter_list':([235,],[273,]),'primitive_value':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'procedure_statement':([0,5,302,319,324,325,330,331,334,338,],[28,28,28,28,28,28,28,28,28,28,]),'parameter_list':([76,85,289,],[151,164,164,]),'mode_name':([74,97,147,183,274,288,323,328,],[139,139,139,139,139,139,139,139,]),'then_clause':([63,],[127,]),'discrete_expression':([222,291,],[263,315,]),'parameter_spec':([274,323,],[299,332,]),'location':([0,2,5,7,10,17,42,49,52,53,58,76,79,81,85,90,91,99,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,162,163,177,187,207,208,212,214,216,218,221,222,225,228,230,231,240,243,246,247,279,284,287,289,291,302,319,324,325,327,330,331,334,338,],[23,59,23,59,59,23,59,105,59,59,59,59,59,23,59,59,59,23,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,23,23,23,59,59,23,23,59,59,59,59,59,59,23,59,59,59,59,59,59,23,59,59,59,59,59,23,23,23,23,59,23,23,23,23,]),'synonym_list':([24,],[98,]),'boolean_expression':([2,42,79,243,279,],[63,104,153,281,304,]),'referenced_location':([2,7,10,42,52,53,58,76,79,85,90,91,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,177,187,212,214,216,218,221,222,228,230,231,240,243,246,279,284,287,289,291,327,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'formal_parameter':([235,298,],[275,321,]),'index_mode_list':([287,],[309,]),'lower_bound':([91,212,214,218,287,289,327,],[173,251,251,251,251,251,251,]),'exit_action':([0,5,17,81,99,126,162,163,207,208,225,247,302,319,324,325,330,331,334,338,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'if_action':([0,5,17,81,99,126,162,163,207,208,225,247,302,319,324,325,330,331,334,338,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'result_action':([0,5,17,81,99,126,162,163,207,208,225,247,302,319,324,325,330,331,334,338,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'result_spec':([276,297,],[303,320,]),'control_part':([17,],[84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
