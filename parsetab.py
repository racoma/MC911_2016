
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AD5D7BC84E6FD9869F25E5D21D00A47E'
    
_lr_action_items = {'NOT':([5,14,17,30,36,40,41,43,45,47,48,59,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,86,91,105,107,111,112,114,115,116,122,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,186,187,188,189,190,191,195,196,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,225,227,251,257,258,261,262,277,279,281,282,286,294,310,326,],[-159,60,-17,60,-160,60,60,60,-58,60,-131,-88,-107,-60,-71,-69,-109,-67,-56,60,-66,-73,-72,-65,-70,-74,-108,146,-110,-68,60,60,60,-162,-127,-128,-130,-126,-129,-125,60,-106,-111,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-105,-170,60,-161,60,-59,60,60,60,60,60,60,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,146,-94,60,-169,60,-56,60,-75,60,60,-57,60,60,60,60,60,-76,60,]),'OD':([87,92,95,169,177,230,231,],[-113,168,-115,-116,229,270,-112,]),'CHAR':([17,53,54,58,127,183,192,196,226,269,271,282,283,323,326,327,],[-17,-15,132,132,132,132,-16,132,132,132,132,132,132,132,132,132,]),'INT':([17,53,54,58,127,183,192,196,226,269,271,282,283,323,326,327,],[-17,-15,123,123,123,123,-16,123,123,123,123,123,123,123,123,123,]),'WHILE':([5,17,34,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,94,105,118,120,123,124,129,131,132,143,144,163,165,170,173,174,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,258,265,266,277,278,280,290,292,296,310,312,314,316,317,329,],[-159,-17,91,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,91,-162,-34,-32,-36,-33,-37,-35,-38,-106,-111,-105,-170,-146,-144,-145,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-75,-157,-155,-57,-39,-40,-81,-150,-156,-76,-82,-149,-148,-154,-147,]),'PRINT':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[3,-4,3,-7,-8,-6,-5,3,3,3,-2,3,3,3,3,-131,3,3,3,3,3,3,-113,-3,3,3,-115,3,-127,-128,-130,-126,-129,-125,3,-18,-9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-116,3,3,-24,3,3,3,3,3,3,3,3,3,3,3,3,-112,-179,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'MOD':([5,7,12,17,21,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,50,-60,-17,-56,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,150,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,150,-99,150,-100,-101,150,150,150,150,150,150,150,150,150,150,150,-169,-56,-75,-57,-76,]),'DCL':([0,1,16,18,22,28,33,39,87,89,139,141,182,231,232,303,322,324,325,330,331,333,337,],[11,-4,-7,-8,-6,-5,11,-2,-113,-3,-18,-9,-24,-112,-179,11,11,11,11,11,11,11,11,]),'ARROW':([5,7,12,14,17,21,30,36,40,41,43,45,47,48,60,64,70,71,78,81,84,86,91,105,107,111,112,114,115,116,122,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,186,187,188,189,190,191,195,196,199,203,223,225,227,251,257,261,262,277,279,281,282,286,294,326,],[-159,45,-60,61,-17,-56,61,-160,61,61,61,-58,61,-131,61,-60,-56,61,45,61,61,61,61,-162,-127,-128,-130,-126,-129,-125,61,45,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-170,61,-161,61,-59,61,61,61,61,61,61,61,-169,61,-56,61,61,61,-57,61,61,61,61,61,61,]),'OR':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,151,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,151,-99,-95,-100,-101,-90,-97,-96,151,-91,-98,-89,-93,-92,151,-94,-169,-56,-75,-57,-76,]),'ARRAY':([17,53,54,58,127,183,192,271,283,323,327,],[-17,-15,126,126,126,126,-16,126,126,126,126,]),'COMMA':([5,17,36,45,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,99,100,101,104,105,106,108,109,118,119,120,123,124,125,128,129,130,131,132,133,136,137,142,143,144,163,165,166,187,189,192,193,194,197,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,234,235,240,241,242,249,250,252,255,256,258,271,272,273,277,278,280,284,290,297,298,304,305,306,307,308,309,310,312,319,320,335,336,],[-159,-17,-160,-58,-19,-15,121,138,-10,140,121,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,181,-25,121,-163,-162,186,-63,188,-34,-45,-32,-36,-33,-29,-30,-37,-28,-35,-38,-41,-46,-31,-13,-106,-111,-105,-170,186,-161,-59,-16,-22,-23,-44,-20,-11,-12,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-63,188,-169,-26,-27,-164,-64,-62,-54,-53,282,-21,-14,-75,121,-184,299,-57,-39,-40,-47,-81,-186,-189,-43,-163,-51,326,-55,-49,-76,-82,-188,-185,-52,-50,]),'READ':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[8,-4,8,-7,-8,-6,-5,8,8,8,-2,8,8,8,8,-131,8,8,8,8,8,8,-113,-3,8,8,-115,8,-127,-128,-130,-126,-129,-125,8,-18,-9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-116,8,8,-24,8,8,8,8,8,8,8,8,8,8,8,8,-112,-179,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'RPAREN':([5,17,36,41,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,86,104,105,106,118,119,120,123,124,125,128,129,130,131,132,133,136,137,143,144,145,163,165,166,187,189,197,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,233,240,242,245,247,258,272,273,277,278,280,281,284,290,297,298,304,305,308,309,310,312,319,320,332,336,],[-159,-17,-160,105,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,165,-163,-162,187,-34,-45,-32,-36,-33,-29,-30,-37,-28,-35,-38,-41,-46,-31,-106,-111,204,-105,-170,225,-161,-59,-44,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,274,-164,-62,278,280,-75,-184,300,-57,-39,-40,105,-47,-81,-186,-189,-43,-163,-55,-49,-76,-82,-188,-185,339,-50,]),'LOWER':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[2,-4,2,-7,-8,-6,-5,2,2,2,-2,2,2,2,2,-131,2,2,2,2,2,2,-113,-3,2,2,-115,2,-127,-128,-130,-126,-129,-125,2,-18,-9,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-116,2,2,-24,2,2,2,2,2,2,2,2,2,2,2,2,-112,-179,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'AND':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,157,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,157,-99,-95,-100,-101,157,-97,-96,157,-91,-98,-89,-93,-92,157,-94,-169,-56,-75,-57,-76,]),'PRED':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[13,-4,13,-7,-8,-6,-5,13,13,13,-2,13,13,13,13,-131,13,13,13,13,13,13,-113,-3,13,13,-115,13,-127,-128,-130,-126,-129,-125,13,-18,-9,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-116,13,13,-24,13,13,13,13,13,13,13,13,13,13,13,13,-112,-179,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'TRUE':([14,30,40,41,43,47,48,60,71,81,84,86,91,107,111,112,114,115,116,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[65,65,65,65,65,65,-131,65,65,65,65,65,65,-127,-128,-130,-126,-129,-125,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RESULT':([0,1,16,18,22,28,33,34,39,87,89,92,95,98,139,141,169,176,177,182,184,230,231,232,236,237,275,303,322,324,325,330,331,333,337,],[14,-4,-7,-8,-6,-5,14,14,-2,-113,-3,14,-115,14,-18,-9,-116,14,14,-24,14,14,-112,-179,14,14,14,14,14,14,14,14,14,14,14,]),'EXIT':([0,1,16,18,22,28,33,34,39,87,89,92,95,98,139,141,169,176,177,182,184,230,231,232,236,237,275,303,322,324,325,330,331,333,337,],[15,-4,-7,-8,-6,-5,15,15,-2,-113,-3,15,-115,15,-18,-9,-116,15,15,-24,15,15,-112,-179,15,15,15,15,15,15,15,15,15,15,15,]),'THEN':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,102,103,105,143,144,163,164,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,258,277,289,290,310,311,312,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-83,184,-162,-106,-111,-105,223,-170,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-75,-57,223,-81,-76,223,-82,]),'SUCC':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[27,-4,27,-7,-8,-6,-5,27,27,27,-2,27,27,27,27,-131,27,27,27,27,27,27,-113,-3,27,27,-115,27,-127,-128,-130,-126,-129,-125,27,-18,-9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-116,27,27,-24,27,27,27,27,27,27,27,27,27,27,27,27,-112,-179,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ID':([0,1,9,11,14,15,16,17,18,22,28,30,33,34,37,39,40,41,43,47,48,53,54,58,60,61,71,81,84,86,87,89,91,92,93,95,98,107,111,112,114,115,116,121,122,127,138,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,181,182,183,184,186,188,190,191,192,195,196,199,203,223,226,227,230,231,232,233,236,237,257,261,262,269,271,275,279,281,282,283,286,294,299,303,322,323,324,325,326,327,330,331,333,337,],[17,-4,17,17,17,17,-7,-17,-8,-6,-5,17,17,17,17,-2,17,17,17,17,-131,-15,17,17,17,17,17,17,17,17,-113,-3,17,17,17,-115,17,-127,-128,-130,-126,-129,-125,17,17,17,17,-18,17,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-116,17,17,17,-24,17,17,17,17,17,17,-16,17,17,17,17,17,17,17,17,-112,-179,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ICONST':([14,30,40,41,43,47,48,60,71,81,84,86,91,107,111,112,114,115,116,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,198,199,203,223,227,257,261,262,279,281,282,286,294,295,326,],[66,66,66,66,66,66,-131,66,66,66,66,66,66,-127,-128,-130,-126,-129,-125,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,253,66,66,66,66,66,66,66,66,66,66,66,66,318,66,]),'LBRACKET':([5,7,12,17,21,36,45,64,65,66,68,70,72,73,74,75,76,77,78,80,82,83,105,126,134,144,165,187,189,204,225,251,258,277,310,],[-159,43,-60,-17,-56,-160,-58,-60,-71,-69,-67,-56,-66,-73,-72,-65,-70,-74,43,162,-77,-68,-162,196,198,43,-170,-161,-59,-78,-169,-56,-75,-57,-76,]),'DIVIDE':([5,7,12,17,21,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,44,-60,-17,-56,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,149,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,149,-99,149,-100,-101,149,149,149,149,149,149,149,149,149,149,149,-169,-56,-75,-57,-76,]),'FOR':([34,],[93,]),'SYN':([0,1,16,18,22,28,33,39,87,89,139,141,182,231,232,303,322,324,325,330,331,333,337,],[9,-4,-7,-8,-6,-5,9,-2,-113,-3,-18,-9,-24,-112,-179,9,9,9,9,9,9,9,9,]),'NUM':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[23,-4,23,-7,-8,-6,-5,23,23,23,-2,23,23,23,23,-131,23,23,23,23,23,23,-113,-3,23,23,-115,23,-127,-128,-130,-126,-129,-125,23,-18,-9,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-116,23,23,-24,23,23,23,23,23,23,23,23,23,23,23,23,-112,-179,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ELSE':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,87,95,105,143,144,163,165,169,184,185,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,225,231,236,258,259,260,277,290,310,312,313,328,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-113,-115,-162,-106,-111,-105,-170,-116,-135,237,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,261,-169,-112,-134,-75,-84,261,-57,-81,-76,-82,-86,-87,]),'FI':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,87,95,105,143,144,163,165,169,184,185,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,231,236,237,239,258,263,275,277,287,288,290,310,312,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-113,-115,-162,-106,-111,-105,-170,-116,-135,238,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-112,-134,-137,276,-75,290,-136,-57,312,-85,-81,-76,-82,]),'TO':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,258,266,267,268,277,290,291,293,310,312,315,318,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-75,-155,294,-152,-57,-81,294,294,-76,-82,294,-153,]),'RBRACKET':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,105,108,109,118,120,123,124,129,131,132,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,241,242,243,249,250,252,253,254,258,277,278,280,285,290,304,306,307,310,312,335,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-162,-63,189,-34,-32,-36,-33,-37,-35,-38,-106,-111,-105,-170,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-63,258,-169,-64,-62,277,-54,-53,283,-48,284,-75,-57,-39,-40,310,-81,-43,-51,327,-76,-82,-52,]),'GT':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,158,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,158,-99,-95,-100,-101,158,-97,-96,158,158,-98,158,-93,158,158,-94,-169,-56,-75,-57,-76,]),'LENGTH':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[24,-4,24,-7,-8,-6,-5,24,24,24,-2,24,24,24,24,-131,24,24,24,24,24,24,-113,-3,24,24,-115,24,-127,-128,-130,-126,-129,-125,24,-18,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-116,24,24,-24,24,24,24,24,24,24,24,24,24,24,24,24,-112,-179,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'CONCAT':([5,7,12,17,21,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,46,-60,-17,-56,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,160,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-56,-75,-57,-76,]),'PLUS':([5,7,12,17,21,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,51,-60,-17,-56,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,152,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,152,-99,152,-100,-101,152,-97,152,152,152,-98,152,152,152,152,152,-169,-56,-75,-57,-76,]),'LPAREN':([2,3,6,8,13,14,17,21,23,24,25,27,29,30,40,41,43,47,48,60,70,71,81,84,86,91,107,111,112,114,115,116,117,118,120,122,123,124,125,129,131,132,133,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,180,186,188,190,191,195,196,199,203,223,227,248,250,251,257,261,262,264,265,278,279,280,281,282,286,294,296,301,326,],[-175,-178,41,-177,-172,71,-17,-42,-171,-176,86,-173,-174,71,71,71,71,71,-131,71,-42,71,71,71,71,71,-127,-128,-130,-126,-129,-125,191,-34,-32,71,-36,-33,195,-37,-35,-38,-42,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,233,71,71,71,71,71,71,71,71,71,71,281,195,-42,71,71,71,-42,195,-39,71,-40,71,71,71,71,195,323,71,]),'BOOL':([17,53,54,58,127,183,192,196,226,269,271,282,283,323,326,327,],[-17,-15,129,129,129,129,-16,129,129,129,129,129,129,129,129,129,]),'UPPER':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,60,61,71,81,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[29,-4,29,-7,-8,-6,-5,29,29,29,-2,29,29,29,29,-131,29,29,29,29,29,29,-113,-3,29,29,-115,29,-127,-128,-130,-126,-129,-125,29,-18,-9,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-116,29,29,-24,29,29,29,29,29,29,29,29,29,29,29,29,-112,-179,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RETURN':([0,1,16,18,22,28,33,34,39,87,89,92,95,98,139,141,169,176,177,182,184,230,231,232,236,237,275,303,322,324,325,330,331,333,337,],[30,-4,-7,-8,-6,-5,30,30,-2,-113,-3,30,-115,30,-18,-9,-116,30,30,-24,30,30,-112,-179,30,30,30,30,30,30,30,30,30,30,30,]),'SEMI':([4,5,10,12,17,19,20,26,30,31,32,36,45,52,55,56,57,59,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,85,88,90,94,97,99,100,102,105,113,118,119,120,123,124,125,128,129,130,131,132,133,136,137,142,143,144,163,165,167,168,170,173,174,175,178,179,187,189,193,194,197,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,229,234,235,238,255,256,258,265,266,270,274,276,277,278,280,284,290,292,296,300,302,308,309,310,312,314,316,317,321,329,334,336,338,339,340,341,],[-118,-159,-121,-120,-17,-119,-117,87,-167,-122,-123,-160,-58,-19,139,-10,141,-88,-168,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-165,-166,-143,-142,177,182,-25,-83,-162,-124,-34,-45,-32,-36,-33,-29,-30,-37,-28,-35,-38,-41,-46,-31,-13,-106,-111,-105,-170,-158,-140,-146,-144,-145,-141,231,232,-161,-59,-22,-23,-44,-20,-11,-12,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-139,-26,-27,-133,-21,-14,-75,-157,-155,-138,303,-132,-57,-39,-40,-47,-81,-150,-156,322,324,-55,-49,-76,-82,-149,-148,-154,330,-147,-183,-50,-181,-187,-182,-180,]),'NULL':([14,30,40,41,43,47,48,60,71,81,84,86,91,107,111,112,114,115,116,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[73,73,73,73,73,73,-131,73,73,73,73,73,73,-127,-128,-130,-126,-129,-125,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'LE':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,153,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,153,-99,-95,-100,-101,153,-97,-96,153,153,-98,153,-93,153,153,-94,-169,-56,-75,-57,-76,]),'CCONST':([14,30,40,41,43,47,48,60,71,81,84,86,91,107,111,112,114,115,116,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[74,74,74,74,74,74,-131,74,74,74,74,74,74,-127,-128,-130,-126,-129,-125,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'END':([1,16,18,22,28,39,87,89,139,141,182,231,232,325,331,333,337,],[-4,-7,-8,-6,-5,-2,-113,-3,-18,-9,-24,-112,-179,334,338,340,341,]),'ASSIGN':([5,7,12,17,21,36,42,44,45,46,49,50,51,53,54,70,101,105,118,119,120,123,124,125,128,129,130,131,132,133,135,136,137,142,165,171,172,187,189,192,197,225,277,278,280,284,308,309,336,],[-159,48,-60,-17,-56,-160,107,111,-58,112,114,115,116,-15,122,-56,183,-162,-34,-45,-32,-36,-33,-29,-30,-37,-28,-35,-38,-41,199,-46,-31,203,-170,-151,227,-161,-59,-16,-44,-169,-57,-39,-40,-47,-55,-49,-50,]),'$end':([1,16,18,22,28,33,38,39,87,89,139,141,182,231,232,],[-4,-7,-8,-6,-5,-1,0,-2,-113,-3,-18,-9,-24,-112,-179,]),'DOWN':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,171,172,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,258,266,267,268,277,290,291,310,312,318,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-162,-106,-111,-105,-170,-151,228,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-75,-155,293,-152,-57,-81,315,-76,-82,-153,]),'FALSE':([14,30,40,41,43,47,48,60,71,81,84,86,91,107,111,112,114,115,116,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[76,76,76,76,76,76,-131,76,76,76,76,76,76,-127,-128,-130,-126,-129,-125,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'DO':([0,1,16,18,22,28,33,34,39,87,89,92,95,98,139,141,169,176,177,182,184,230,231,232,236,237,275,303,322,324,325,330,331,333,337,],[34,-4,-7,-8,-6,-5,34,34,-2,-113,-3,34,-115,34,-18,-9,-116,34,34,-24,34,34,-112,-179,34,34,34,34,34,34,34,34,34,34,34,]),'NEQ':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,159,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,159,-99,-95,-100,-101,159,-97,-96,159,-91,-98,159,-93,-92,159,-94,-169,-56,-75,-57,-76,]),'PROC':([98,],[180,]),'TIMES':([5,7,12,17,21,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,42,-60,-17,-56,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,147,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,147,-99,147,-100,-101,147,147,147,147,147,147,147,147,147,147,147,-169,-56,-75,-57,-76,]),'SCONST':([14,30,40,41,43,47,48,60,71,81,84,86,91,107,111,112,114,115,116,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[77,77,77,77,77,77,-131,77,77,77,77,77,77,-127,-128,-130,-126,-129,-125,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'LT':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,148,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,148,-99,-95,-100,-101,148,-97,-96,148,148,-98,148,-93,148,148,-94,-169,-56,-75,-57,-76,]),'REF':([17,53,54,58,127,183,192,271,283,323,327,],[-17,-15,127,127,127,127,-16,127,127,127,127,]),'COLON':([5,17,21,35,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,96,105,108,110,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,225,244,246,251,258,277,290,305,310,312,],[-159,-17,-114,98,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,176,-162,-61,190,-106,-111,-105,-170,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,257,-169,-61,279,-56,-75,-57,-81,-61,-76,-82,]),'LOC':([17,118,119,120,123,124,125,128,129,130,131,132,133,136,137,197,278,280,284,298,308,309,336,],[-17,-34,-45,-32,-36,-33,-29,-30,-37,-28,-35,-38,-41,-46,-31,-44,-39,-40,-47,319,-55,-49,-50,]),'BY':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,258,266,267,268,277,290,310,312,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,-169,-75,-155,295,-152,-57,-81,-76,-82,]),'GE':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,161,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,161,-99,-95,-100,-101,161,-97,-96,161,161,-98,161,-93,161,161,-94,-169,-56,-75,-57,-76,]),'IN':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,171,172,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,228,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,154,-110,-68,-162,-106,-111,-105,-170,-151,226,-161,-59,-78,154,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,154,-94,-169,269,-56,-75,-57,-76,]),'TYPE':([0,1,16,18,22,28,33,39,87,89,139,141,182,231,232,303,322,324,325,330,331,333,337,],[37,-4,-7,-8,-6,-5,37,-2,-113,-3,-18,-9,-24,-112,-179,37,37,37,37,37,37,37,37,]),'EQ':([5,17,36,45,59,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,251,258,277,310,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-56,-66,-73,-72,-65,-70,-74,-108,155,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,155,-99,-95,-100,-101,155,-97,-96,155,-91,-98,155,-93,-92,155,-94,-169,-56,-75,-57,-76,]),'RETURNS':([274,300,],[301,301,]),'MINUS':([5,7,12,14,17,21,30,36,40,41,43,45,47,48,59,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,86,91,105,107,111,112,114,115,116,122,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,186,187,188,189,190,191,195,196,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,225,227,251,257,258,261,262,277,279,281,282,286,294,310,326,],[-159,49,-60,81,-17,-56,81,-160,81,81,81,-58,81,-131,-88,-107,-60,-71,-69,-109,-67,-56,81,-66,-73,-72,-65,-70,-74,-108,156,-110,-68,81,81,81,-162,-127,-128,-130,-126,-129,-125,81,-106,-111,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-105,-170,81,-161,81,-59,81,81,81,81,81,81,-78,156,-99,156,-100,-101,156,-97,156,156,156,-98,156,156,156,156,156,81,-169,81,-56,81,-75,81,81,-57,81,81,81,81,81,-76,81,]),'ELSIF':([5,17,36,45,59,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,83,105,143,144,163,165,187,189,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,225,258,259,260,277,290,310,312,313,328,],[-159,-17,-160,-58,-88,-107,-60,-71,-69,-109,-67,-80,-56,-66,-73,-72,-65,-70,-74,-108,-79,-110,-68,-162,-106,-111,-105,-170,-161,-59,-78,-102,-99,-95,-100,-101,-90,-97,-96,-103,-91,-98,-89,-93,-92,-104,-94,262,-169,-75,-84,286,-57,-81,-76,-82,-86,-87,]),'CHARS':([17,53,54,58,127,183,192,271,283,323,327,],[-17,-15,134,134,134,134,-16,134,134,134,134,]),'IF':([0,1,14,16,18,22,28,30,33,34,39,40,41,43,47,48,71,84,86,87,89,91,92,95,98,107,111,112,114,115,116,122,139,141,162,169,176,177,182,184,186,188,190,191,195,196,199,203,223,227,230,231,232,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[40,-4,84,-7,-8,-6,-5,84,40,40,-2,84,84,84,84,-131,84,84,84,-113,-3,84,40,-115,40,-127,-128,-130,-126,-129,-125,84,-18,-9,84,-116,40,40,-24,40,84,84,84,84,84,84,84,84,84,84,40,-112,-179,40,40,84,84,84,40,84,84,84,84,84,40,40,40,40,84,40,40,40,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'operand':([14,30,40,41,43,47,71,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'declaration_statement':([0,33,303,322,324,325,330,331,333,337,],[1,1,1,1,1,1,1,1,1,1,]),'elsif_expression':([224,],[260,]),'constant_expression':([122,199,],[193,255,]),'then_expression':([164,289,311,],[224,313,328,]),'while_control':([34,94,],[90,175,]),'action_statement_list':([34,177,184,237,],[92,230,236,275,]),'location':([0,14,30,33,34,40,41,43,47,60,61,71,81,84,86,91,92,98,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,184,186,188,190,191,195,196,199,203,223,227,230,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[7,78,78,7,7,78,78,78,78,78,144,78,78,78,78,78,7,7,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,7,7,7,78,78,78,78,78,78,78,78,78,78,7,7,7,78,78,78,7,78,78,78,78,78,7,7,7,7,78,7,7,7,7,]),'operand1':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[63,63,63,63,63,63,143,63,163,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'exit_action':([0,33,34,92,98,176,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'declaration_list':([11,],[57,]),'newmode_statement':([0,33,303,322,324,325,330,331,333,337,],[22,22,22,22,22,22,22,22,22,22,]),'if_action':([0,33,34,92,98,176,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'reference_mode':([54,58,127,183,271,283,323,327,],[128,128,128,128,128,128,128,128,]),'procedure_statement':([0,33,303,322,324,325,330,331,333,337,],[16,16,16,16,16,16,16,16,16,16,]),'referenced_location':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'start_value':([227,],[267,]),'boolean_expression':([40,84,91,262,286,],[103,164,167,289,311,]),'expression_list':([43,162,],[109,222,]),'mode_definition':([37,181,],[100,234,]),'boolean_mode':([54,58,127,183,196,226,269,271,282,283,323,326,327,],[124,124,124,124,124,124,124,124,124,124,124,124,124,]),'element_mode':([283,327,],[309,336,]),'range_enumeration':([93,],[170,]),'upper_bound':([190,279,],[243,304,]),'composite_mode':([54,58,127,183,271,283,323,327,],[137,137,137,137,137,137,137,137,]),'declaration':([11,140,],[56,201,]),'discrete_mode_name':([0,14,30,33,34,40,41,43,47,54,58,60,61,71,81,84,86,91,92,98,122,127,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,183,184,186,188,190,191,195,196,199,203,223,226,227,230,236,237,257,261,262,269,271,275,279,281,282,283,286,294,303,322,323,324,325,326,327,330,331,333,337,],[6,6,6,6,6,6,6,6,6,117,117,6,6,6,6,6,6,6,6,6,6,117,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,117,6,6,6,6,6,6,248,6,6,6,117,6,6,6,6,6,6,6,117,117,6,6,6,248,117,6,6,6,6,117,6,6,248,117,6,6,6,6,]),'else_clause':([185,],[239,]),'index_mode':([196,282,326,],[252,306,335,]),'assigning_operator':([7,],[47,]),'parenthesized_expression':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'return_action':([0,33,34,92,98,176,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'result_spec':([274,300,],[302,321,]),'statement_list':([0,303,322,324,330,],[33,325,331,333,337,]),'string_length':([198,],[254,]),'initialization':([142,],[202,]),'index_mode_list':([282,],[307,]),'integer_mode':([54,58,127,183,196,226,269,271,282,283,323,326,327,],[120,120,120,120,120,120,120,120,120,120,120,120,120,]),'parameter_spec':([271,323,],[297,332,]),'then_clause':([103,],[185,]),'formal_parameter':([233,299,],[272,320,]),'discrete_range_mode':([54,58,127,183,196,226,269,271,282,283,323,326,327,],[131,131,131,131,131,131,131,131,131,131,131,131,131,]),'end_value':([267,291,293,315,],[292,314,316,329,]),'program':([0,],[38,]),'iteration':([93,],[173,]),'synonym_list':([9,],[55,]),'discrete_expression':([227,294,],[268,317,]),'do_action':([0,33,34,92,98,176,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'character_mode':([54,58,127,183,196,226,269,271,282,283,323,326,327,],[118,118,118,118,118,118,118,118,118,118,118,118,118,]),'procedure_call':([0,14,30,33,34,40,41,43,47,60,61,71,81,84,86,91,92,98,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,184,186,188,190,191,195,196,199,203,223,227,230,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'identifier_list':([9,11,37,138,140,181,233,299,],[54,58,101,54,58,101,271,271,]),'discrete_mode':([54,58,127,183,196,226,269,271,282,283,323,326,327,],[125,125,125,125,250,265,296,125,250,125,125,250,125,]),'array_primitive_value':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'literal_range':([191,195,196,281,282,326,],[245,247,249,245,249,249,]),'call_action':([0,14,30,33,34,40,41,43,47,60,61,71,81,84,86,91,92,98,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,184,186,188,190,191,195,196,199,203,223,227,230,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[12,64,64,12,12,64,64,64,64,64,64,64,64,64,64,64,12,12,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,12,12,12,64,64,64,64,64,64,64,64,64,64,12,12,12,64,64,64,12,64,64,64,64,64,12,12,12,12,64,12,12,12,12,]),'newmode_list':([37,],[99,]),'action':([0,33,34,92,98,176,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[26,26,26,26,178,178,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'assignment_action':([0,33,34,92,98,176,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'binop':([14,30,40,41,43,47,71,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[79,79,79,79,79,79,79,79,79,79,79,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'value_array_slice':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'identifier':([0,9,11,14,15,30,33,34,37,40,41,43,47,54,58,60,61,71,81,84,86,91,92,93,98,121,122,127,138,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,181,183,184,186,188,190,191,195,196,199,203,223,226,227,230,233,236,237,257,261,262,269,271,275,279,281,282,283,286,294,299,303,322,323,324,325,326,327,330,331,333,337,],[21,53,53,70,85,70,21,21,53,70,70,70,70,133,133,70,70,70,70,70,70,70,21,171,70,192,70,133,53,53,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,21,53,133,21,70,70,70,70,70,251,70,70,70,264,70,21,53,21,21,70,70,70,264,133,21,70,70,251,133,70,70,53,21,21,133,21,21,251,133,21,21,21,21,]),'mode':([54,58,127,183,271,283,323,327,],[135,142,197,235,298,308,298,308,]),'for_control':([34,],[94,]),'procedure_definition':([98,],[179,]),'array_mode':([54,58,127,183,271,283,323,327,],[136,136,136,136,136,136,136,136,]),'expression':([14,30,40,41,43,47,71,84,86,91,122,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[62,88,102,104,108,113,145,102,104,102,194,221,240,241,242,244,244,244,194,256,259,266,285,288,102,242,305,244,102,266,244,]),'else_expression':([224,260,],[263,287,]),'primitive_value':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'action_statement':([0,33,34,92,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[18,18,95,169,95,95,169,169,95,169,18,18,18,18,18,18,18,18,]),'synonym_statement':([0,33,303,322,324,325,330,331,333,337,],[28,28,28,28,28,28,28,28,28,28,]),'value_array_element':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'loop_counter':([93,],[172,]),'step_value':([267,],[291,]),'synonym_definition':([9,138,],[52,200,]),'literal':([14,30,40,41,43,47,60,71,81,84,86,91,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'result_action':([0,33,34,92,98,176,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'step_enumeration':([93,],[174,]),'builtin_name':([0,14,30,33,34,40,41,43,47,60,61,71,81,84,86,91,92,98,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,184,186,188,190,191,195,196,199,203,223,227,230,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'parameter_list':([41,86,281,],[106,166,106,]),'string_mode':([54,58,127,183,271,283,323,327,],[119,119,119,119,119,119,119,119,]),'label_id':([0,33,34,92,177,184,230,236,237,275,303,322,324,325,330,331,333,337,],[35,35,96,96,96,96,96,96,96,96,35,35,35,35,35,35,35,35,]),'statement':([0,33,303,322,324,325,330,331,333,337,],[39,89,39,39,39,89,39,89,89,89,]),'mode_name':([54,58,127,183,271,283,323,327,],[130,130,130,130,130,130,130,130,]),'control_part':([34,],[97,]),'builtin_call':([0,14,30,33,34,40,41,43,47,60,61,71,81,84,86,91,92,98,122,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,184,186,188,190,191,195,196,199,203,223,227,230,236,237,257,261,262,275,279,281,282,286,294,303,322,324,325,326,330,331,333,337,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'conditional_expression':([14,30,40,41,43,47,71,84,86,91,122,162,186,188,190,191,195,196,199,203,223,227,257,261,262,279,281,282,286,294,326,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'formal_parameter_list':([233,],[273,]),'lower_bound':([43,191,195,196,281,282,326,],[110,246,246,246,246,246,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',516),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',521),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',522),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',528),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',529),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',530),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',542),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',547),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',552),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',557),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',562),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',567),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',568),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',576),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',582),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',583),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',588),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',589),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',597),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',598),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',609),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',613),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',614),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',626),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',627),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',641),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',642),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',654),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',655),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',656),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',669),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',670),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',679),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',683),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',687),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',688),
]
