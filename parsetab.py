
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9187DF97B9DFF713041511193EDA3748'
    
_lr_action_items = {'PRED':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[2,2,2,2,-8,2,2,-4,-6,-2,-7,-5,2,2,2,2,2,2,2,-115,2,-3,-113,2,2,2,-131,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-116,2,2,-9,-24,-18,2,-130,-126,-129,-127,-125,-128,-179,-112,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'WHILE':([4,10,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,74,101,110,127,128,131,133,134,145,148,150,155,156,158,159,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,252,254,285,290,293,296,302,303,311,312,315,317,319,332,],[-160,70,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,70,-58,-106,-105,-111,-145,-144,-146,-36,-33,-38,-32,-35,-37,-34,-170,-162,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-157,-155,-81,-156,-150,-40,-39,-57,-76,-82,-148,-154,-149,-147,]),'AND':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,114,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,114,-92,-101,-89,114,-96,114,114,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'$end':([11,14,17,18,19,26,33,40,79,85,163,166,171,187,188,],[0,-8,-1,-4,-6,-2,-7,-5,-3,-113,-9,-24,-18,-179,-112,]),'LE':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,116,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,116,116,-101,116,116,-96,116,116,116,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'INT':([12,80,82,91,147,164,211,222,225,242,251,299,300,304,333,334,],[-17,145,-15,145,145,145,145,-16,145,145,145,145,145,145,145,145,]),'GT':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,120,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,120,120,-101,120,120,-96,120,120,120,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'FOR':([10,],[69,]),'RETURN':([0,10,14,17,18,19,26,33,40,41,71,72,79,85,129,136,138,141,163,166,171,187,188,213,216,218,259,278,305,306,309,328,329,330,338,],[13,13,-8,13,-4,-6,-2,-7,-5,13,-115,13,-3,-113,13,-116,13,13,-9,-24,-18,-179,-112,13,13,13,13,13,13,13,13,13,13,13,13,]),'COMMA':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,80,81,82,83,86,87,88,90,91,92,101,110,127,128,142,143,144,145,148,149,150,152,153,154,155,156,158,159,161,167,168,169,175,176,184,185,189,190,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,219,222,223,227,228,229,231,232,234,235,237,239,241,242,243,245,260,267,268,270,272,273,274,275,280,281,285,296,298,302,303,307,308,311,312,320,321,322,323,324,325,339,340,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,146,-10,-15,162,-25,146,165,170,146,-19,-58,-106,-105,-111,-41,-13,-29,-36,-33,-31,-38,-30,-45,-46,-32,-35,-37,-34,-28,-163,-170,230,-63,236,230,-162,-63,236,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-12,-16,-44,-11,-27,-26,-169,-20,-23,-22,-59,-161,-184,146,282,-75,-14,-53,299,-54,-164,-21,-64,-62,-189,-186,-81,-40,-47,-39,-57,-188,-185,-76,-82,-43,333,-51,-55,-49,-163,-52,-50,]),'IN':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,130,132,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,115,-69,-68,-60,-72,-70,-58,-106,-105,-111,-151,211,-170,-162,-78,115,-92,-101,-89,-103,-96,115,-90,-91,-93,-99,-97,-94,-100,-95,-98,251,-169,-59,-161,-75,-56,-57,-76,]),'FALSE':([5,13,16,53,54,57,63,70,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,174,179,180,181,182,183,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[66,66,66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-130,-126,-129,-127,-125,-128,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ASSIGN':([3,4,12,21,30,34,42,82,87,91,93,96,97,98,100,101,102,130,132,142,143,144,145,148,149,150,152,153,154,155,156,158,159,161,168,172,185,222,223,231,237,239,296,298,302,303,323,324,340,],[-56,-160,-17,-159,-60,99,-56,-15,164,173,174,179,180,181,182,-58,183,-151,212,-41,220,-29,-36,-33,-31,-38,-30,-45,-46,-32,-35,-37,-34,-28,-170,233,-162,-16,-44,-169,-59,-161,-40,-47,-39,-57,-55,-49,-50,]),'CHAR':([12,80,82,91,147,164,211,222,225,242,251,299,300,304,333,334,],[-17,150,-15,150,150,150,150,-16,150,150,150,150,150,150,150,150,]),'TRUE':([5,13,16,53,54,57,63,70,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,174,179,180,181,182,183,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[47,47,47,47,47,47,47,47,47,47,47,-131,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-130,-126,-129,-127,-125,-128,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'TIMES':([3,4,12,21,30,34,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-56,-160,-17,-159,-60,98,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,121,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,121,121,-101,121,121,121,121,121,121,121,-99,121,121,-100,121,121,-169,-59,-161,-75,-56,-57,-76,]),'NUM':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[9,9,9,9,-8,9,9,-4,-6,-2,-7,-5,9,9,9,9,9,9,9,-115,9,-3,-113,9,9,9,-131,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-116,9,9,-9,-24,-18,9,-130,-126,-129,-127,-125,-128,-179,-112,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'DO':([0,10,14,17,18,19,26,33,40,41,71,72,79,85,129,136,138,141,163,166,171,187,188,213,216,218,259,278,305,306,309,328,329,330,338,],[10,10,-8,10,-4,-6,-2,-7,-5,10,-115,10,-3,-113,10,-116,10,10,-9,-24,-18,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,]),'EXIT':([0,10,14,17,18,19,26,33,40,41,71,72,79,85,129,136,138,141,163,166,171,187,188,213,216,218,259,278,305,306,309,328,329,330,338,],[24,24,-8,24,-4,-6,-2,-7,-5,24,-115,24,-3,-113,24,-116,24,24,-9,-24,-18,-179,-112,24,24,24,24,24,24,24,24,24,24,24,24,]),'UPPER':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[20,20,20,20,-8,20,20,-4,-6,-2,-7,-5,20,20,20,20,20,20,20,-115,20,-3,-113,20,20,20,-131,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-116,20,20,-9,-24,-18,20,-130,-126,-129,-127,-125,-128,-179,-112,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'RPAREN':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,89,101,103,108,110,127,128,142,144,145,148,149,150,152,153,154,155,156,158,159,161,167,168,169,184,185,186,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,223,231,237,239,241,243,245,261,271,272,275,280,281,285,296,298,301,302,303,307,308,311,312,320,323,324,325,326,340,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,168,-58,185,191,-106,-105,-111,-41,-29,-36,-33,-31,-38,-30,-45,-46,-32,-35,-37,-34,-28,-163,-170,231,239,-162,240,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-44,-169,-59,-161,-184,283,-75,296,302,-164,-62,-189,-186,-81,-40,-47,185,-39,-57,-188,-185,-76,-82,-43,-55,-49,-163,335,-50,]),'MOD':([3,4,12,21,30,34,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-56,-160,-17,-159,-60,97,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,113,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,113,113,-101,113,113,113,113,113,113,113,-99,113,113,-100,113,113,-169,-59,-161,-75,-56,-57,-76,]),'RESULT':([0,10,14,17,18,19,26,33,40,41,71,72,79,85,129,136,138,141,163,166,171,187,188,213,216,218,259,278,305,306,309,328,329,330,338,],[5,5,-8,5,-4,-6,-2,-7,-5,5,-115,5,-3,-113,5,-116,5,5,-9,-24,-18,-179,-112,5,5,5,5,5,5,5,5,5,5,5,5,]),'ICONST':([5,13,16,53,54,57,63,70,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,174,179,180,181,182,183,193,212,220,221,224,225,226,230,233,236,238,244,247,249,288,292,294,297,299,301,333,],[61,61,61,61,61,61,61,61,61,61,61,-131,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-130,-126,-129,-127,-125,-128,61,61,61,61,265,61,61,61,61,61,61,61,61,61,61,316,61,61,61,61,61,]),'DIVIDE':([3,4,12,21,30,34,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-56,-160,-17,-159,-60,102,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,124,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,124,124,-101,124,124,124,124,124,124,124,-99,124,124,-100,124,124,-169,-59,-161,-75,-56,-57,-76,]),'OD':([71,72,85,136,138,188,213,],[-115,137,-113,-116,214,-112,257,]),'TO':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,254,255,256,285,291,295,303,311,312,316,318,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-155,294,-152,-81,294,294,-57,-76,-82,-153,294,]),'GE':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,123,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,123,123,-101,123,123,-96,123,123,123,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'PLUS':([3,4,12,21,30,34,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-56,-160,-17,-159,-60,100,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,122,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,122,122,-101,122,122,122,122,122,122,122,-99,-97,122,-100,122,-98,-169,-59,-161,-75,-56,-57,-76,]),'END':([14,18,19,26,33,40,79,85,163,166,171,187,188,305,328,329,338,],[-8,-4,-6,-2,-7,-5,-3,-113,-9,-24,-18,-179,-112,327,336,337,341,]),'IF':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,70,71,72,79,85,89,94,95,99,103,107,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[16,54,16,54,-8,54,16,-4,-6,-2,-7,-5,16,54,54,54,-115,16,-3,-113,54,54,54,-131,54,54,16,-116,16,16,-9,-24,-18,54,-130,-126,-129,-127,-125,-128,-179,-112,54,54,16,16,16,54,54,54,54,54,54,54,54,54,54,54,16,16,54,54,54,54,54,16,16,16,16,16,16,54,16,]),'REF':([12,80,82,91,147,164,222,242,300,304,334,],[-17,147,-15,147,147,147,-16,147,147,147,147,]),'CONCAT':([3,4,12,21,30,34,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-56,-160,-17,-159,-60,93,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,111,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'ELSE':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,71,85,101,110,127,128,136,140,141,168,185,188,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,218,231,237,239,245,248,250,285,303,311,312,314,331,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-115,-113,-58,-106,-105,-111,-116,216,-135,-170,-162,-112,-78,247,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-134,-169,-59,-161,-75,247,-84,-81,-57,-76,-82,-86,-87,]),'RETURNS':([240,283,],[277,277,]),'PROC':([41,],[104,]),'BOOL':([12,80,82,91,147,164,211,222,225,242,251,299,300,304,333,334,],[-17,158,-15,158,158,158,158,-16,158,158,158,158,158,158,158,158,]),'NULL':([5,13,16,53,54,57,63,70,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,174,179,180,181,182,183,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[44,44,44,44,44,44,44,44,44,44,44,-131,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-130,-126,-129,-127,-125,-128,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NOT':([4,5,12,13,16,21,42,44,46,47,48,49,50,51,52,53,54,55,56,58,59,61,62,64,65,66,70,89,94,95,99,101,103,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,168,173,174,179,180,181,182,183,185,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,212,220,221,225,226,230,231,233,236,237,238,239,244,245,247,249,266,288,294,297,299,301,303,311,333,],[-160,57,-17,57,57,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,57,57,-88,-65,-74,117,-69,-68,-60,-72,-70,57,57,57,57,-131,-58,57,57,-106,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-105,-111,-170,57,-130,-126,-129,-127,-125,-128,-162,-78,57,117,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,57,57,57,57,57,57,-169,57,57,-59,57,-161,57,-75,57,57,-56,57,57,57,57,57,-57,-76,57,]),'SEMI':([4,6,7,8,12,13,21,25,27,28,30,36,42,43,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,73,74,75,76,77,81,83,84,86,88,90,92,101,105,106,110,127,128,131,133,134,135,137,139,142,143,144,145,148,149,150,152,153,154,155,156,158,159,161,168,178,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,217,219,223,227,228,229,231,232,234,235,237,239,240,245,252,254,257,258,260,273,279,283,285,290,293,296,298,302,303,310,311,312,315,317,319,323,324,327,332,335,336,337,340,341,],[-160,-117,-122,-123,-17,-167,-159,-119,85,-118,-120,-121,-56,-168,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,138,-142,-143,-166,-83,-10,163,-165,-25,166,171,-19,-58,187,188,-106,-105,-111,-145,-144,-146,-158,-140,-141,-41,-13,-29,-36,-33,-31,-38,-30,-45,-46,-32,-35,-37,-34,-28,-170,-124,-162,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-139,-133,-12,-44,-11,-27,-26,-169,-20,-23,-22,-59,-161,278,-75,-157,-155,-138,-132,-14,-21,306,309,-81,-156,-150,-40,-47,-39,-57,330,-76,-82,-148,-154,-149,-55,-49,-183,-147,-187,-182,-181,-50,-180,]),'OR':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,118,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,118,-92,-101,-89,118,-96,118,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'SCONST':([5,13,16,53,54,57,63,70,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,174,179,180,181,182,183,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[58,58,58,58,58,58,58,58,58,58,58,-131,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-130,-126,-129,-127,-125,-128,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'LENGTH':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[15,15,15,15,-8,15,15,-4,-6,-2,-7,-5,15,15,15,15,15,15,15,-115,15,-3,-113,15,15,15,-131,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-116,15,15,-9,-24,-18,15,-130,-126,-129,-127,-125,-128,-179,-112,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DOWN':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,101,110,127,128,130,132,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,254,255,256,285,295,303,311,312,316,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-58,-106,-105,-111,-151,210,-170,-162,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-155,291,-152,-81,318,-57,-76,-82,-153,]),'ID':([0,5,10,12,13,14,16,17,18,19,23,24,26,29,32,33,40,41,53,54,57,63,67,69,70,71,72,79,80,82,85,89,91,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,146,147,162,163,164,165,166,170,171,173,174,179,180,181,182,183,186,187,188,193,211,212,213,216,218,220,221,222,225,226,230,233,236,238,242,244,247,249,251,259,278,282,288,294,297,299,300,301,304,305,306,309,328,329,330,333,334,338,],[12,12,12,-17,12,-8,12,12,-4,-6,12,12,-2,12,12,-7,-5,12,12,12,12,12,12,12,12,-115,12,-3,12,-15,-113,12,12,12,12,-131,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-116,12,12,12,12,12,-9,12,12,-24,12,-18,12,-130,-126,-129,-127,-125,-128,12,-179,-112,12,12,12,12,12,12,12,12,-16,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'READ':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[22,22,22,22,-8,22,22,-4,-6,-2,-7,-5,22,22,22,22,22,22,22,-115,22,-3,-113,22,22,22,-131,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-116,22,22,-9,-24,-18,22,-130,-126,-129,-127,-125,-128,-179,-112,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'RBRACKET':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,101,110,127,128,145,148,150,155,156,158,159,168,175,176,185,189,190,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,264,265,267,268,270,274,275,276,284,285,296,302,303,311,312,320,321,322,339,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-58,-106,-105,-111,-36,-33,-38,-32,-35,-37,-34,-170,-63,237,-162,-63,245,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,298,-48,-53,300,-54,-64,-62,303,311,-81,-40,-39,-57,-76,-82,-43,334,-51,-52,]),'DCL':([0,14,17,18,19,26,33,40,79,85,163,166,171,187,188,278,305,306,309,328,329,330,338,],[23,-8,23,-4,-6,-2,-7,-5,-3,-113,-9,-24,-18,-179,-112,23,23,23,23,23,23,23,23,]),'CHARS':([12,80,82,91,147,164,222,242,300,304,334,],[-17,151,-15,151,151,151,-16,151,151,151,151,]),'NEQ':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,112,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,112,-92,-101,112,112,-96,112,112,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'BY':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,254,255,256,285,303,311,312,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-155,292,-152,-81,-57,-76,-82,]),'LBRACKET':([3,4,12,21,30,34,42,44,45,47,48,49,51,52,56,58,61,62,64,65,66,101,128,151,157,168,185,191,231,237,239,245,266,303,311,],[-56,-160,-17,-159,-60,94,-56,-73,107,-71,94,-77,-67,-66,-65,-74,-69,-68,-60,-72,-70,-58,94,224,225,-170,-162,-78,-169,-59,-161,-75,-56,-57,-76,]),'LOC':([12,142,144,145,148,149,150,152,153,154,155,156,158,159,161,223,280,296,298,302,323,324,340,],[-17,-41,-29,-36,-33,-31,-38,-30,-45,-46,-32,-35,-37,-34,-28,-44,307,-40,-47,-39,-55,-49,-50,]),'TYPE':([0,14,17,18,19,26,33,40,79,85,163,166,171,187,188,278,305,306,309,328,329,330,338,],[29,-8,29,-4,-6,-2,-7,-5,-3,-113,-9,-24,-18,-179,-112,29,29,29,29,29,29,29,29,]),'LPAREN':([2,3,5,9,12,13,15,16,20,22,31,35,37,38,39,42,53,54,57,63,70,89,94,95,99,103,104,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,142,144,145,148,150,155,156,158,159,160,173,174,179,180,181,182,183,193,212,220,221,225,226,230,233,236,238,244,247,249,252,253,266,267,269,277,288,290,294,296,297,299,301,302,333,],[-172,-42,53,-171,-17,53,-176,53,-174,-177,89,-175,-173,103,-178,-42,53,53,53,53,53,53,53,53,-131,53,186,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-42,221,-36,-33,-38,-32,-35,-37,-34,226,53,-130,-126,-129,-127,-125,-128,53,53,53,53,53,53,53,53,53,53,53,53,53,221,-42,-42,221,301,304,53,221,53,-40,53,53,53,-39,53,]),'MINUS':([3,4,5,12,13,16,21,30,34,42,44,46,47,48,49,50,51,52,53,54,55,56,58,59,61,62,64,65,66,70,89,94,95,99,101,103,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,168,173,174,179,180,181,182,183,185,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,212,220,221,225,226,230,231,233,236,237,238,239,244,245,247,249,266,288,294,297,299,301,303,311,333,],[-56,-160,63,-17,63,63,-159,-60,96,-56,-73,-107,-71,-108,-110,-109,-67,-66,63,63,-88,-65,-74,126,-69,-68,-60,-72,-70,63,63,63,63,-131,-58,63,63,-106,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-105,-111,-170,63,-130,-126,-129,-127,-125,-128,-162,-78,63,126,126,-101,126,126,126,126,126,126,126,-99,-97,126,-100,126,-98,63,63,63,63,63,63,-169,63,63,-59,63,-161,63,-75,63,63,-56,63,63,63,63,63,-57,-76,63,]),'FI':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,71,85,101,110,127,128,136,140,141,168,185,188,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,218,231,237,239,245,246,259,285,286,287,303,311,312,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-115,-113,-58,-106,-105,-111,-116,217,-135,-170,-162,-112,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,258,-137,-134,-169,-59,-161,-75,285,-136,-81,-85,312,-57,-76,-82,]),'SYN':([0,14,17,18,19,26,33,40,79,85,163,166,171,187,188,278,305,306,309,328,329,330,338,],[32,-8,32,-4,-6,-2,-7,-5,-3,-113,-9,-24,-18,-179,-112,32,32,32,32,32,32,32,32,]),'THEN':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,77,78,101,109,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,285,289,303,311,312,313,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-83,141,-58,193,-106,-105,-111,-170,-162,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-81,193,-57,-76,-82,193,]),'EQ':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,119,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,119,-92,-101,119,119,-96,119,119,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'COLON':([1,3,4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,68,101,110,127,128,168,175,177,185,189,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,262,263,266,285,303,311,312,325,],[41,-114,-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,129,-58,-106,-105,-111,-170,-61,238,-162,244,-78,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-61,297,-56,-81,-57,-76,-82,-61,]),'ARRAY':([12,80,82,91,147,164,222,242,300,304,334,],[-17,157,-15,157,157,157,-16,157,157,157,157,]),'LOWER':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[35,35,35,35,-8,35,35,-4,-6,-2,-7,-5,35,35,35,35,35,35,35,-115,35,-3,-113,35,35,35,-131,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-116,35,35,-9,-24,-18,35,-130,-126,-129,-127,-125,-128,-179,-112,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'CCONST':([5,13,16,53,54,57,63,70,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,174,179,180,181,182,183,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[65,65,65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-130,-126,-129,-127,-125,-128,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'SUCC':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[37,37,37,37,-8,37,37,-4,-6,-2,-7,-5,37,37,37,37,37,37,37,-115,37,-3,-113,37,37,37,-131,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-116,37,37,-9,-24,-18,37,-130,-126,-129,-127,-125,-128,-179,-112,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LT':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,61,62,64,65,66,101,110,127,128,168,185,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,266,303,311,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,125,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,125,125,-101,125,125,-96,125,125,125,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,-56,-57,-76,]),'ARROW':([3,4,5,12,13,16,21,30,34,42,48,53,54,57,63,64,70,89,94,95,99,101,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,168,173,174,179,180,181,182,183,185,193,212,220,221,225,226,230,231,233,236,237,238,239,244,247,249,266,288,294,297,299,301,303,333,],[-56,-160,67,-17,67,67,-159,-60,101,-56,101,67,67,67,67,-60,67,67,67,67,-131,-58,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,101,-170,67,-130,-126,-129,-127,-125,-128,-162,67,67,67,67,67,67,67,-169,67,67,-59,67,-161,67,67,67,-56,67,67,67,67,67,-57,67,]),'PRINT':([0,5,10,13,14,16,17,18,19,26,33,40,41,53,54,57,63,67,70,71,72,79,85,89,94,95,99,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,136,138,141,163,166,171,173,174,179,180,181,182,183,187,188,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[39,39,39,39,-8,39,39,-4,-6,-2,-7,-5,39,39,39,39,39,39,39,-115,39,-3,-113,39,39,39,-131,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-116,39,39,-9,-24,-18,39,-130,-126,-129,-127,-125,-128,-179,-112,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ELSIF':([4,12,21,42,44,46,47,48,49,50,51,52,55,56,58,59,60,61,62,64,65,66,101,110,127,128,168,185,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,231,237,239,245,248,250,285,303,311,312,314,331,],[-160,-17,-159,-56,-73,-107,-71,-108,-110,-109,-67,-66,-88,-65,-74,-79,-80,-69,-68,-60,-72,-70,-58,-106,-105,-111,-170,-162,-78,249,-104,-92,-101,-89,-103,-96,-102,-90,-91,-93,-99,-97,-94,-100,-95,-98,-169,-59,-161,-75,288,-84,-81,-57,-76,-82,-86,-87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'label_id':([0,10,17,72,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[1,68,1,68,68,68,68,68,68,68,1,1,1,1,1,1,1,1,]),'identifier':([0,5,10,13,16,17,23,24,29,32,41,53,54,57,63,67,69,70,72,80,89,91,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,138,141,146,147,162,164,165,170,173,186,193,211,212,213,216,218,220,221,225,226,230,233,236,238,242,244,247,249,251,259,278,282,288,294,297,299,300,301,304,305,306,309,328,329,330,333,334,338,],[3,42,3,42,42,3,82,84,82,82,42,42,42,42,42,42,130,42,3,142,42,142,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,3,3,222,142,82,142,82,82,42,82,42,253,42,3,3,3,42,42,266,42,42,42,42,42,142,42,42,42,253,3,3,82,42,42,42,266,142,42,142,3,3,3,3,3,3,266,142,3,]),'character_mode':([80,91,147,164,211,225,242,251,299,300,304,333,334,],[159,159,159,159,159,159,159,159,159,159,159,159,159,]),'synonym_list':([32,],[90,]),'literal_range':([221,225,226,299,301,333,],[261,270,271,270,271,270,]),'iteration':([69,],[133,]),'synonym_definition':([32,170,],[92,232,]),'boolean_mode':([80,91,147,164,211,225,242,251,299,300,304,333,334,],[148,148,148,148,148,148,148,148,148,148,148,148,148,]),'then_expression':([109,289,313,],[192,314,331,]),'result_action':([0,10,17,41,72,129,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'newmode_list':([29,],[88,]),'value_array_slice':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'reference_mode':([80,91,147,164,242,300,304,334,],[152,152,152,152,152,152,152,152,]),'constant_expression':([173,233,],[235,273,]),'binop':([5,13,16,53,54,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[59,59,59,59,59,59,59,59,59,59,59,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'referenced_location':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'operand':([5,13,16,53,54,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'parameter_list':([89,103,301,],[169,184,184,]),'mode':([80,91,147,164,242,300,304,334,],[143,172,223,228,280,323,280,323,]),'literal':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'result_spec':([240,283,],[279,310,]),'assigning_operator':([34,],[95,]),'loop_counter':([69,],[132,]),'parameter_spec':([242,304,],[281,326,]),'program':([0,],[11,]),'control_part':([10,],[73,]),'for_control':([10,],[74,]),'composite_mode':([80,91,147,164,242,300,304,334,],[149,149,149,149,149,149,149,149,]),'discrete_expression':([212,294,],[256,317,]),'procedure_call':([0,5,10,13,16,17,41,53,54,57,63,67,70,72,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,138,141,173,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'identifier_list':([23,29,32,162,165,170,186,282,],[80,87,91,80,87,91,242,242,]),'index_mode':([225,299,333,],[268,322,339,]),'procedure_definition':([41,],[105,]),'parenthesized_expression':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'string_mode':([80,91,147,164,242,300,304,334,],[153,153,153,153,153,153,153,153,]),'array_mode':([80,91,147,164,242,300,304,334,],[154,154,154,154,154,154,154,154,]),'index_mode_list':([299,],[321,]),'discrete_range_mode':([80,91,147,164,211,225,242,251,299,300,304,333,334,],[156,156,156,156,156,156,156,156,156,156,156,156,156,]),'procedure_statement':([0,17,278,305,306,309,328,329,330,338,],[33,33,33,33,33,33,33,33,33,33,]),'declaration_list':([23,],[83,]),'location':([0,5,10,13,16,17,41,53,54,57,63,67,70,72,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,138,141,173,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[34,48,34,48,48,34,34,48,48,48,48,128,48,34,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,34,34,34,48,48,48,34,34,34,48,48,48,48,48,48,48,48,48,48,48,34,34,48,48,48,48,48,34,34,34,34,34,34,48,34,]),'lower_bound':([94,221,225,226,299,301,333,],[177,263,263,263,263,263,263,]),'exit_action':([0,10,17,41,72,129,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'step_enumeration':([69,],[131,]),'range_enumeration':([69,],[134,]),'expression':([5,13,16,53,54,70,89,94,95,103,107,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[43,76,77,108,77,77,167,175,178,167,189,234,250,254,260,262,262,262,272,234,274,275,284,286,77,77,254,275,262,325,262,]),'else_expression':([192,248,],[246,287,]),'if_action':([0,10,17,41,72,129,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'array_primitive_value':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'builtin_call':([0,5,10,13,16,17,41,53,54,57,63,67,70,72,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,138,141,173,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operand1':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[46,46,46,46,46,110,127,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'action_statement':([0,10,17,72,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[14,71,14,136,71,71,136,71,136,136,14,14,14,14,14,14,14,14,]),'element_mode':([300,334,],[324,340,]),'primitive_value':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'upper_bound':([238,297,],[276,320,]),'start_value':([212,],[255,]),'else_clause':([140,],[215,]),'value_array_element':([5,13,16,53,54,57,63,70,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'expression_list':([94,107,],[176,190,]),'mode_name':([80,91,147,164,242,300,304,334,],[161,161,161,161,161,161,161,161,]),'step_value':([255,],[295,]),'boolean_expression':([16,54,70,249,288,],[78,109,135,289,313,]),'discrete_mode':([80,91,147,164,211,225,242,251,299,300,304,333,334,],[144,144,144,144,252,267,144,290,267,144,144,267,144,]),'statement_list':([0,278,306,309,330,],[17,305,328,329,338,]),'declaration_statement':([0,17,278,305,306,309,328,329,330,338,],[18,18,18,18,18,18,18,18,18,18,]),'formal_parameter':([186,282,],[241,308,]),'newmode_statement':([0,17,278,305,306,309,328,329,330,338,],[19,19,19,19,19,19,19,19,19,19,]),'string_length':([224,],[264,]),'conditional_expression':([5,13,16,53,54,70,89,94,95,103,107,173,193,212,220,221,225,226,230,233,236,238,244,247,249,288,294,297,299,301,333,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'then_clause':([78,],[140,]),'initialization':([143,],[219,]),'formal_parameter_list':([186,],[243,]),'assignment_action':([0,10,17,41,72,129,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'action_statement_list':([10,138,141,216,],[72,213,218,259,]),'end_value':([255,291,295,318,],[293,315,319,332,]),'action':([0,10,17,41,72,129,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[27,27,27,106,27,106,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'do_action':([0,10,17,41,72,129,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'mode_definition':([29,165,],[86,229,]),'integer_mode':([80,91,147,164,211,225,242,251,299,300,304,333,334,],[155,155,155,155,155,155,155,155,155,155,155,155,155,]),'while_control':([10,74,],[75,139,]),'elsif_expression':([192,],[248,]),'call_action':([0,5,10,13,16,17,41,53,54,57,63,67,70,72,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,138,141,173,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[30,64,30,64,64,30,30,64,64,64,64,64,64,30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,30,30,30,64,64,64,30,30,30,64,64,64,64,64,64,64,64,64,64,64,30,30,64,64,64,64,64,30,30,30,30,30,30,64,30,]),'statement':([0,17,278,305,306,309,328,329,330,338,],[26,79,26,79,26,26,79,79,26,79,]),'declaration':([23,162,],[81,227,]),'return_action':([0,10,17,41,72,129,138,141,213,216,218,259,278,305,306,309,328,329,330,338,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'discrete_mode_name':([0,5,10,13,16,17,41,53,54,57,63,67,70,72,80,89,91,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,138,141,147,164,173,193,211,212,213,216,218,220,221,225,226,230,233,236,238,242,244,247,249,251,259,278,288,294,297,299,300,301,304,305,306,309,328,329,330,333,334,338,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,160,38,160,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,160,160,38,38,160,38,38,38,38,38,38,269,38,38,38,38,38,160,38,38,38,160,38,38,38,38,38,269,160,38,160,38,38,38,38,38,38,269,160,38,]),'builtin_name':([0,5,10,13,16,17,41,53,54,57,63,67,70,72,89,94,95,103,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,138,141,173,193,212,213,216,218,220,221,225,226,230,233,236,238,244,247,249,259,278,288,294,297,299,301,305,306,309,328,329,330,333,338,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'synonym_statement':([0,17,278,305,306,309,328,329,330,338,],[40,40,40,40,40,40,40,40,40,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',292),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',297),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',302),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',307),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',312),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',313),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',318),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',319),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',327),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',332),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',337),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',342),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',343),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',361),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',362),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',363),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',377),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',385),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',386),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',387),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',395),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',396),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',397),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',402),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',408),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',409),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',417),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',422),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',423),
  ('action -> if_action','action',1,'p_action','lyaparser.py',431),
  ('action -> do_action','action',1,'p_action','lyaparser.py',432),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',433),
  ('action -> call_action','action',1,'p_action','lyaparser.py',434),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',435),
  ('action -> return_action','action',1,'p_action','lyaparser.py',436),
  ('action -> result_action','action',1,'p_action','lyaparser.py',437),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',442),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',447),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',448),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',453),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',460),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',461),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',469),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',470),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',478),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',479),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',488),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',489),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',490),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',500),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',501),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',502),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',510),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',515),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',516),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',521),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',522),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',524),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',536),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',541),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',546),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',551),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',556),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',561),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',562),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',570),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',576),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',577),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',582),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',583),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',591),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',592),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',603),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',607),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',608),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',616),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',621),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',629),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',630),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',643),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',648),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',650),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',663),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',664),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',673),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',677),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',681),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',682),
]
