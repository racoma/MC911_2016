
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D837A17DB7A9A44D7EE416F1489EE1ED'
    
_lr_action_items = {'MOD':([1,13,14,27,36,39,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-56,87,-17,-159,-60,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,132,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,132,132,132,132,-99,132,-100,132,132,132,132,132,132,132,132,-78,-59,-161,-169,-56,-75,-57,-76,]),'SEMI':([1,11,12,18,26,27,28,30,32,33,36,39,43,44,46,47,48,49,51,52,53,55,56,57,58,61,62,63,64,65,66,67,68,69,73,76,79,82,90,92,93,96,97,98,103,104,106,109,110,112,114,115,116,117,118,119,120,121,123,127,129,130,131,150,153,154,156,158,159,161,169,175,178,185,189,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,220,226,228,230,231,233,237,238,239,242,255,262,263,265,268,273,276,277,279,284,286,290,294,297,299,303,304,312,313,318,320,321,322,324,330,334,336,337,338,339,341,],[-160,-119,-121,-167,-117,-17,-118,102,-122,-123,-159,-120,107,-19,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-168,-88,-108,-73,-65,-107,-60,-70,-80,-142,155,-143,-58,173,-10,-166,-83,182,-25,-165,186,188,-30,-38,-34,-35,-45,-32,-41,-28,-29,-37,-46,-31,-33,-36,-106,-111,-105,-141,-158,-145,-146,-144,-140,-124,-13,-162,-170,-20,-44,-22,-23,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-139,-59,-11,-12,-161,-133,-26,-27,-169,281,-21,-75,-138,-155,-157,-14,-132,305,307,-47,-40,-39,-81,-156,-150,-57,326,-49,-55,-82,-76,-148,-154,-149,-183,-147,-181,-182,-187,-50,-180,]),'EQ':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,134,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,-91,134,134,-99,-97,-100,134,-95,-96,134,-92,134,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'CCONST':([7,18,21,50,59,70,71,75,84,85,86,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[46,46,46,46,46,46,46,46,46,46,-131,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-128,-127,-125,-129,-130,-126,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'SYN':([0,8,9,15,19,23,31,38,100,102,107,173,182,186,188,281,305,307,309,326,327,328,335,],[4,-6,-7,-2,-4,4,-8,-5,-3,-113,-18,-9,-24,-179,-112,4,4,4,4,4,4,4,4,]),'SUCC':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[5,5,-6,-7,5,-2,5,-4,5,5,-8,-5,5,5,5,5,5,5,-115,5,5,5,5,-131,5,-3,5,-113,-18,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-116,-128,-127,-125,-129,-130,-126,-9,5,-24,-179,-112,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ICONST':([7,18,21,50,59,70,71,75,84,85,86,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,191,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,302,332,],[47,47,47,47,47,47,47,47,47,47,-131,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-128,-127,-125,-129,-130,-126,245,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,325,47,]),'NUM':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[6,6,-6,-7,6,-2,6,-4,6,6,-8,-5,6,6,6,6,6,6,-115,6,6,6,6,-131,6,-3,6,-113,-18,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-116,-128,-127,-125,-129,-130,-126,-9,6,-24,-179,-112,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'OD':([74,78,102,155,162,188,221,],[-115,161,-113,220,-116,-112,263,]),'COMMA':([1,27,36,42,43,44,45,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,90,91,92,97,98,99,109,110,112,114,115,116,117,118,119,120,121,123,127,129,130,131,150,167,168,175,176,177,178,184,185,189,190,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,218,219,226,228,230,231,237,238,239,240,241,243,249,251,253,255,262,271,272,273,274,282,283,284,286,290,294,303,306,310,311,312,313,314,315,316,318,320,339,340,],[-160,-17,-159,-15,108,-19,111,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,174,111,-10,181,-25,111,-30,-38,-34,-35,-45,-32,-41,-28,-29,-37,-46,-31,-33,-36,-106,-111,-105,-63,227,-13,232,-163,-162,232,-170,-20,-16,-44,-22,-23,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-63,227,-78,-59,-11,-12,-161,-26,-27,-169,278,-184,111,288,-53,-54,-21,-75,-62,-64,-14,-164,-186,-189,-47,-40,-39,-81,-57,-185,-188,-43,-49,-55,-51,332,-163,-82,-76,-50,-52,]),'NOT':([1,7,18,21,27,36,46,47,48,49,51,52,53,55,56,57,58,59,62,63,64,65,66,67,68,71,75,82,84,85,86,94,101,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,163,164,165,170,171,172,178,185,192,193,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,219,223,225,226,227,229,231,232,239,250,258,260,261,262,285,288,289,291,300,303,320,332,],[-160,50,50,50,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,136,50,-88,-108,-73,-65,-107,-60,-70,50,50,-58,50,50,-131,50,50,50,-106,-111,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-105,-128,-127,-125,-129,-130,-126,-162,-170,50,50,50,50,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,136,-92,-89,-93,-98,50,-78,50,50,-59,50,50,-161,50,-169,-56,50,50,50,-75,50,50,50,50,50,-57,-76,50,]),'LBRACKET':([1,13,14,27,36,39,46,47,48,49,51,53,55,56,57,60,63,64,65,67,68,82,113,122,131,178,185,219,226,231,239,250,262,303,320,],[-160,-56,84,-17,-159,-60,-72,-69,-67,-66,-56,-68,-77,-74,-71,149,84,-73,-65,-60,-70,-58,191,193,84,-162,-170,-78,-59,-161,-169,-56,-75,-57,-76,]),'RESULT':([0,8,9,10,15,19,23,31,38,41,74,78,100,102,107,152,155,162,173,180,182,186,188,221,234,236,275,281,305,307,309,326,327,328,335,],[7,-6,-7,7,-2,-4,7,-8,-5,7,-115,7,-3,-113,-18,7,7,-116,-9,7,-24,-179,-112,7,7,7,7,7,7,7,7,7,7,7,7,]),'DIVIDE':([1,13,14,27,36,39,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-56,80,-17,-159,-60,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,139,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,139,139,139,139,-99,139,-100,139,139,139,139,139,139,139,139,-78,-59,-161,-169,-56,-75,-57,-76,]),'GE':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,133,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,133,133,133,-99,-97,-100,133,-95,-96,133,133,133,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'LOC':([27,109,110,112,114,115,116,117,118,119,120,121,123,127,129,194,283,284,286,290,312,313,339,],[-17,-30,-38,-34,-35,-45,-32,-41,-28,-29,-37,-46,-31,-33,-36,-44,310,-47,-40,-39,-49,-55,-50,]),'TIMES':([1,13,14,27,36,39,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-56,81,-17,-159,-60,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,137,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,137,137,137,137,-99,137,-100,137,137,137,137,137,137,137,137,-78,-59,-161,-169,-56,-75,-57,-76,]),'END':([8,9,15,19,31,38,100,102,107,173,182,186,188,309,327,328,335,],[-6,-7,-2,-4,-8,-5,-3,-113,-18,-9,-24,-179,-112,330,336,337,341,]),'CONCAT':([1,13,14,27,36,39,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-56,88,-17,-159,-60,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,143,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'REF':([27,42,45,91,124,183,190,243,287,308,331,],[-17,-15,124,124,124,124,-16,124,124,124,124,]),'DCL':([0,8,9,15,19,23,31,38,100,102,107,173,182,186,188,281,305,307,309,326,327,328,335,],[16,-6,-7,-2,-4,16,-8,-5,-3,-113,-18,-9,-24,-179,-112,16,16,16,16,16,16,16,16,]),'FI':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,74,82,102,130,131,150,162,178,179,180,185,188,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,234,235,236,239,259,262,275,292,293,294,303,318,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-115,-58,-113,-106,-111,-105,-116,-162,233,-135,-170,-112,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-137,276,-134,-169,294,-75,-136,318,-85,-81,-57,-82,-76,]),'CHARS':([27,42,45,91,124,183,190,243,287,308,331,],[-17,-15,113,113,113,113,-16,113,113,113,113,]),'NEQ':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,144,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,-91,144,144,-99,-97,-100,144,-95,-96,144,-92,144,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'LOWER':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[2,2,-6,-7,2,-2,2,-4,2,2,-8,-5,2,2,2,2,2,2,-115,2,2,2,2,-131,2,-3,2,-113,-18,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-116,-128,-127,-125,-129,-130,-126,-9,2,-24,-179,-112,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'BOOL':([27,42,45,91,124,183,190,193,224,243,264,287,288,308,331,332,],[-17,-15,120,120,120,120,-16,120,120,120,120,120,120,120,120,120,]),'PRED':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[17,17,-6,-7,17,-2,17,-4,17,17,-8,-5,17,17,17,17,17,17,-115,17,17,17,17,-131,17,-3,17,-113,-18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-116,-128,-127,-125,-129,-130,-126,-9,17,-24,-179,-112,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'RETURN':([0,8,9,10,15,19,23,31,38,41,74,78,100,102,107,152,155,162,173,180,182,186,188,221,234,236,275,281,305,307,309,326,327,328,335,],[18,-6,-7,18,-2,-4,18,-8,-5,18,-115,18,-3,-113,-18,18,18,-116,-9,18,-24,-179,-112,18,18,18,18,18,18,18,18,18,18,18,18,]),'INT':([27,42,45,91,124,183,190,193,224,243,264,287,288,308,331,332,],[-17,-15,129,129,129,129,-16,129,129,129,129,129,129,129,129,129,]),'LE':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,142,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,142,142,142,-99,-97,-100,142,-95,-96,142,142,142,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'LT':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,141,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,141,141,141,-99,-97,-100,141,-95,-96,141,141,141,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'LENGTH':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[25,25,-6,-7,25,-2,25,-4,25,25,-8,-5,25,25,25,25,25,25,-115,25,25,25,25,-131,25,-3,25,-113,-18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-116,-128,-127,-125,-129,-130,-126,-9,25,-24,-179,-112,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TYPE':([0,8,9,15,19,23,31,38,100,102,107,173,182,186,188,281,305,307,309,326,327,328,335,],[22,-6,-7,-2,-4,22,-8,-5,-3,-113,-18,-9,-24,-179,-112,22,22,22,22,22,22,22,22,]),'ASSIGN':([1,13,14,27,36,39,42,45,51,80,81,82,83,87,88,89,99,109,110,112,114,115,116,117,118,119,120,121,123,126,127,129,157,160,175,178,185,190,194,226,231,239,284,286,290,303,312,313,339,],[-160,-56,86,-17,-159,-60,-15,128,-56,163,164,-58,165,170,171,172,183,-30,-38,-34,-35,-45,-32,-41,-28,-29,-37,-46,-31,196,-33,-36,223,-151,229,-162,-170,-16,-44,-59,-161,-169,-47,-40,-39,-57,-49,-55,-50,]),'BY':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,262,265,266,267,294,303,318,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,-106,-111,-105,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-169,-75,-155,302,-152,-81,-57,-82,-76,]),'FOR':([10,],[77,]),'WHILE':([1,10,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,73,82,110,112,114,116,120,127,129,130,131,150,156,158,159,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,262,265,268,286,290,294,297,299,303,318,320,321,322,324,334,],[-160,75,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,75,-58,-38,-34,-35,-32,-37,-33,-36,-106,-111,-105,-145,-146,-144,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-169,-75,-155,-157,-40,-39,-81,-156,-150,-57,-82,-76,-148,-154,-149,-147,]),'IN':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,157,160,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,222,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,140,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,224,-151,-162,-170,-101,-94,-91,-90,140,-99,-97,-100,-103,-95,-96,140,-92,-89,-93,-98,-78,264,-59,-161,-169,-56,-75,-57,-76,]),'TO':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,262,265,266,267,294,298,301,303,318,320,323,325,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,-106,-111,-105,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-169,-75,-155,300,-152,-81,300,300,-57,-82,-76,300,-153,]),'CHAR':([27,42,45,91,124,183,190,193,224,243,264,287,288,308,331,332,],[-17,-15,110,110,110,110,-16,110,110,110,110,110,110,110,110,110,]),'SCONST':([7,18,21,50,59,70,71,75,84,85,86,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[56,56,56,56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-128,-127,-125,-129,-130,-126,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'TRUE':([7,18,21,50,59,70,71,75,84,85,86,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[57,57,57,57,57,57,57,57,57,57,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-128,-127,-125,-129,-130,-126,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'OR':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,135,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,-91,-90,135,-99,-97,-100,135,-95,-96,135,-92,-89,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'THEN':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,95,96,130,131,148,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,262,294,295,303,317,318,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,180,-83,-106,-111,215,-105,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-169,-75,-81,215,-57,215,-82,-76,]),'DO':([0,8,9,10,15,19,23,31,38,41,74,78,100,102,107,152,155,162,173,180,182,186,188,221,234,236,275,281,305,307,309,326,327,328,335,],[10,-6,-7,10,-2,-4,10,-8,-5,10,-115,10,-3,-113,-18,10,10,-116,-9,10,-24,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,]),'IF':([0,7,8,9,10,15,18,19,21,23,31,38,41,59,71,74,75,78,84,85,86,94,100,101,102,107,128,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[21,59,-6,-7,21,-2,59,-4,59,21,-8,-5,21,59,59,-115,59,21,59,59,-131,59,-3,59,-113,-18,59,59,21,21,-116,-128,-127,-125,-129,-130,-126,-9,21,-24,-179,-112,59,59,59,59,59,21,59,59,59,59,59,21,21,59,59,59,21,21,59,59,59,59,59,21,21,21,21,21,21,59,21,]),'$end':([8,9,15,19,23,29,31,38,100,102,107,173,182,186,188,],[-6,-7,-2,-4,-1,0,-8,-5,-3,-113,-18,-9,-24,-179,-112,]),'UPPER':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[37,37,-6,-7,37,-2,37,-4,37,37,-8,-5,37,37,37,37,37,37,-115,37,37,37,37,-131,37,-3,37,-113,-18,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-116,-128,-127,-125,-129,-130,-126,-9,37,-24,-179,-112,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LPAREN':([2,5,6,7,13,17,18,20,21,24,25,27,35,37,40,50,51,59,70,71,75,84,85,86,94,101,105,110,112,114,116,117,119,120,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,192,193,195,196,215,223,225,227,229,232,250,251,252,258,260,261,268,269,280,285,286,288,289,290,291,297,300,332,],[-175,-173,-171,71,-42,-172,71,94,71,101,-176,-17,-178,-174,-177,71,-42,71,71,71,71,71,71,-131,71,71,187,-38,-34,-35,-32,-42,192,-37,195,-33,71,-36,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-128,-127,-125,-129,-130,-126,71,71,71,71,71,71,71,71,71,71,-42,192,289,71,71,71,192,-42,308,71,-40,71,71,-39,71,192,71,71,]),'ID':([0,4,7,8,9,10,15,16,18,19,21,22,23,27,31,34,38,41,42,45,50,54,59,70,71,74,75,77,78,84,85,86,91,94,100,101,102,107,108,111,124,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,174,180,181,182,183,186,187,188,190,192,193,195,196,215,221,223,224,225,227,229,232,234,236,243,258,260,261,264,275,278,281,285,287,288,289,291,300,305,307,308,309,326,327,328,331,332,335,],[27,27,27,-6,-7,27,-2,27,27,-4,27,27,27,-17,-8,27,-5,27,-15,27,27,27,27,27,27,-115,27,27,27,27,27,-131,27,27,-3,27,-113,-18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-116,-128,-127,-125,-129,-130,-126,-9,27,27,27,-24,27,-179,27,-112,-16,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ARRAY':([27,42,45,91,124,183,190,243,287,308,331,],[-17,-15,122,122,122,122,-16,122,122,122,122,]),'GT':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,146,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,146,146,146,-99,-97,-100,146,-95,-96,146,146,146,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'RBRACKET':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,110,112,114,116,120,127,129,130,131,150,167,168,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,218,219,226,231,239,244,245,249,251,253,262,270,271,272,286,290,294,296,303,311,314,315,318,320,340,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,-38,-34,-35,-32,-37,-33,-36,-106,-111,-105,-63,226,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-63,262,-78,-59,-161,-169,284,-48,287,-53,-54,-75,303,-62,-64,-40,-39,-81,320,-57,-43,-51,331,-82,-76,-52,]),'DOWN':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,130,131,150,157,160,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,262,265,266,267,294,301,303,318,320,325,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,-106,-111,-105,222,-151,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-169,-75,-155,298,-152,-81,323,-57,-82,-76,-153,]),'EXIT':([0,8,9,10,15,19,23,31,38,41,74,78,100,102,107,152,155,162,173,180,182,186,188,221,234,236,275,281,305,307,309,326,327,328,335,],[34,-6,-7,34,-2,-4,34,-8,-5,34,-115,34,-3,-113,-18,34,34,-116,-9,34,-24,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,]),'PRINT':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[35,35,-6,-7,35,-2,35,-4,35,35,-8,-5,35,35,35,35,35,35,-115,35,35,35,35,-131,35,-3,35,-113,-18,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-116,-128,-127,-125,-129,-130,-126,-9,35,-24,-179,-112,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ELSE':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,74,82,102,130,131,150,162,178,179,180,185,188,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,219,226,231,236,239,256,257,262,294,303,318,319,320,333,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-115,-58,-113,-106,-111,-105,-116,-162,234,-135,-170,-112,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,258,-78,-59,-161,-134,-169,-84,258,-75,-81,-57,-82,-86,-76,-87,]),'ARROW':([1,7,13,14,18,21,27,36,39,50,51,59,63,67,70,71,75,82,84,85,86,94,101,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,178,185,192,193,195,196,215,223,225,226,227,229,231,232,239,250,258,260,261,285,288,289,291,300,303,332,],[-160,54,-56,82,54,54,-17,-159,-60,54,-56,54,82,-60,54,54,54,-58,54,54,-131,54,54,54,82,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-128,-127,-125,-129,-130,-126,-162,-170,54,54,54,54,54,54,54,-59,54,54,-161,54,-169,-56,54,54,54,54,54,54,54,54,-57,54,]),'NULL':([7,18,21,50,59,70,71,75,84,85,86,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[64,64,64,64,64,64,64,64,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-128,-127,-125,-129,-130,-126,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'PLUS':([1,13,14,27,36,39,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-56,83,-17,-159,-60,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,138,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,138,138,138,138,-99,-97,-100,138,138,138,138,138,138,138,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'AND':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,250,262,303,320,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,145,-88,-108,-73,-65,-107,-60,-70,-58,-106,-111,-105,-162,-170,-101,-94,-91,145,145,-99,-97,-100,145,-95,-96,145,-92,-89,-93,-98,-78,-59,-161,-169,-56,-75,-57,-76,]),'ELSIF':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,130,131,150,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,219,226,231,239,256,257,262,294,303,318,319,320,333,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,-106,-111,-105,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,260,-78,-59,-161,-169,-84,291,-75,-81,-57,-82,-86,-76,-87,]),'COLON':([1,3,13,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,72,82,130,131,150,166,167,178,185,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,219,226,231,239,246,248,250,262,294,303,316,318,320,],[-160,41,-114,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,152,-58,-106,-111,-105,225,-61,-162,-170,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,261,-78,-59,-161,-169,285,-61,-56,-75,-81,-57,-61,-82,-76,]),'FALSE':([7,18,21,50,59,70,71,75,84,85,86,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,163,164,165,170,171,172,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[68,68,68,68,68,68,68,68,68,68,-131,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-128,-127,-125,-129,-130,-126,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'RETURNS':([242,277,],[280,280,]),'RPAREN':([1,27,36,46,47,48,49,51,52,53,55,56,57,58,62,63,64,65,66,67,68,69,82,94,101,109,110,112,114,115,116,117,118,119,120,121,123,127,129,130,131,150,151,176,177,178,184,185,187,194,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,219,226,231,239,240,241,247,254,262,271,274,282,283,284,286,289,290,294,303,306,310,311,312,313,316,318,320,329,339,],[-160,-17,-159,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,-79,-88,-108,-73,-65,-107,-60,-70,-80,-58,178,185,-30,-38,-34,-35,-45,-32,-41,-28,-29,-37,-46,-31,-33,-36,-106,-111,-105,219,231,-163,-162,239,-170,242,-44,-101,-94,-91,-90,-102,-99,-97,-100,-103,-95,-96,-104,-92,-89,-93,-98,-78,-59,-161,-169,277,-184,286,290,-75,-62,-164,-186,-189,-47,-40,178,-39,-81,-57,-185,-188,-43,-49,-55,-163,-82,-76,338,-50,]),'MINUS':([1,7,13,14,18,21,27,36,39,46,47,48,49,51,52,53,55,56,57,58,59,62,63,64,65,66,67,68,71,75,82,84,85,86,94,101,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,163,164,165,170,171,172,178,185,192,193,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,219,223,225,226,227,229,231,232,239,250,258,260,261,262,285,288,289,291,300,303,320,332,],[-160,70,-56,89,70,70,-17,-159,-60,-72,-69,-67,-66,-56,-109,-68,-110,-74,-71,147,70,-88,-108,-73,-65,-107,-60,-70,70,70,-58,70,70,-131,70,70,70,-106,-111,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-105,-128,-127,-125,-129,-130,-126,-162,-170,70,70,70,70,-101,147,147,147,147,-99,-97,-100,147,147,147,147,147,147,147,-98,70,-78,70,70,-59,70,70,-161,70,-169,-56,70,70,70,-75,70,70,70,70,70,-57,-76,70,]),'READ':([0,7,8,9,10,15,18,19,21,23,31,38,41,50,54,59,70,71,74,75,78,84,85,86,94,100,101,102,107,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,162,163,164,165,170,171,172,173,180,182,186,188,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[40,40,-6,-7,40,-2,40,-4,40,40,-8,-5,40,40,40,40,40,40,-115,40,40,40,40,-131,40,-3,40,-113,-18,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-116,-128,-127,-125,-129,-130,-126,-9,40,-24,-179,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'PROC':([41,],[105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elsif_expression':([216,],[257,]),'reference_mode':([45,91,124,183,243,287,308,331,],[109,109,109,109,109,109,109,109,]),'for_control':([10,],[73,]),'formal_parameter_list':([187,],[240,]),'formal_parameter':([187,278,],[241,306,]),'value_array_slice':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'value_array_element':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'array_primitive_value':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'newmode_statement':([0,23,281,305,307,309,326,327,328,335,],[8,8,8,8,8,8,8,8,8,8,]),'discrete_range_mode':([45,91,124,183,193,224,243,264,287,288,308,331,332,],[114,114,114,114,114,114,114,114,114,114,114,114,114,]),'assignment_action':([0,10,23,41,78,152,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'referenced_location':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'procedure_definition':([41,],[104,]),'lower_bound':([84,192,193,195,288,289,332,],[166,246,246,246,246,246,246,]),'initialization':([175,],[230,]),'location':([0,7,10,18,21,23,41,50,54,59,70,71,75,78,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,180,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[14,63,14,63,63,14,14,63,131,63,63,63,63,14,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,14,14,14,63,63,63,63,63,14,63,63,63,63,63,14,14,63,63,63,14,14,63,63,63,63,63,14,14,14,14,14,14,63,14,]),'integer_mode':([45,91,124,183,193,224,243,264,287,288,308,331,332,],[116,116,116,116,116,116,116,116,116,116,116,116,116,]),'declaration_statement':([0,23,281,305,307,309,326,327,328,335,],[19,19,19,19,19,19,19,19,19,19,]),'discrete_mode_name':([0,7,10,18,21,23,41,45,50,54,59,70,71,75,78,84,85,91,94,101,124,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,180,183,192,193,195,196,215,221,223,224,225,227,229,232,234,236,243,258,260,261,264,275,281,285,287,288,289,291,300,305,307,308,309,326,327,328,331,332,335,],[20,20,20,20,20,20,20,125,20,20,20,20,20,20,20,20,20,125,20,20,125,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,125,20,252,20,20,20,20,20,125,20,20,20,20,20,20,125,20,20,20,125,20,20,20,125,252,20,20,20,20,20,125,20,20,20,20,125,252,20,]),'range_enumeration':([77,],[158,]),'step_value':([266,],[301,]),'binop':([7,18,21,59,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[58,58,58,58,58,58,58,58,58,58,58,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'character_mode':([45,91,124,183,193,224,243,264,287,288,308,331,332,],[112,112,112,112,112,112,112,112,112,112,112,112,112,]),'do_action':([0,10,23,41,78,152,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'program':([0,],[29,]),'result_spec':([242,277,],[279,304,]),'start_value':([223,],[266,]),'action':([0,10,23,41,78,152,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[30,30,30,106,30,106,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'parameter_spec':([243,308,],[282,329,]),'newmode_list':([22,],[97,]),'result_action':([0,10,23,41,78,152,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'action_statement_list':([10,155,180,234,],[78,221,236,275,]),'procedure_call':([0,7,10,18,21,23,41,50,54,59,70,71,75,78,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,180,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'then_clause':([95,],[179,]),'while_control':([10,73,],[79,153,]),'primitive_value':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'synonym_statement':([0,23,281,305,307,309,326,327,328,335,],[38,38,38,38,38,38,38,38,38,38,]),'call_action':([0,7,10,18,21,23,41,50,54,59,70,71,75,78,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,180,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[39,67,39,67,67,39,39,67,67,67,67,67,67,39,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,39,39,39,67,67,67,67,67,39,67,67,67,67,67,39,39,67,67,67,39,39,67,67,67,67,67,39,39,39,39,39,39,67,39,]),'declaration_list':([16,],[90,]),'mode':([45,91,124,183,243,287,308,331,],[126,175,194,238,283,313,283,313,]),'boolean_mode':([45,91,124,183,193,224,243,264,287,288,308,331,332,],[127,127,127,127,127,127,127,127,127,127,127,127,127,]),'iteration':([77,],[159,]),'expression_list':([84,149,],[168,218,]),'builtin_call':([0,7,10,18,21,23,41,50,54,59,70,71,75,78,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,180,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'label_id':([0,10,23,78,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[3,72,3,72,72,72,72,72,72,72,3,3,3,3,3,3,3,3,]),'mode_definition':([22,181,],[98,237,]),'step_enumeration':([77,],[156,]),'boolean_expression':([21,59,75,260,291,],[95,148,154,295,317,]),'parameter_list':([94,101,289,],[176,184,176,]),'index_mode':([193,288,332,],[249,314,340,]),'upper_bound':([225,285,],[270,311,]),'procedure_statement':([0,23,281,305,307,309,326,327,328,335,],[9,9,9,9,9,9,9,9,9,9,]),'string_mode':([45,91,124,183,243,287,308,331,],[115,115,115,115,115,115,115,115,]),'exit_action':([0,10,23,41,78,152,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'identifier':([0,4,7,10,16,18,21,22,23,34,41,45,50,54,59,70,71,75,77,78,84,85,91,94,101,108,111,124,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,174,180,181,183,187,192,193,195,196,215,221,223,224,225,227,229,232,234,236,243,258,260,261,264,275,278,281,285,287,288,289,291,300,305,307,308,309,326,327,328,331,332,335,],[13,42,51,13,42,51,51,42,13,103,51,117,51,51,51,51,51,51,160,13,51,51,117,51,51,42,190,117,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,13,42,13,42,117,42,51,250,51,51,51,13,51,269,51,51,51,51,13,13,117,51,51,51,269,13,42,13,51,117,250,51,51,51,13,13,117,13,13,13,13,117,250,13,]),'else_clause':([179,],[235,]),'index_mode_list':([288,],[315,]),'mode_name':([45,91,124,183,243,287,308,331,],[118,118,118,118,118,118,118,118,]),'discrete_mode':([45,91,124,183,193,224,243,264,287,288,308,331,332,],[119,119,119,119,251,268,119,297,119,251,119,119,251,]),'statement':([0,23,281,305,307,309,326,327,328,335,],[15,100,15,15,15,100,15,100,100,100,]),'else_expression':([216,257,],[259,292,]),'synonym_definition':([4,108,],[44,189,]),'identifier_list':([4,16,22,108,174,181,187,278,],[45,91,99,45,91,99,243,243,]),'parenthesized_expression':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'string_length':([191,],[244,]),'statement_list':([0,281,305,307,326,],[23,309,327,328,335,]),'builtin_name':([0,7,10,18,21,23,41,50,54,59,70,71,75,78,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,155,180,192,193,195,196,215,221,223,225,227,229,232,234,236,258,260,261,275,281,285,288,289,291,300,305,307,309,326,327,328,332,335,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'constant_expression':([128,196,],[197,255,]),'composite_mode':([45,91,124,183,243,287,308,331,],[123,123,123,123,123,123,123,123,]),'synonym_list':([4,],[43,]),'if_action':([0,10,23,41,78,152,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'literal_range':([192,193,195,288,289,332,],[247,253,254,253,254,253,]),'expression':([7,18,21,59,71,75,84,85,94,101,128,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[61,93,96,96,151,96,167,169,177,177,198,217,248,248,248,198,256,265,271,272,273,274,293,96,296,271,248,316,96,265,248,]),'operand':([7,18,21,59,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'element_mode':([287,331,],[312,339,]),'discrete_expression':([223,300,],[267,322,]),'action_statement':([0,10,23,78,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[31,74,31,162,74,74,162,74,162,162,31,31,31,31,31,31,31,31,]),'declaration':([16,174,],[92,228,]),'return_action':([0,10,23,41,78,152,155,180,221,234,236,275,281,305,307,309,326,327,328,335,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'loop_counter':([77,],[157,]),'end_value':([266,298,301,323,],[299,321,324,334,]),'array_mode':([45,91,124,183,243,287,308,331,],[121,121,121,121,121,121,121,121,]),'literal':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'conditional_expression':([7,18,21,59,71,75,84,85,94,101,128,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'operand1':([7,18,21,50,59,70,71,75,84,85,94,101,128,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,192,193,195,196,215,223,225,227,229,232,258,260,261,285,288,289,291,300,332,],[66,66,66,130,66,150,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'control_part':([10,],[76,]),'assigning_operator':([14,],[85,]),'then_expression':([148,295,317,],[216,319,333,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
