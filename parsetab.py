
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B0A3187F53D48B97AB8CBF27B33209DC'
    
_lr_action_items = {'DO':([0,1,4,10,12,15,19,25,39,45,47,56,83,97,110,111,113,115,138,163,185,189,230,232,237,239,276,300,321,322,324,332,333,334,340,],[1,1,1,-2,-6,-4,-5,-8,-7,-115,1,-3,-113,1,1,1,-116,-18,-24,-9,1,1,-112,-179,1,1,1,1,1,1,1,1,1,1,1,]),'RETURNS':([271,303,],[299,299,]),'SYN':([0,4,10,12,15,19,25,39,56,83,115,138,163,230,232,300,321,322,324,332,333,334,340,],[2,2,-2,-6,-4,-5,-8,-7,-3,-113,-18,-24,-9,-112,-179,2,2,2,2,2,2,2,2,]),'TYPE':([0,4,10,12,15,19,25,39,56,83,115,138,163,230,232,300,321,322,324,332,333,334,340,],[3,3,-2,-6,-4,-5,-8,-7,-3,-113,-18,-24,-9,-112,-179,3,3,3,3,3,3,3,3,]),'RETURN':([0,1,4,10,12,15,19,25,39,45,47,56,83,97,110,111,113,115,138,163,185,189,230,232,237,239,276,300,321,322,324,332,333,334,340,],[5,5,5,-2,-6,-4,-5,-8,-7,-115,5,-3,-113,5,5,5,-116,-18,-24,-9,5,5,-112,-179,5,5,5,5,5,5,5,5,5,5,5,]),'LBRACKET':([7,13,14,20,27,29,58,61,63,64,65,68,69,70,72,74,75,77,78,79,80,93,124,129,142,180,182,203,228,234,235,255,260,296,315,],[-17,-159,-60,90,-56,-160,-74,-67,-71,-69,-60,144,-66,-77,-65,-70,-56,90,-68,-72,-73,-58,194,197,90,-170,-162,-78,-59,-169,-161,-56,-75,-57,-76,]),'MINUS':([5,7,13,14,20,27,29,33,37,42,57,58,61,63,64,65,67,69,70,71,72,74,75,76,77,78,79,80,81,82,87,89,90,93,99,101,117,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,180,182,186,196,197,198,199,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,225,227,228,229,233,234,235,255,259,260,262,263,278,285,286,288,292,296,315,327,],[59,-17,-159,-60,91,-56,-160,59,59,59,-107,-74,-67,-71,-69,-60,59,-66,-110,-109,-65,-70,-56,153,-108,-68,-72,-73,59,-88,-131,59,59,-58,59,59,59,-105,-111,59,-106,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-125,-126,-128,-129,-130,-127,-170,-162,59,59,59,59,59,-78,153,153,153,-97,-101,-99,153,-98,153,153,153,153,153,153,153,-100,59,59,59,-59,59,59,-169,-161,-56,59,-75,59,59,59,59,59,59,59,-57,-76,59,]),'THEN':([7,13,29,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,102,103,141,142,145,162,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,260,294,295,296,315,316,317,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,-83,185,-105,-111,-106,223,-170,-162,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,-75,223,-81,-57,-76,-82,223,]),'$end':([4,10,12,15,19,25,31,39,56,83,115,138,163,230,232,],[-1,-2,-6,-4,-5,-8,0,-7,-3,-113,-18,-24,-9,-112,-179,]),'READ':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[24,24,24,24,-2,-6,-4,-5,-8,24,24,-7,24,-115,24,-3,24,24,24,24,24,-113,-131,24,24,24,24,24,24,24,-116,-18,24,-24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-9,-125,-126,-128,-129,-130,-127,24,24,24,24,24,24,24,24,24,24,24,-112,-179,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'ID':([0,1,2,3,4,5,7,10,12,15,16,19,23,25,33,37,39,41,42,45,47,49,52,56,59,62,67,73,81,83,85,87,89,90,97,99,101,110,111,113,115,116,117,127,136,138,139,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,171,172,173,174,175,185,186,187,189,196,197,198,199,200,223,225,227,229,230,231,232,233,237,239,245,259,262,263,270,276,278,285,286,287,288,292,300,302,320,321,322,324,327,328,332,333,334,340,],[7,7,7,7,7,7,-17,-2,-6,-4,7,-5,7,-8,7,7,-7,7,7,-115,7,-15,7,-3,7,7,7,7,7,-113,7,-131,7,7,7,7,7,7,7,-116,-18,7,7,7,7,-24,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-9,7,-125,-126,-128,-129,-130,-127,7,7,7,7,7,7,7,7,-16,7,7,7,7,-112,7,-179,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NEQ':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,157,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,157,-91,-97,-101,-99,157,-98,157,157,-93,-92,157,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'WHILE':([1,7,13,29,46,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,104,106,107,120,121,122,133,134,135,137,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,242,243,260,277,282,284,289,295,296,304,305,308,315,316,326,],[42,-17,-159,-160,42,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,-144,-145,-146,-33,-35,-38,-32,-34,-37,-36,-105,-111,-106,-170,-162,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,-155,-157,-75,-150,-156,-39,-40,-81,-57,-154,-149,-148,-76,-82,-147,]),'LENGTH':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[8,8,8,8,-2,-6,-4,-5,-8,8,8,-7,8,-115,8,-3,8,8,8,8,8,-113,-131,8,8,8,8,8,8,8,-116,-18,8,-24,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-9,-125,-126,-128,-129,-130,-127,8,8,8,8,8,8,8,8,8,8,8,-112,-179,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'PRED':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[30,30,30,30,-2,-6,-4,-5,-8,30,30,-7,30,-115,30,-3,30,30,30,30,30,-113,-131,30,30,30,30,30,30,30,-116,-18,30,-24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-9,-125,-126,-128,-129,-130,-127,30,30,30,30,30,30,30,30,30,30,30,-112,-179,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'END':([10,12,15,19,25,39,56,83,115,138,163,230,232,321,332,333,340,],[-2,-6,-4,-5,-8,-7,-3,-113,-18,-24,-9,-112,-179,331,338,339,341,]),'REF':([7,49,52,85,127,140,200,270,287,320,328,],[-17,-15,127,127,127,127,-16,127,127,127,127,]),'LT':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,160,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,160,160,-97,-101,-99,160,-98,160,160,-93,160,160,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'SUCC':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[11,11,11,11,-2,-6,-4,-5,-8,11,11,-7,11,-115,11,-3,11,11,11,11,11,-113,-131,11,11,11,11,11,11,11,-116,-18,11,-24,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-9,-125,-126,-128,-129,-130,-127,11,11,11,11,11,11,11,11,11,11,11,-112,-179,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FI':([7,13,29,45,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,83,93,113,141,142,145,180,182,184,185,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,230,234,235,236,237,239,260,264,276,291,293,295,296,315,316,],[-17,-159,-160,-115,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-113,-58,-116,-105,-111,-106,-170,-162,238,-135,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-112,-169,-161,275,-137,-134,-75,295,-136,316,-85,-81,-57,-76,-82,]),'TRUE':([5,33,37,42,59,67,73,81,87,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[63,63,63,63,63,63,63,63,-131,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-125,-126,-128,-129,-130,-127,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'EQ':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,148,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,148,-91,-97,-101,-99,148,-98,148,148,-93,-92,148,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'PLUS':([7,13,14,20,27,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-60,88,-56,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,149,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,149,149,149,-97,-101,-99,149,-98,149,149,149,149,149,149,149,-100,-59,-169,-161,-56,-75,-57,-76,]),'MOD':([7,13,14,20,27,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-60,94,-56,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,150,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,150,150,150,150,-101,-99,150,150,150,150,150,150,150,150,150,-100,-59,-169,-161,-56,-75,-57,-76,]),'DCL':([0,4,10,12,15,19,25,39,56,83,115,138,163,230,232,300,321,322,324,332,333,334,340,],[16,16,-2,-6,-4,-5,-8,-7,-3,-113,-18,-24,-9,-112,-179,16,16,16,16,16,16,16,16,]),'UPPER':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[17,17,17,17,-2,-6,-4,-5,-8,17,17,-7,17,-115,17,-3,17,17,17,17,17,-113,-131,17,17,17,17,17,17,17,-116,-18,17,-24,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-9,-125,-126,-128,-129,-130,-127,17,17,17,17,17,17,17,17,17,17,17,-112,-179,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LPAREN':([5,6,7,8,11,17,22,24,27,28,30,33,35,37,38,42,59,67,73,75,81,87,89,90,99,101,117,120,121,122,123,128,132,133,134,135,137,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,177,186,196,197,198,199,223,225,227,229,233,243,244,254,255,256,259,262,263,278,282,284,285,286,288,289,292,299,327,],[67,-175,-17,-176,-173,-174,-171,-177,-42,99,-172,67,101,67,-178,67,67,67,67,-42,67,-131,67,67,67,67,67,-33,-35,-38,-42,196,199,-32,-34,-37,-36,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-125,-126,-128,-129,-130,-127,231,67,67,67,67,67,67,67,67,67,67,199,-42,199,-42,288,67,67,67,67,199,-39,67,67,67,-40,67,320,67,]),'LOWER':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[6,6,6,6,-2,-6,-4,-5,-8,6,6,-7,6,-115,6,-3,6,6,6,6,6,-113,-131,6,6,6,6,6,6,6,-116,-18,6,-24,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-9,-125,-126,-128,-129,-130,-127,6,6,6,6,6,6,6,6,6,6,6,-112,-179,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'COLON':([7,13,21,27,29,43,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,168,170,180,182,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,250,251,255,260,295,296,314,315,316,],[-17,-159,97,-114,-160,110,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,-105,-111,-106,-61,229,-170,-162,-78,259,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,-61,285,-56,-75,-81,-57,-61,-76,-82,]),'IN':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,105,108,141,142,145,180,182,188,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,158,-108,-68,-72,-73,-88,-58,187,-151,-105,-111,-106,-170,-162,245,-78,-94,158,-91,-97,-101,-99,-89,-98,-90,158,-93,-92,-103,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'LOC':([7,118,119,120,121,122,123,125,126,130,132,133,134,135,137,195,283,284,289,298,312,313,336,],[-17,-45,-30,-33,-35,-38,-41,-28,-46,-31,-29,-32,-34,-37,-36,-44,-47,-39,-40,319,-49,-55,-50,]),'NOT':([5,7,13,29,33,37,42,57,58,61,63,64,65,67,69,70,71,72,74,75,76,77,78,79,80,81,82,87,89,90,93,99,101,117,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,180,182,186,196,197,198,199,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,225,227,228,229,233,234,235,255,259,260,262,263,278,285,286,288,292,296,315,327,],[73,-17,-159,-160,73,73,73,-107,-74,-67,-71,-69,-60,73,-66,-110,-109,-65,-70,-56,147,-108,-68,-72,-73,73,-88,-131,73,73,-58,73,73,73,-105,-111,73,-106,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-125,-126,-128,-129,-130,-127,-170,-162,73,73,73,73,73,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,147,-93,-92,-103,-96,-95,-100,73,73,73,-59,73,73,-169,-161,-56,73,-75,73,73,73,73,73,73,73,-57,-76,73,]),'NUM':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[22,22,22,22,-2,-6,-4,-5,-8,22,22,-7,22,-115,22,-3,22,22,22,22,22,-113,-131,22,22,22,22,22,22,22,-116,-18,22,-24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-9,-125,-126,-128,-129,-130,-127,22,22,22,22,22,22,22,22,22,22,22,-112,-179,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'COMMA':([7,13,29,49,50,51,52,53,54,55,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,84,85,86,93,118,119,120,121,122,123,125,126,130,132,133,134,135,137,141,142,145,165,168,169,179,180,181,182,183,191,192,193,195,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,226,228,234,235,252,253,254,257,260,266,267,268,270,272,273,274,283,284,289,295,296,297,298,309,310,311,312,313,314,315,316,319,323,335,336,],[-17,-159,-160,-15,116,-19,136,139,-25,136,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,164,136,-10,-58,-45,-30,-33,-35,-38,-41,-28,-46,-31,-29,-32,-34,-37,-36,-105,-111,-106,-13,-63,227,-163,-170,233,-162,233,-20,-23,-22,-44,-16,-26,-27,-78,-63,227,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-11,-12,-59,-169,-161,-54,286,-53,-21,-75,-14,-64,-62,136,302,-184,-164,-47,-39,-40,-81,-57,-186,-189,-43,-51,327,-49,-55,-163,-76,-82,-188,-185,-52,-50,]),'PROC':([97,],[177,]),'NULL':([5,33,37,42,59,67,73,81,87,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[80,80,80,80,80,80,80,80,-131,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-125,-126,-128,-129,-130,-127,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'ICONST':([5,33,37,42,59,67,73,81,87,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,186,194,196,197,198,199,223,225,227,229,233,259,262,263,278,280,285,286,288,292,327,],[64,64,64,64,64,64,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-125,-126,-128,-129,-130,-127,64,248,64,64,64,64,64,64,64,64,64,64,64,64,64,307,64,64,64,64,64,]),'OD':([45,47,83,111,113,189,230,],[-115,114,-113,190,-116,246,-112,]),'GE':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,146,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,146,146,-97,-101,-99,146,-98,146,146,-93,146,146,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'ASSIGN':([7,13,14,20,27,29,49,52,55,75,88,91,92,93,94,95,96,105,108,118,119,120,121,122,123,125,126,130,131,132,133,134,135,137,165,180,182,195,200,228,234,235,283,284,289,296,312,313,336,],[-17,-159,-60,87,-56,-160,-15,117,140,-56,166,171,172,-58,173,174,175,186,-151,-45,-30,-33,-35,-38,-41,-28,-46,-31,198,-29,-32,-34,-37,-36,225,-170,-162,-44,-16,-59,-169,-161,-47,-39,-40,-57,-49,-55,-50,]),'BOOL':([7,49,52,85,127,140,187,197,200,245,270,286,287,320,327,328,],[-17,-15,135,135,135,135,135,135,-16,135,135,135,135,135,135,135,]),'ELSE':([7,13,29,45,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,83,93,113,141,142,145,180,182,184,185,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,228,230,234,235,239,260,261,265,295,296,315,316,318,329,],[-17,-159,-160,-115,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-113,-58,-116,-105,-111,-106,-170,-162,237,-135,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,262,-59,-112,-169,-161,-134,-75,262,-84,-81,-57,-76,-82,-86,-87,]),'FALSE':([5,33,37,42,59,67,73,81,87,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[74,74,74,74,74,74,74,74,-131,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-125,-126,-128,-129,-130,-127,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'FOR':([1,],[41,]),'TIMES':([7,13,14,20,27,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-60,96,-56,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,151,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,151,151,151,151,-101,-99,151,151,151,151,151,151,151,151,151,-100,-59,-169,-161,-56,-75,-57,-76,]),'TO':([7,13,29,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,240,241,242,260,279,281,295,296,306,307,315,316,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,-152,278,-155,-75,278,278,-81,-57,278,-153,-76,-82,]),'RPAREN':([7,13,29,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,99,101,118,119,120,121,122,123,125,126,130,132,133,134,135,137,141,142,143,145,179,180,181,182,183,195,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,231,234,235,249,258,260,268,272,273,274,283,284,288,289,295,296,297,298,309,312,313,314,315,316,319,323,330,336,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,180,182,-45,-30,-33,-35,-38,-41,-28,-46,-31,-29,-32,-34,-37,-36,-105,-111,203,-106,-163,-170,234,-162,235,-44,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,271,-169,-161,284,289,-75,-62,303,-184,-164,-47,-39,182,-40,-81,-57,-186,-189,-43,-49,-55,-163,-76,-82,-188,-185,337,-50,]),'CONCAT':([7,13,14,20,27,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-60,95,-56,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,155,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'CHARS':([7,49,52,85,127,140,200,270,287,320,328,],[-17,-15,124,124,124,124,-16,124,124,124,124,]),'ELSIF':([7,13,29,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,228,234,235,260,261,265,295,296,315,316,318,329,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,263,-59,-169,-161,-75,292,-84,-81,-57,-76,-82,-86,-87,]),'CHAR':([7,49,52,85,127,140,187,197,200,245,270,286,287,320,327,328,],[-17,-15,122,122,122,122,122,122,-16,122,122,122,122,122,122,122,]),'CCONST':([5,33,37,42,59,67,73,81,87,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[79,79,79,79,79,79,79,79,-131,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-125,-126,-128,-129,-130,-127,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'ARRAY':([7,49,52,85,127,140,200,270,287,320,328,],[-17,-15,129,129,129,129,-16,129,129,129,129,]),'RESULT':([0,1,4,10,12,15,19,25,39,45,47,56,83,97,110,111,113,115,138,163,185,189,230,232,237,239,276,300,321,322,324,332,333,334,340,],[33,33,33,-2,-6,-4,-5,-8,-7,-115,33,-3,-113,33,33,33,-116,-18,-24,-9,33,33,-112,-179,33,33,33,33,33,33,33,33,33,33,33,]),'EXIT':([0,1,4,10,12,15,19,25,39,45,47,56,83,97,110,111,113,115,138,163,185,189,230,232,237,239,276,300,321,322,324,332,333,334,340,],[23,23,23,-2,-6,-4,-5,-8,-7,-115,23,-3,-113,23,23,23,-116,-18,-24,-9,23,23,-112,-179,23,23,23,23,23,23,23,23,23,23,23,]),'OR':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,154,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,154,-91,-97,-101,-99,-89,-98,-90,154,-93,-92,154,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'SEMI':([5,7,9,13,14,18,26,29,32,34,36,40,44,46,48,50,51,53,54,57,58,60,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,84,86,93,98,100,102,104,106,107,109,112,114,118,119,120,121,122,123,125,126,130,132,133,134,135,137,141,142,145,165,167,176,178,180,182,190,191,192,193,195,201,202,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,226,228,234,235,238,242,243,246,257,260,266,271,275,277,282,283,284,289,295,296,301,303,304,305,308,312,313,315,316,325,326,331,336,337,338,339,341,],[-167,-17,83,-159,-120,-121,-123,-160,-119,-118,-117,-122,111,-142,-143,115,-19,138,-25,-107,-74,-166,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,163,-10,-58,-165,-168,-83,-144,-145,-146,-158,-141,-140,-45,-30,-33,-35,-38,-41,-28,-46,-31,-29,-32,-34,-37,-36,-105,-111,-106,-13,-124,230,232,-170,-162,-139,-20,-23,-22,-44,-26,-27,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-11,-12,-59,-169,-161,-133,-155,-157,-138,-21,-75,-14,300,-132,-150,-156,-47,-39,-40,-81,-57,322,324,-154,-149,-148,-49,-55,-76,-82,334,-147,-183,-50,-187,-182,-181,-180,]),'ARROW':([5,7,13,14,20,27,29,33,37,42,59,65,67,73,75,77,81,87,89,90,93,99,101,117,142,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,180,182,186,196,197,198,199,223,225,227,228,229,233,234,235,255,259,262,263,278,285,286,288,292,296,327,],[62,-17,-159,-60,93,-56,-160,62,62,62,62,-60,62,62,-56,93,62,-131,62,62,-58,62,62,62,93,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-125,-126,-128,-129,-130,-127,-170,-162,62,62,62,62,62,62,62,62,-59,62,62,-169,-161,-56,62,62,62,62,62,62,62,62,-57,62,]),'AND':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,152,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,152,-91,-97,-101,-99,-89,-98,152,152,-93,-92,152,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'DOWN':([7,13,29,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,105,108,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,240,241,242,260,279,295,296,307,315,316,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,188,-151,-105,-111,-106,-170,-162,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,-152,281,-155,-75,306,-81,-57,-153,-76,-82,]),'BY':([7,13,29,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,240,241,242,260,295,296,315,316,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,-152,280,-155,-75,-81,-57,-76,-82,]),'IF':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,67,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[37,37,37,81,-2,-6,-4,-5,-8,81,81,-7,81,-115,37,-3,81,81,-113,-131,81,81,37,81,81,37,37,-116,-18,81,-24,81,-9,-125,-126,-128,-129,-130,-127,37,81,37,81,81,81,81,81,81,81,81,-112,-179,81,37,37,81,81,81,37,81,81,81,81,81,37,37,37,37,81,37,37,37,37,]),'PRINT':([0,1,4,5,10,12,15,19,25,33,37,39,42,45,47,56,59,62,67,73,81,83,87,89,90,97,99,101,110,111,113,115,117,138,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,166,171,172,173,174,175,185,186,189,196,197,198,199,223,225,227,229,230,232,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[38,38,38,38,-2,-6,-4,-5,-8,38,38,-7,38,-115,38,-3,38,38,38,38,38,-113,-131,38,38,38,38,38,38,38,-116,-18,38,-24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-9,-125,-126,-128,-129,-130,-127,38,38,38,38,38,38,38,38,38,38,38,-112,-179,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DIVIDE':([7,13,14,20,27,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-60,92,-56,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,161,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,161,161,161,161,-101,-99,161,161,161,161,161,161,161,161,161,-100,-59,-169,-161,-56,-75,-57,-76,]),'RBRACKET':([7,13,29,57,58,61,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,82,93,120,121,122,133,134,135,137,141,142,145,168,169,180,182,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,247,248,252,253,254,260,267,268,269,284,289,290,295,296,309,310,311,315,316,335,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-80,-66,-110,-109,-65,-70,-56,-79,-108,-68,-72,-73,-88,-58,-33,-35,-38,-32,-34,-37,-36,-105,-111,-106,-63,228,-170,-162,-78,-63,260,-94,-102,-91,-97,-101,-99,-89,-98,-90,-104,-93,-92,-103,-96,-95,-100,-59,-169,-161,283,-48,-54,287,-53,-75,-64,-62,296,-39,-40,315,-81,-57,-43,-51,328,-76,-82,-52,]),'SCONST':([5,33,37,42,59,67,73,81,87,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,171,172,173,174,175,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[58,58,58,58,58,58,58,58,-131,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-125,-126,-128,-129,-130,-127,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'LE':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,159,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,159,159,-97,-101,-99,159,-98,159,159,-93,159,159,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'GT':([7,13,29,57,58,61,63,64,65,69,70,71,72,74,75,76,77,78,79,80,82,93,141,142,145,180,182,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,234,235,255,260,296,315,],[-17,-159,-160,-107,-74,-67,-71,-69,-60,-66,-110,-109,-65,-70,-56,156,-108,-68,-72,-73,-88,-58,-105,-111,-106,-170,-162,-78,-94,156,156,-97,-101,-99,156,-98,156,156,-93,156,156,-96,-95,-100,-59,-169,-161,-56,-75,-57,-76,]),'INT':([7,49,52,85,127,140,187,197,200,245,270,286,287,320,327,328,],[-17,-15,137,137,137,137,137,137,-16,137,137,137,137,137,137,137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mode_name':([52,85,127,140,270,287,320,328,],[125,125,125,125,125,125,125,125,]),'reference_mode':([52,85,127,140,270,287,320,328,],[119,119,119,119,119,119,119,119,]),'assigning_operator':([20,],[89,]),'string_length':([194,],[247,]),'end_value':([241,279,281,306,],[277,305,308,326,]),'expression':([5,33,37,42,67,81,89,90,99,101,117,144,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[60,100,102,102,143,102,167,168,179,179,192,204,242,250,250,192,250,265,266,267,268,274,290,293,102,242,268,250,314,102,250,]),'value_array_slice':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'array_mode':([52,85,127,140,270,287,320,328,],[126,126,126,126,126,126,126,126,]),'action':([0,1,4,47,97,110,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[9,9,9,9,176,176,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'statement':([0,4,300,321,322,324,332,333,334,340,],[10,56,10,56,10,10,56,56,10,56,]),'elsif_expression':([222,],[261,]),'call_action':([0,1,4,5,33,37,42,47,59,62,67,73,81,89,90,97,99,101,110,111,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,185,186,189,196,197,198,199,223,225,227,229,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[14,14,14,65,65,65,65,14,65,65,65,65,65,65,65,14,65,65,14,14,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,14,65,14,65,65,65,65,65,65,65,65,65,14,14,65,65,65,14,65,65,65,65,65,14,14,14,14,65,14,14,14,14,]),'identifier_list':([2,3,16,116,139,164,231,302,],[52,55,85,52,55,85,270,270,]),'discrete_mode':([52,85,127,140,187,197,245,270,286,287,320,327,328,],[132,132,132,132,243,254,282,132,254,132,132,254,132,]),'else_clause':([184,],[236,]),'label_id':([0,1,4,47,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[21,43,21,43,43,43,43,43,43,43,21,21,21,21,21,21,21,21,]),'start_value':([186,],[241,]),'else_expression':([222,261,],[264,291,]),'assignment_action':([0,1,4,47,97,110,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'referenced_location':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'procedure_statement':([0,4,300,321,322,324,332,333,334,340,],[39,39,39,39,39,39,39,39,39,39,]),'literal':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'for_control':([1,],[46,]),'identifier':([0,1,2,3,4,5,16,23,33,37,41,42,47,52,59,62,67,73,81,85,89,90,97,99,101,110,111,116,117,127,136,139,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,185,186,187,189,196,197,198,199,223,225,227,229,231,233,237,239,245,259,262,263,270,276,278,285,286,287,288,292,300,302,320,321,322,324,327,328,332,333,334,340,],[27,27,49,49,27,75,49,98,75,75,108,75,27,123,75,75,75,75,75,123,75,75,75,75,75,75,27,49,75,123,200,49,123,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,49,27,75,244,27,75,255,75,75,75,75,75,75,49,75,27,27,244,75,75,75,123,27,75,75,255,123,75,75,27,49,123,27,27,27,255,123,27,27,27,27,]),'binop':([5,33,37,42,67,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[76,76,76,76,76,76,76,76,76,76,76,76,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'action_statement_list':([1,111,185,237,],[47,189,239,276,]),'program':([0,],[31,]),'array_primitive_value':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'procedure_call':([0,1,4,5,33,37,42,47,59,62,67,73,81,89,90,97,99,101,110,111,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,185,186,189,196,197,198,199,223,225,227,229,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'parameter_spec':([270,320,],[297,330,]),'declaration_list':([16,],[84,]),'character_mode':([52,85,127,140,187,197,245,270,286,287,320,327,328,],[134,134,134,134,134,134,134,134,134,134,134,134,134,]),'then_expression':([162,294,317,],[222,318,329,]),'integer_mode':([52,85,127,140,187,197,245,270,286,287,320,327,328,],[133,133,133,133,133,133,133,133,133,133,133,133,133,]),'if_action':([0,1,4,47,97,110,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'loop_counter':([41,],[105,]),'parameter_list':([99,101,288,],[181,183,183,]),'newmode_statement':([0,4,300,321,322,324,332,333,334,340,],[12,12,12,12,12,12,12,12,12,12,]),'procedure_definition':([97,],[178,]),'return_action':([0,1,4,47,97,110,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'operand1':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[57,57,57,57,141,57,145,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'string_mode':([52,85,127,140,270,287,320,328,],[118,118,118,118,118,118,118,118,]),'statement_list':([0,300,322,324,334,],[4,321,332,333,340,]),'discrete_expression':([186,278,],[240,304,]),'boolean_mode':([52,85,127,140,187,197,245,270,286,287,320,327,328,],[120,120,120,120,120,120,120,120,120,120,120,120,120,]),'newmode_list':([3,],[53,]),'do_action':([0,1,4,47,97,110,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'formal_parameter_list':([231,],[272,]),'range_enumeration':([41,],[107,]),'synonym_definition':([2,116,],[51,191,]),'index_mode':([197,286,327,],[253,310,335,]),'result_spec':([271,303,],[301,325,]),'constant_expression':([117,198,],[193,257,]),'literal_range':([196,197,199,286,288,327,],[249,252,258,252,249,252,]),'declaration_statement':([0,4,300,321,322,324,332,333,334,340,],[15,15,15,15,15,15,15,15,15,15,]),'mode':([52,85,127,140,270,287,320,328,],[131,165,195,202,298,313,298,313,]),'step_value':([241,],[279,]),'conditional_expression':([5,33,37,42,67,81,89,90,99,101,117,144,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'exit_action':([0,1,4,47,97,110,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'mode_definition':([3,139,],[54,201,]),'synonym_statement':([0,4,300,321,322,324,332,333,334,340,],[19,19,19,19,19,19,19,19,19,19,]),'lower_bound':([90,196,197,199,286,288,327,],[170,251,251,251,251,251,251,]),'control_part':([1,],[44,]),'expression_list':([90,144,],[169,205,]),'value_array_element':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'then_clause':([103,],[184,]),'primitive_value':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'iteration':([41,],[104,]),'synonym_list':([2,],[50,]),'index_mode_list':([286,],[311,]),'action_statement':([0,1,4,47,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[25,45,25,113,45,45,113,45,113,113,25,25,25,25,25,25,25,25,]),'discrete_range_mode':([52,85,127,140,187,197,245,270,286,287,320,327,328,],[121,121,121,121,121,121,121,121,121,121,121,121,121,]),'declaration':([16,164,],[86,224,]),'parenthesized_expression':([5,33,37,42,59,67,73,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'builtin_name':([0,1,4,5,33,37,42,47,59,62,67,73,81,89,90,97,99,101,110,111,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,185,186,189,196,197,198,199,223,225,227,229,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'builtin_call':([0,1,4,5,33,37,42,47,59,62,67,73,81,89,90,97,99,101,110,111,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,185,186,189,196,197,198,199,223,225,227,229,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'initialization':([165,],[226,]),'location':([0,1,4,5,33,37,42,47,59,62,67,73,81,89,90,97,99,101,110,111,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,185,186,189,196,197,198,199,223,225,227,229,233,237,239,259,262,263,276,278,285,286,288,292,300,321,322,324,327,332,333,334,340,],[20,20,20,77,77,77,77,20,77,142,77,77,77,77,77,20,77,77,20,20,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,20,77,20,77,77,77,77,77,77,77,77,77,20,20,77,77,77,20,77,77,77,77,77,20,20,20,20,77,20,20,20,20,]),'element_mode':([287,328,],[312,336,]),'result_action':([0,1,4,47,97,110,111,185,189,237,239,276,300,321,322,324,332,333,334,340,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'composite_mode':([52,85,127,140,270,287,320,328,],[130,130,130,130,130,130,130,130,]),'discrete_mode_name':([0,1,4,5,33,37,42,47,52,59,62,67,73,81,85,89,90,97,99,101,110,111,117,127,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,185,186,187,189,196,197,198,199,223,225,227,229,233,237,239,245,259,262,263,270,276,278,285,286,287,288,292,300,320,321,322,324,327,328,332,333,334,340,],[35,35,35,35,35,35,35,35,128,35,35,35,35,35,128,35,35,35,35,35,35,35,35,128,128,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,128,35,35,256,35,35,35,35,35,35,35,35,35,128,35,35,35,128,35,35,35,256,128,35,35,35,128,35,35,35,256,128,35,35,35,35,]),'boolean_expression':([37,42,81,263,292,],[103,109,162,294,317,]),'while_control':([1,46,],[48,112,]),'step_enumeration':([41,],[106,]),'formal_parameter':([231,302,],[273,323,]),'operand':([5,33,37,42,67,81,89,90,99,101,117,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,196,197,198,199,223,225,227,229,233,259,262,263,278,285,286,288,292,327,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'upper_bound':([229,285,],[269,309,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
