
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1786C3D788936C7E435F74925CC18FA9'
    
_lr_action_items = {'SYN':([0,6,7,19,21,24,26,35,45,80,126,132,164,226,228,295,317,318,319,329,330,331,337,],[1,-7,1,-2,-5,-6,-8,-4,-3,-113,-18,-9,-24,-179,-112,1,1,1,1,1,1,1,1,]),'LPAREN':([2,3,5,8,9,10,13,14,17,22,23,28,34,36,40,46,50,54,59,63,70,79,88,97,100,101,106,108,109,113,114,115,116,120,121,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,158,176,177,178,180,181,185,186,187,188,189,197,198,225,233,237,239,240,241,246,254,259,260,267,268,277,278,280,281,282,285,296,299,302,327,],[-176,-175,-178,46,-173,-174,50,50,79,-171,-177,-172,-17,50,-42,50,50,-42,50,50,50,50,50,50,-131,50,187,-33,-34,-42,189,-37,-36,-32,-38,50,-35,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,227,-127,-130,-128,-126,-125,-129,50,50,50,50,50,50,50,50,50,50,187,277,-42,50,50,50,187,-42,50,50,50,-40,-39,50,320,50,187,50,]),'UPPER':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[10,-7,10,10,10,-2,-5,-6,-8,10,-4,10,-3,10,10,10,10,10,10,10,10,-113,10,-115,10,10,-131,10,10,-18,-9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-24,10,-116,10,-127,-130,-128,-126,-125,-129,10,10,10,10,10,10,10,10,10,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LENGTH':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[2,-7,2,2,2,-2,-5,-6,-8,2,-4,2,-3,2,2,2,2,2,2,2,2,-113,2,-115,2,2,-131,2,2,-18,-9,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-24,2,-116,2,-127,-130,-128,-126,-125,-129,2,2,2,2,2,2,2,2,2,-179,-112,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOWER':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[3,-7,3,3,3,-2,-5,-6,-8,3,-4,3,-3,3,3,3,3,3,3,3,3,-113,3,-115,3,3,-131,3,3,-18,-9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-24,3,-116,3,-127,-130,-128,-126,-125,-129,3,3,3,3,3,3,3,3,3,-179,-112,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'REF':([34,41,43,47,119,162,191,263,279,320,326,],[-17,119,-15,119,119,119,-16,119,119,119,119,]),'RBRACKET':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,103,108,109,115,116,120,121,124,129,154,155,156,161,183,184,196,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,240,243,245,250,251,255,274,275,276,281,282,284,289,303,305,308,309,310,312,336,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-58,-33,-34,-37,-36,-32,-38,-35,-170,-106,-105,-111,-162,-63,238,-169,-78,-63,255,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-53,-54,279,283,-48,-75,-62,303,-64,-40,-39,310,-81,-57,-43,326,-51,-76,-82,-52,]),'PRINT':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[5,-7,5,5,5,-2,-5,-6,-8,5,-4,5,-3,5,5,5,5,5,5,5,5,-113,5,-115,5,5,-131,5,5,-18,-9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-24,5,-116,5,-127,-130,-128,-126,-125,-129,5,5,5,5,5,5,5,5,5,-179,-112,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'BY':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,255,269,270,271,289,303,310,312,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-75,-152,297,-155,-81,-57,-76,-82,]),'CHAR':([34,41,43,47,119,162,186,191,232,263,272,279,280,320,326,327,],[-17,121,-15,121,121,121,121,-16,121,121,121,121,121,121,121,121,]),'THEN':([4,34,39,51,52,54,55,56,57,58,60,61,62,64,65,66,67,68,69,72,73,74,75,76,103,129,153,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,255,287,289,303,310,311,312,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,151,-60,-83,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-58,-170,225,-106,-105,-111,-162,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-75,225,-81,-57,-76,225,-82,]),'LBRACKET':([4,18,34,38,39,40,51,53,54,56,60,62,64,65,66,67,68,69,73,75,76,103,105,117,129,156,161,196,201,229,238,246,255,303,310,],[-159,-60,-17,101,-160,-56,-77,134,-56,-73,-60,-71,-74,-68,-70,-72,-65,-66,-67,-69,101,-58,186,190,-170,101,-162,-169,-78,-161,-59,-56,-75,-57,-76,]),'ARRAY':([34,41,43,47,119,162,191,263,279,320,326,],[-17,105,-15,105,105,105,-16,105,105,105,105,]),'$end':([6,7,15,19,21,24,26,35,45,80,126,132,164,226,228,],[-7,-1,0,-2,-5,-6,-8,-4,-3,-113,-18,-9,-24,-179,-112,]),'LT':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,148,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,148,148,148,-100,-93,-98,148,148,148,148,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'PROC':([78,],[158,]),'LOC':([34,104,106,107,108,109,110,111,113,115,116,120,121,122,124,192,281,282,283,290,306,307,335,],[-17,-30,-29,-45,-33,-34,-46,-31,-41,-37,-36,-32,-38,-28,-35,-44,-40,-39,-47,314,-55,-49,-50,]),'AND':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,135,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,-89,135,135,-100,-93,-98,135,135,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'NULL':([13,14,36,46,50,59,63,70,79,88,97,100,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,176,177,178,180,181,185,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[56,56,56,56,56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-127,-130,-128,-126,-125,-129,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DCL':([0,6,7,19,21,24,26,35,45,80,126,132,164,226,228,295,317,318,319,329,330,331,337,],[12,-7,12,-2,-5,-6,-8,-4,-3,-113,-18,-9,-24,-179,-112,12,12,12,12,12,12,12,12,]),'CHARS':([34,41,43,47,119,162,191,263,279,320,326,],[-17,117,-15,117,117,117,-16,117,117,117,117,]),'ICONST':([13,14,36,46,50,59,63,70,79,88,97,100,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,176,177,178,180,181,185,186,187,188,189,190,197,198,225,233,237,239,254,259,260,277,278,280,285,297,299,327,],[75,75,75,75,75,75,75,75,75,75,75,-131,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-127,-130,-128,-126,-125,-129,75,75,75,75,251,75,75,75,75,75,75,75,75,75,75,75,75,75,321,75,75,]),'RESULT':([0,6,7,19,21,24,26,32,35,45,78,80,89,90,126,132,151,164,170,173,175,220,221,226,228,236,256,295,317,318,319,329,330,331,337,],[14,-7,14,-2,-5,-6,-8,14,-4,-3,14,-113,-115,14,-18,-9,14,-24,14,-116,14,14,14,-179,-112,14,14,14,14,14,14,14,14,14,14,]),'RPAREN':([4,34,39,46,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,79,103,104,106,107,108,109,110,111,113,115,116,120,121,122,124,127,128,129,133,154,155,156,160,161,192,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,227,229,238,247,249,252,255,264,265,274,277,281,282,283,289,290,291,303,304,305,306,307,310,312,314,315,333,335,],[-159,-17,-160,129,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,161,-58,-30,-29,-45,-33,-34,-46,-31,-41,-37,-36,-32,-38,-28,-35,196,-163,-170,201,-106,-105,-111,229,-162,-44,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,266,-161,-59,281,282,-164,-75,-184,293,-62,161,-40,-39,-47,-81,-189,-186,-57,-163,-43,-55,-49,-76,-82,-188,-185,340,-50,]),'IF':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,78,79,80,88,89,90,97,100,101,123,126,132,134,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[13,-7,13,59,59,-2,-5,-6,-8,13,-4,59,-3,59,59,59,13,59,-113,59,-115,13,59,-131,59,59,-18,-9,59,13,-24,13,-116,13,-127,-130,-128,-126,-125,-129,59,59,59,59,59,59,13,13,59,-179,-112,59,13,59,59,59,13,59,59,59,59,59,59,13,59,13,13,13,59,13,13,13,13,]),'BOOL':([34,41,43,47,119,162,186,191,232,263,272,279,280,320,326,327,],[-17,115,-15,115,115,115,115,-16,115,115,115,115,115,115,115,115,]),'DIVIDE':([4,18,34,38,39,40,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-60,-17,96,-160,-56,-110,-107,-56,-88,-73,138,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,138,138,138,-100,138,138,138,138,138,138,138,138,-99,138,138,-101,-161,-59,-56,-75,-57,-76,]),'LE':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,146,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,146,146,146,-100,-93,-98,146,146,146,146,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'SEMI':([4,11,18,20,25,27,30,31,33,34,36,39,42,44,48,49,51,52,54,55,56,57,60,61,62,64,65,66,67,68,69,72,73,74,75,76,77,82,83,84,87,91,92,93,103,104,106,107,108,109,110,111,113,115,116,120,121,122,124,129,130,154,155,156,157,159,161,165,167,169,171,172,174,179,192,193,194,195,196,199,200,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,229,230,231,235,238,248,253,255,257,266,267,271,273,281,282,283,289,293,294,298,302,303,306,307,310,312,316,322,323,325,332,334,335,338,339,340,341,],[-159,-118,-120,80,-122,-121,-117,-119,-123,-17,-167,-160,126,-19,-10,132,-110,-107,-56,-88,-73,-79,-60,-83,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-168,-25,164,-143,-142,175,-166,-165,-58,-30,-29,-45,-33,-34,-46,-31,-41,-37,-36,-32,-38,-28,-35,-170,-13,-106,-105,-111,226,228,-162,-145,-144,-146,-141,-158,-140,-124,-44,-23,-22,-20,-169,-12,-11,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-133,-161,-27,-26,-139,-59,-21,-14,-75,-132,295,-157,-155,-138,-40,-39,-47,-81,317,318,-150,-156,-57,-55,-49,-76,-82,329,-154,-149,-148,-183,-147,-50,-181,-182,-187,-180,]),'PLUS':([4,18,34,38,39,40,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-60,-17,99,-160,-56,-110,-107,-56,-88,-73,145,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,145,145,145,-100,145,-98,145,145,145,145,-97,145,-99,145,145,-101,-161,-59,-56,-75,-57,-76,]),'GE':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,149,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,149,149,149,-100,-93,-98,149,149,149,149,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'ELSE':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,80,89,103,129,151,152,154,155,156,161,173,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,228,229,238,255,258,262,289,303,310,312,313,328,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-113,-115,-58,-170,-135,221,-106,-105,-111,-162,-116,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-134,260,-112,-161,-59,-75,260,-84,-81,-57,-76,-82,-86,-87,]),'DOWN':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,103,129,154,155,156,161,166,168,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,255,269,270,271,289,300,303,310,312,321,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,234,-151,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-75,-152,301,-155,-81,324,-57,-76,-82,-153,]),'TO':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,255,269,270,271,289,300,301,303,310,312,321,324,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-75,-152,299,-155,-81,299,299,-57,-76,-82,-153,299,]),'CCONST':([13,14,36,46,50,59,63,70,79,88,97,100,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,176,177,178,180,181,185,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[67,67,67,67,67,67,67,67,67,67,67,-131,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-127,-130,-128,-126,-125,-129,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'NUM':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[22,-7,22,22,22,-2,-5,-6,-8,22,-4,22,-3,22,22,22,22,22,22,22,22,-113,22,-115,22,22,-131,22,22,-18,-9,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-24,22,-116,22,-127,-130,-128,-126,-125,-129,22,22,22,22,22,22,22,22,22,-179,-112,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'READ':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[23,-7,23,23,23,-2,-5,-6,-8,23,-4,23,-3,23,23,23,23,23,23,23,23,-113,23,-115,23,23,-131,23,23,-18,-9,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-24,23,-116,23,-127,-130,-128,-126,-125,-129,23,23,23,23,23,23,23,23,23,-179,-112,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'NOT':([4,13,14,34,36,39,46,50,51,52,54,55,56,57,59,60,62,64,65,66,67,68,69,73,74,75,76,79,88,97,100,101,103,123,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,161,176,177,178,180,181,185,186,187,188,189,196,197,198,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,229,233,237,238,239,246,254,255,259,260,277,278,280,285,299,303,310,327,],[-159,63,63,-17,63,-160,63,63,-110,-107,-56,-88,-73,137,63,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,63,63,63,-131,63,-58,63,-170,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-106,-105,-111,-162,-127,-130,-128,-126,-125,-129,63,63,63,63,-169,63,63,-78,-89,-103,-102,-100,-93,-98,-90,137,-92,-91,-97,-96,-99,-95,-94,-101,63,-161,63,63,-59,63,-56,63,-75,63,63,63,63,63,63,63,-57,-76,63,]),'OD':([80,89,90,173,175,228,236,],[-113,-115,174,-116,235,-112,273,]),'SUCC':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[9,-7,9,9,9,-2,-5,-6,-8,9,-4,9,-3,9,9,9,9,9,9,9,9,-113,9,-115,9,9,-131,9,9,-18,-9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-24,9,-116,9,-127,-130,-128,-126,-125,-129,9,9,9,9,9,9,9,9,9,-179,-112,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'CONCAT':([4,18,34,38,39,40,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-60,-17,95,-160,-56,-110,-107,-56,-88,-73,142,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'INT':([34,41,43,47,119,162,186,191,232,263,272,279,280,320,326,327,],[-17,116,-15,116,116,116,116,-16,116,116,116,116,116,116,116,116,]),'EQ':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,144,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,144,144,144,-100,-93,-98,144,144,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'SCONST':([13,14,36,46,50,59,63,70,79,88,97,100,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,176,177,178,180,181,185,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[64,64,64,64,64,64,64,64,64,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-127,-130,-128,-126,-125,-129,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'PRED':([0,6,7,13,14,19,21,24,26,32,35,36,45,46,50,59,63,70,71,78,79,80,88,89,90,97,100,101,123,126,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,164,170,173,175,176,177,178,180,181,185,186,187,188,189,197,198,220,221,225,226,228,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[28,-7,28,28,28,-2,-5,-6,-8,28,-4,28,-3,28,28,28,28,28,28,28,28,-113,28,-115,28,28,-131,28,28,-18,-9,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-24,28,-116,28,-127,-130,-128,-126,-125,-129,28,28,28,28,28,28,28,28,28,-179,-112,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ASSIGN':([4,18,34,38,39,40,41,43,54,81,94,95,96,98,99,102,103,104,106,107,108,109,110,111,112,113,115,116,120,121,122,124,129,130,161,166,168,191,192,196,229,238,281,282,283,303,306,307,335,],[-159,-60,-17,100,-160,-56,123,-15,-56,162,176,177,178,180,181,185,-58,-30,-29,-45,-33,-34,-46,-31,188,-41,-37,-36,-32,-38,-28,-35,-170,198,-162,233,-151,-16,-44,-169,-161,-59,-40,-39,-47,-57,-55,-49,-50,]),'TYPE':([0,6,7,19,21,24,26,35,45,80,126,132,164,226,228,295,317,318,319,329,330,331,337,],[29,-7,29,-2,-5,-6,-8,-4,-3,-113,-18,-9,-24,-179,-112,29,29,29,29,29,29,29,29,]),'FALSE':([13,14,36,46,50,59,63,70,79,88,97,100,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,176,177,178,180,181,185,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[66,66,66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-127,-130,-128,-126,-125,-129,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DO':([0,6,7,19,21,24,26,32,35,45,78,80,89,90,126,132,151,164,170,173,175,220,221,226,228,236,256,295,317,318,319,329,330,331,337,],[32,-7,32,-2,-5,-6,-8,32,-4,-3,32,-113,-115,32,-18,-9,32,-24,32,-116,32,32,32,-179,-112,32,32,32,32,32,32,32,32,32,32,]),'TIMES':([4,18,34,38,39,40,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-60,-17,94,-160,-56,-110,-107,-56,-88,-73,147,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,147,147,147,-100,147,147,147,147,147,147,147,147,-99,147,147,-101,-161,-59,-56,-75,-57,-76,]),'IN':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,166,168,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,234,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,136,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,232,-151,-169,-78,-89,-103,136,-100,-93,-98,-90,136,-92,-91,-97,-96,-99,-95,-94,-101,-161,272,-59,-56,-75,-57,-76,]),'WHILE':([4,32,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,87,103,108,109,115,116,120,121,124,129,154,155,156,161,165,167,169,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,255,267,271,281,282,289,298,302,303,310,312,322,323,325,334,],[-159,88,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,88,-58,-33,-34,-37,-36,-32,-38,-35,-170,-106,-105,-111,-162,-145,-144,-146,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-75,-157,-155,-40,-39,-81,-150,-156,-57,-76,-82,-154,-149,-148,-147,]),'COLON':([4,16,34,39,40,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,86,103,129,154,155,156,161,182,183,196,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,242,244,246,255,289,303,304,310,312,],[-159,78,-17,-160,-114,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,170,-58,-170,-106,-105,-111,-162,237,-61,-169,-78,254,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,278,-61,-56,-75,-81,-57,-61,-76,-82,]),'NEQ':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,143,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,143,143,143,-100,-93,-98,143,143,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'ID':([0,1,6,7,12,13,14,19,21,24,26,29,32,34,35,36,37,41,43,45,46,47,50,59,63,70,71,78,79,80,85,88,89,90,97,100,101,118,119,123,125,126,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,162,163,164,170,173,175,176,177,178,180,181,185,186,187,188,189,191,197,198,220,221,225,226,227,228,232,233,236,237,239,254,256,259,260,263,272,277,278,279,280,285,292,295,299,317,318,319,320,326,327,329,330,331,337,],[34,34,-7,34,34,34,34,-2,-5,-6,-8,34,34,-17,-4,34,34,34,-15,-3,34,34,34,34,34,34,34,34,34,-113,34,34,-115,34,34,-131,34,34,34,34,34,-18,34,-9,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-24,34,-116,34,-127,-130,-128,-126,-125,-129,34,34,34,34,-16,34,34,34,34,34,-179,34,-112,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MINUS':([4,13,14,18,34,36,38,39,40,46,50,51,52,54,55,56,57,59,60,62,64,65,66,67,68,69,73,74,75,76,79,88,97,100,101,103,123,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,161,176,177,178,180,181,185,186,187,188,189,196,197,198,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,229,233,237,238,239,246,254,255,259,260,277,278,280,285,299,303,310,327,],[-159,70,70,-60,-17,70,98,-160,-56,70,70,-110,-107,-56,-88,-73,140,70,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,70,70,70,-131,70,-58,70,-170,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-106,-105,-111,-162,-127,-130,-128,-126,-125,-129,70,70,70,70,-169,70,70,-78,140,140,140,-100,140,-98,140,140,140,140,-97,140,-99,140,140,-101,70,-161,70,70,-59,70,-56,70,-75,70,70,70,70,70,70,70,-57,-76,70,]),'ARROW':([4,13,14,18,34,36,38,39,40,46,50,54,59,60,63,70,76,79,88,97,100,101,103,123,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,156,161,176,177,178,180,181,185,186,187,188,189,196,197,198,225,229,233,237,238,239,246,254,259,260,277,278,280,285,299,303,327,],[-159,71,71,-60,-17,71,103,-160,-56,71,71,-56,71,-60,71,71,103,71,71,71,-131,71,-58,71,-170,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,103,-162,-127,-130,-128,-126,-125,-129,71,71,71,71,-169,71,71,71,-161,71,71,-59,71,-56,71,71,71,71,71,71,71,71,-57,71,]),'FOR':([32,],[85,]),'OR':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,141,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,-89,141,141,-100,-93,-98,-90,141,-92,-91,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'COMMA':([4,34,39,41,42,43,44,47,48,49,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,81,82,83,103,104,106,107,108,109,110,111,113,115,116,120,121,122,124,127,128,129,130,154,155,156,160,161,183,184,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,230,231,238,240,243,245,248,252,253,255,263,264,265,274,276,281,282,283,289,290,291,303,304,305,306,307,308,309,310,312,314,315,335,336,],[-159,-17,-160,118,125,-15,-19,118,-10,131,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,118,-25,163,-58,-30,-29,-45,-33,-34,-46,-31,-41,-37,-36,-32,-38,-28,-35,197,-163,-170,-13,-106,-105,-111,197,-162,-63,239,-16,-44,-23,-22,-20,-169,-12,-11,-78,-63,239,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-161,-27,-26,-59,-53,-54,280,-21,-164,-14,-75,118,-184,292,-62,-64,-40,-39,-47,-81,-189,-186,-57,-163,-43,-55,-49,327,-51,-76,-82,-188,-185,-50,-52,]),'ELSIF':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,224,229,238,255,258,262,289,303,310,312,313,328,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,259,-161,-59,-75,285,-84,-81,-57,-76,-82,-86,-87,]),'RETURN':([0,6,7,19,21,24,26,32,35,45,78,80,89,90,126,132,151,164,170,173,175,220,221,226,228,236,256,295,317,318,319,329,330,331,337,],[36,-7,36,-2,-5,-6,-8,36,-4,-3,36,-113,-115,36,-18,-9,36,-24,36,-116,36,36,36,-179,-112,36,36,36,36,36,36,36,36,36,36,]),'EXIT':([0,6,7,19,21,24,26,32,35,45,78,80,89,90,126,132,151,164,170,173,175,220,221,226,228,236,256,295,317,318,319,329,330,331,337,],[37,-7,37,-2,-5,-6,-8,37,-4,-3,37,-113,-115,37,-18,-9,37,-24,37,-116,37,37,37,-179,-112,37,37,37,37,37,37,37,37,37,37,]),'END':([6,19,21,24,26,35,45,80,126,132,164,226,228,319,330,331,337,],[-7,-2,-5,-6,-8,-4,-3,-113,-18,-9,-24,-179,-112,332,338,339,341,]),'GT':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-17,-160,-110,-107,-56,-88,-73,139,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,139,139,139,-100,-93,-98,139,139,139,139,-97,-96,-99,-95,-94,-101,-161,-59,-56,-75,-57,-76,]),'TRUE':([13,14,36,46,50,59,63,70,79,88,97,100,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,176,177,178,180,181,185,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[62,62,62,62,62,62,62,62,62,62,62,-131,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-127,-130,-128,-126,-125,-129,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'RETURNS':([266,293,],[296,296,]),'FI':([4,34,39,51,52,54,55,56,57,60,62,64,65,66,67,68,69,72,73,74,75,76,80,89,103,129,151,152,154,155,156,161,173,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,228,229,238,255,256,261,286,288,289,303,310,312,],[-159,-17,-160,-110,-107,-56,-88,-73,-79,-60,-71,-74,-68,-70,-72,-65,-66,-80,-67,-109,-69,-108,-113,-115,-58,-170,-135,223,-106,-105,-111,-162,-116,-169,-78,-89,-103,-102,-100,-93,-98,-90,-104,-92,-91,-97,-96,-99,-95,-94,-101,-134,-137,257,-112,-161,-59,-75,-136,289,312,-85,-81,-57,-76,-82,]),'MOD':([4,18,34,38,39,40,51,52,54,55,56,57,60,62,64,65,66,67,68,69,73,74,75,76,103,129,154,155,156,161,196,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,238,246,255,303,310,],[-159,-60,-17,102,-160,-56,-110,-107,-56,-88,-73,150,-60,-71,-74,-68,-70,-72,-65,-66,-67,-109,-69,-108,-58,-170,-106,-105,-111,-162,-169,-78,150,150,150,-100,150,150,150,150,150,150,150,150,-99,150,150,-101,-161,-59,-56,-75,-57,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'identifier_list':([1,12,29,125,131,163,227,292,],[41,47,81,41,47,81,263,263,]),'primitive_value':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'step_value':([270,],[300,]),'builtin_name':([0,7,13,14,32,36,46,50,59,63,70,71,78,79,88,90,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,170,175,186,187,188,189,197,198,220,221,225,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'identifier':([0,1,7,12,13,14,29,32,36,37,41,46,47,50,59,63,70,71,78,79,85,88,90,97,101,118,119,123,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,162,163,170,175,186,187,188,189,197,198,220,221,225,227,232,233,236,237,239,254,256,259,260,263,272,277,278,279,280,285,292,295,299,317,318,319,320,326,327,329,330,331,337,],[40,43,40,43,54,54,43,40,54,93,113,54,113,54,54,54,54,54,54,54,168,54,40,54,54,191,113,54,43,43,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,40,113,43,54,40,246,54,54,54,54,54,40,40,54,43,268,54,40,54,54,54,40,54,54,113,268,54,54,113,246,54,43,40,54,40,40,40,113,113,246,40,40,40,40,]),'discrete_expression':([233,299,],[269,322,]),'end_value':([270,300,301,324,],[298,323,325,334,]),'operand':([13,14,36,46,50,59,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'lower_bound':([101,186,187,189,277,280,327,],[182,242,242,242,242,242,242,]),'mode_definition':([29,163,],[82,231,]),'declaration_list':([12,],[49,]),'synonym_list':([1,],[42,]),'discrete_mode_name':([0,7,13,14,32,36,41,46,47,50,59,63,70,71,78,79,88,90,97,101,119,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,162,170,175,186,187,188,189,197,198,220,221,225,232,233,236,237,239,254,256,259,260,263,272,277,278,279,280,285,295,299,317,318,319,320,326,327,329,330,331,337,],[17,17,17,17,17,17,114,17,114,17,17,17,17,17,17,17,17,17,17,17,114,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,114,17,17,241,17,17,17,17,17,17,17,17,114,17,17,17,17,17,17,17,17,114,114,17,17,114,241,17,17,17,17,17,17,114,114,241,17,17,17,17,]),'call_action':([0,7,13,14,32,36,46,50,59,63,70,71,78,79,88,90,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,170,175,186,187,188,189,197,198,220,221,225,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[18,18,60,60,18,60,60,60,60,60,60,60,18,60,60,18,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,18,18,18,60,60,60,60,60,60,18,18,60,60,18,60,60,60,18,60,60,60,60,60,60,18,60,18,18,18,60,18,18,18,18,]),'if_action':([0,7,32,78,90,151,170,175,220,221,236,256,295,317,318,319,329,330,331,337,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'expression':([13,14,36,46,50,59,79,88,97,101,123,134,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[61,77,92,128,133,61,128,61,179,183,193,202,244,244,193,244,252,253,262,271,274,276,284,61,288,304,274,244,61,271,244,]),'procedure_call':([0,7,13,14,32,36,46,50,59,63,70,71,78,79,88,90,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,170,175,186,187,188,189,197,198,220,221,225,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'action':([0,7,32,78,90,151,170,175,220,221,236,256,295,317,318,319,329,330,331,337,],[20,20,20,159,20,20,159,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'reference_mode':([41,47,119,162,263,279,320,326,],[104,104,104,104,104,104,104,104,]),'upper_bound':([237,278,],[275,305,]),'string_mode':([41,47,119,162,263,279,320,326,],[107,107,107,107,107,107,107,107,]),'newmode_statement':([0,7,295,317,318,319,329,330,331,337,],[24,24,24,24,24,24,24,24,24,24,]),'then_clause':([58,],[152,]),'newmode_list':([29,],[83,]),'parenthesized_expression':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'composite_mode':([41,47,119,162,263,279,320,326,],[111,111,111,111,111,111,111,111,]),'mode_name':([41,47,119,162,263,279,320,326,],[122,122,122,122,122,122,122,122,]),'string_length':([190,],[250,]),'index_mode_list':([280,],[308,]),'constant_expression':([123,188,],[194,248,]),'element_mode':([279,326,],[307,335,]),'result_action':([0,7,32,78,90,151,170,175,220,221,236,256,295,317,318,319,329,330,331,337,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'step_enumeration':([85,],[165,]),'value_array_element':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'referenced_location':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'discrete_range_mode':([41,47,119,162,186,232,263,272,279,280,320,326,327,],[124,124,124,124,124,124,124,124,124,124,124,124,124,]),'builtin_call':([0,7,13,14,32,36,46,50,59,63,70,71,78,79,88,90,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,170,175,186,187,188,189,197,198,220,221,225,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'procedure_definition':([78,],[157,]),'range_enumeration':([85,],[169,]),'location':([0,7,13,14,32,36,46,50,59,63,70,71,78,79,88,90,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,170,175,186,187,188,189,197,198,220,221,225,233,236,237,239,254,256,259,260,277,278,280,285,295,299,317,318,319,327,329,330,331,337,],[38,38,76,76,38,76,76,76,76,76,76,156,38,76,76,38,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,38,38,38,76,76,76,76,76,76,38,38,76,76,38,76,76,76,38,76,76,76,76,76,76,38,76,38,38,38,76,38,38,38,38,]),'initialization':([130,],[199,]),'operand1':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[52,52,52,52,52,52,154,155,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'discrete_mode':([41,47,119,162,186,232,263,272,279,280,320,326,327,],[106,106,106,106,240,267,106,302,106,240,106,106,240,]),'conditional_expression':([13,14,36,46,50,59,79,88,97,101,123,134,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'array_primitive_value':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'procedure_statement':([0,7,295,317,318,319,329,330,331,337,],[6,6,6,6,6,6,6,6,6,6,]),'statement_list':([0,295,317,318,329,],[7,319,330,331,337,]),'do_action':([0,7,32,78,90,151,170,175,220,221,236,256,295,317,318,319,329,330,331,337,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'synonym_definition':([1,125,],[44,195,]),'while_control':([32,87,],[84,171,]),'binop':([13,14,36,46,50,59,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[57,57,57,57,57,57,57,57,57,57,57,57,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'boolean_expression':([13,59,88,259,285,],[58,153,172,287,311,]),'start_value':([233,],[270,]),'declaration':([12,131,],[48,200,]),'program':([0,],[15,]),'label_id':([0,7,32,90,151,175,220,221,236,256,295,317,318,319,329,330,331,337,],[16,16,86,86,86,86,86,86,86,86,16,16,16,16,16,16,16,16,]),'parameter_list':([46,79,277,],[127,160,160,]),'else_expression':([224,258,],[261,286,]),'return_action':([0,7,32,78,90,151,170,175,220,221,236,256,295,317,318,319,329,330,331,337,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'boolean_mode':([41,47,119,162,186,232,263,272,279,280,320,326,327,],[108,108,108,108,108,108,108,108,108,108,108,108,108,]),'then_expression':([153,287,311,],[224,313,328,]),'statement':([0,7,295,317,318,319,329,330,331,337,],[19,45,19,19,19,45,19,45,45,45,]),'formal_parameter':([227,292,],[264,315,]),'character_mode':([41,47,119,162,186,232,263,272,279,280,320,326,327,],[109,109,109,109,109,109,109,109,109,109,109,109,109,]),'synonym_statement':([0,7,295,317,318,319,329,330,331,337,],[21,21,21,21,21,21,21,21,21,21,]),'for_control':([32,],[87,]),'loop_counter':([85,],[166,]),'iteration':([85,],[167,]),'expression_list':([101,134,],[184,203,]),'array_mode':([41,47,119,162,263,279,320,326,],[110,110,110,110,110,110,110,110,]),'action_statement':([0,7,32,90,151,175,220,221,236,256,295,317,318,319,329,330,331,337,],[26,26,89,173,89,89,173,89,173,173,26,26,26,26,26,26,26,26,]),'mode':([41,47,119,162,263,279,320,326,],[112,130,192,230,290,306,290,306,]),'exit_action':([0,7,32,78,90,151,170,175,220,221,236,256,295,317,318,319,329,330,331,337,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'elsif_expression':([224,],[258,]),'assignment_action':([0,7,32,78,90,151,170,175,220,221,236,256,295,317,318,319,329,330,331,337,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'result_spec':([266,293,],[294,316,]),'literal_range':([186,187,189,277,280,327,],[243,247,249,249,243,243,]),'literal':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'else_clause':([152,],[222,]),'formal_parameter_list':([227,],[265,]),'declaration_statement':([0,7,295,317,318,319,329,330,331,337,],[35,35,35,35,35,35,35,35,35,35,]),'integer_mode':([41,47,119,162,186,232,263,272,279,280,320,326,327,],[120,120,120,120,120,120,120,120,120,120,120,120,120,]),'value_array_slice':([13,14,36,46,50,59,63,70,79,88,97,101,123,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,187,188,189,197,198,225,233,237,239,254,259,260,277,278,280,285,299,327,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'parameter_spec':([263,320,],[291,333,]),'action_statement_list':([32,151,175,221,],[90,220,236,256,]),'index_mode':([186,280,327,],[245,309,336,]),'assigning_operator':([38,],[97,]),'control_part':([32,],[91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
