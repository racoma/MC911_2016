
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5525B158C92B0083E0562A82939A9ED9'
    
_lr_action_items = {'DO':([0,1,19,21,24,35,37,39,40,47,48,100,102,103,111,112,114,134,165,167,170,190,209,210,237,238,248,301,320,322,325,330,333,334,339,],[1,1,-2,-7,-6,-4,1,-8,-5,1,-115,-113,1,-3,1,1,-116,1,-18,-24,-9,1,1,1,-179,-112,1,1,1,1,1,1,1,1,1,]),'NULL':([14,25,33,42,49,55,61,71,74,77,90,93,98,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,174,175,179,180,181,182,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[59,59,59,59,59,59,59,59,59,59,59,59,-131,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-130,-125,-129,-126,-128,-127,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'CHARS':([11,79,80,87,149,169,223,274,294,321,328,],[-17,-15,146,146,146,146,-16,146,146,146,146,]),'$end':([13,19,21,24,35,37,39,40,100,103,165,167,170,237,238,],[0,-2,-7,-6,-4,-1,-8,-5,-113,-3,-18,-24,-9,-179,-112,]),'AND':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,122,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,122,122,-96,122,122,-99,-91,-93,-78,-169,-59,-75,-56,-57,-76,]),'LPAREN':([3,6,9,10,11,14,15,23,25,27,29,31,32,33,38,42,49,55,61,71,73,74,77,90,93,98,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,144,145,150,152,153,154,158,159,160,162,163,174,175,179,180,181,182,185,187,192,215,221,222,226,227,233,235,236,244,245,252,253,256,265,266,268,277,282,284,290,291,292,293,295,300,329,],[-178,-175,49,-177,-17,55,77,-173,55,-176,-171,-172,-174,55,-42,55,55,55,55,55,-42,55,55,55,55,-131,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-32,-38,-33,-37,-42,221,-34,55,226,-36,-35,-130,-125,-129,-126,-128,-127,239,55,55,55,55,55,55,55,55,55,55,221,-42,55,55,55,293,221,-42,221,55,55,-40,55,-39,55,55,321,55,]),'MOD':([8,11,12,28,34,38,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-60,-17,-160,94,-159,-56,-67,-107,123,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,123,123,123,123,-101,123,123,123,123,123,123,123,-99,123,123,-78,-169,-59,-75,-56,-57,-76,]),'FI':([11,12,34,48,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,100,114,117,134,135,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,218,234,238,248,251,255,283,285,286,296,309,312,],[-17,-160,-159,-115,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-113,-116,-162,-135,211,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-134,-137,249,-78,-169,-59,-112,-136,285,-75,309,-81,-85,-57,-82,-76,]),'COMMA':([11,12,34,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,78,79,80,81,83,84,85,86,87,88,97,115,116,117,139,140,141,142,143,144,145,147,148,150,151,152,153,154,155,158,162,163,164,172,176,178,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,216,217,218,220,223,224,225,228,229,230,231,232,234,247,255,262,264,266,267,269,270,272,273,274,276,285,289,290,292,296,297,298,309,312,313,314,315,316,317,318,319,323,335,336,],[-17,-160,-159,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-19,-15,157,166,168,157,-25,171,157,-10,-58,192,-163,-162,-106,-105,-111,192,-170,-32,-38,-31,-30,-33,-45,-37,-41,-29,-46,-34,-36,-35,-28,-13,235,-63,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,235,-63,-169,-44,-16,-22,-23,-20,-26,-27,-11,-12,-59,-164,-75,-21,-54,-53,295,-14,-64,-62,-184,157,302,-81,-47,-40,-39,-57,-186,-189,-82,-76,-43,-163,-49,-55,-51,329,-188,-185,-50,-52,]),'SEMI':([2,4,5,7,8,11,12,22,26,30,33,34,41,43,46,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,75,78,81,82,83,85,86,88,89,97,101,104,105,106,107,110,113,117,139,140,141,143,144,145,147,148,150,151,152,153,154,155,158,162,163,164,172,173,183,184,189,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,213,218,220,224,225,228,229,230,231,232,234,243,244,246,249,255,262,269,275,277,281,285,289,290,292,296,299,303,304,306,308,309,312,315,316,324,326,332,335,337,338,340,341,],[-117,-123,-119,-121,-120,-17,-160,-118,-122,100,-167,-159,-143,-142,112,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-83,-19,165,-165,167,-25,170,-10,-168,-58,-166,-158,-141,-145,-146,-144,-140,-162,-106,-105,-111,-170,-32,-38,-31,-30,-33,-45,-37,-41,-29,-46,-34,-36,-35,-28,-13,-124,237,238,-139,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-133,-78,-169,-44,-22,-23,-20,-26,-27,-11,-12,-59,-155,-157,-138,-132,-75,-21,-14,301,-156,-150,-81,-47,-40,-39,-57,320,325,-148,-149,-154,-82,-76,-49,-55,333,-147,-183,-50,-182,-187,-181,-180,]),'LOWER':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[6,6,6,-2,-7,-6,6,6,-4,6,-8,-5,6,6,-115,6,6,6,6,6,6,6,6,6,-131,-113,6,-3,6,6,-116,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-18,-24,-9,-130,-125,-129,-126,-128,-127,6,6,6,6,6,6,6,6,6,6,6,6,6,-179,-112,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'TRUE':([14,25,33,42,49,55,61,71,74,77,90,93,98,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,174,175,179,180,181,182,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[58,58,58,58,58,58,58,58,58,58,58,58,-131,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-130,-125,-129,-126,-128,-127,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'PRINT':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[3,3,3,-2,-7,-6,3,3,-4,3,-8,-5,3,3,-115,3,3,3,3,3,3,3,3,3,-131,-113,3,-3,3,3,-116,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-18,-24,-9,-130,-125,-129,-126,-128,-127,3,3,3,3,3,3,3,3,3,3,3,3,3,-179,-112,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'GT':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,133,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,133,-101,-98,133,133,133,-96,133,133,-99,133,-93,-78,-169,-59,-75,-56,-57,-76,]),'LT':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,119,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,119,-101,-98,119,119,119,-96,119,119,-99,119,-93,-78,-169,-59,-75,-56,-57,-76,]),'GE':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,120,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,120,-101,-98,120,120,120,-96,120,120,-99,120,-93,-78,-169,-59,-75,-56,-57,-76,]),'READ':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[10,10,10,-2,-7,-6,10,10,-4,10,-8,-5,10,10,-115,10,10,10,10,10,10,10,10,10,-131,-113,10,-3,10,10,-116,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-18,-24,-9,-130,-125,-129,-126,-128,-127,10,10,10,10,10,10,10,10,10,10,10,10,10,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'PLUS':([8,11,12,28,34,38,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-60,-17,-160,92,-159,-56,-67,-107,121,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,121,121,-97,121,-101,-98,121,121,121,121,121,121,-99,121,121,-78,-169,-59,-75,-56,-57,-76,]),'ID':([0,1,11,14,16,17,18,19,20,21,24,25,33,35,37,39,40,42,44,47,48,49,55,61,71,74,76,77,79,80,87,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,149,157,159,165,166,167,168,169,170,171,174,175,179,180,181,182,187,188,190,192,209,210,215,221,222,223,226,227,233,235,236,237,238,239,240,248,252,253,256,274,282,284,291,293,294,295,301,302,320,321,322,325,328,329,330,333,334,339,],[11,11,-17,11,11,11,11,-2,11,-7,-6,11,11,-4,11,-8,-5,11,11,11,-115,11,11,11,11,11,11,11,-15,11,11,11,11,-131,-113,11,-3,11,11,-116,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-18,11,-24,11,11,-9,11,-130,-125,-129,-126,-128,-127,11,11,11,11,11,11,11,11,11,-16,11,11,11,11,11,-179,-112,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ARRAY':([11,79,80,87,149,169,223,274,294,321,328,],[-17,-15,161,161,161,161,-16,161,161,161,161,]),'IF':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,77,90,93,98,100,102,103,111,112,114,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[14,14,61,-2,-7,-6,61,61,-4,14,-8,-5,61,14,-115,61,61,61,61,61,61,-131,-113,14,-3,14,14,-116,14,61,61,-18,-24,-9,-130,-125,-129,-126,-128,-127,61,14,61,14,14,61,61,61,61,61,61,61,61,-179,-112,14,61,61,61,61,61,61,61,61,14,14,14,14,61,14,14,14,14,]),'EQ':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,132,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,132,-101,-98,-92,132,132,-96,132,132,-99,-91,-93,-78,-169,-59,-75,-56,-57,-76,]),'ELSE':([11,12,34,48,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,100,114,117,134,135,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,214,218,234,238,250,254,255,285,296,309,311,312,327,],[-17,-160,-159,-115,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-113,-116,-162,-135,210,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-134,-78,252,-169,-59,-112,252,-84,-75,-81,-57,-82,-86,-76,-87,]),'SYN':([0,19,21,24,35,37,39,40,100,103,165,167,170,237,238,301,320,322,325,330,333,334,339,],[16,-2,-7,-6,-4,16,-8,-5,-113,-3,-18,-24,-9,-179,-112,16,16,16,16,16,16,16,16,]),'EXIT':([0,1,19,21,24,35,37,39,40,47,48,100,102,103,111,112,114,134,165,167,170,190,209,210,237,238,248,301,320,322,325,330,333,334,339,],[17,17,-2,-7,-6,-4,17,-8,-5,17,-115,-113,17,-3,17,17,-116,17,-18,-24,-9,17,17,17,-179,-112,17,17,17,17,17,17,17,17,17,]),'ELSIF':([11,12,34,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,214,218,234,250,254,255,285,296,309,311,312,327,],[-17,-160,-159,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,253,-169,-59,284,-84,-75,-81,-57,-82,-86,-76,-87,]),'ASSIGN':([8,11,12,28,34,38,73,79,80,84,91,92,94,95,96,97,99,108,109,117,143,144,145,147,148,150,151,152,153,154,155,156,158,162,163,164,172,191,218,220,223,234,289,290,292,296,315,316,335,],[-60,-17,-160,98,-159,-56,-56,-15,159,169,174,175,179,180,181,-58,182,187,-151,-162,-170,-32,-38,-31,-30,-33,-45,-37,-41,-29,-46,222,-34,-36,-35,-28,233,-161,-169,-44,-16,-59,-47,-40,-39,-57,-49,-55,-50,]),'CONCAT':([8,11,12,28,34,38,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-60,-17,-160,91,-159,-56,-67,-107,127,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,-169,-59,-75,-56,-57,-76,]),'LE':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,128,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,128,-101,-98,128,128,128,-96,128,128,-99,128,-93,-78,-169,-59,-75,-56,-57,-76,]),'RETURN':([0,1,19,21,24,35,37,39,40,47,48,100,102,103,111,112,114,134,165,167,170,190,209,210,237,238,248,301,320,322,325,330,333,334,339,],[33,33,-2,-7,-6,-4,33,-8,-5,33,-115,-113,33,-3,33,33,-116,33,-18,-24,-9,33,33,33,-179,-112,33,33,33,33,33,33,33,33,33,]),'CCONST':([14,25,33,42,49,55,61,71,74,77,90,93,98,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,174,175,179,180,181,182,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[57,57,57,57,57,57,57,57,57,57,57,57,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-130,-125,-129,-126,-128,-127,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TO':([11,12,34,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,241,242,243,255,278,279,285,296,305,307,309,312,],[-17,-160,-159,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,-169,-59,282,-152,-155,-75,282,282,-81,-57,282,-153,-82,-76,]),'COLON':([11,12,34,36,38,45,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,177,178,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,217,218,234,255,260,261,268,285,296,309,312,314,],[-17,-160,-159,102,-114,111,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,236,-61,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,256,-169,-59,-75,291,-61,-56,-81,-57,-82,-76,-61,]),'BOOL':([11,79,80,87,149,169,188,223,227,240,274,294,295,321,328,329,],[-17,-15,152,152,152,152,152,-16,152,152,152,152,152,152,152,152,]),'DCL':([0,19,21,24,35,37,39,40,100,103,165,167,170,237,238,301,320,322,325,330,333,334,339,],[20,-2,-7,-6,-4,20,-8,-5,-113,-3,-18,-24,-9,-179,-112,20,20,20,20,20,20,20,20,]),'WHILE':([1,11,12,34,43,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,106,107,110,117,139,140,141,143,144,145,150,152,158,162,163,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,243,244,255,277,281,285,290,292,296,304,306,308,309,312,326,],[42,-17,-160,-159,42,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-145,-146,-144,-162,-106,-105,-111,-170,-32,-38,-33,-37,-34,-36,-35,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,-169,-59,-155,-157,-75,-156,-150,-81,-40,-39,-57,-148,-149,-154,-82,-76,-147,]),'CHAR':([11,79,80,87,149,169,188,223,227,240,274,294,295,321,328,329,],[-17,-15,145,145,145,145,145,-16,145,145,145,145,145,145,145,145,]),'THEN':([11,12,34,50,51,52,53,54,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,75,97,117,137,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,285,287,296,309,310,312,],[-17,-160,-159,-67,-107,-79,-109,134,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-83,-58,-162,215,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,-169,-59,-75,-81,215,-57,-82,215,-76,]),'SUCC':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[23,23,23,-2,-7,-6,23,23,-4,23,-8,-5,23,23,-115,23,23,23,23,23,23,23,23,23,-131,-113,23,-3,23,23,-116,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-18,-24,-9,-130,-125,-129,-126,-128,-127,23,23,23,23,23,23,23,23,23,23,23,23,23,-179,-112,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'FALSE':([14,25,33,42,49,55,61,71,74,77,90,93,98,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,174,175,179,180,181,182,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[65,65,65,65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-130,-125,-129,-126,-128,-127,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'LBRACKET':([8,11,12,28,34,38,50,57,58,59,60,63,64,65,66,67,68,69,70,72,73,97,117,141,143,146,161,191,213,218,234,255,268,296,312,],[-60,-17,-160,93,-159,-56,-67,-72,-71,-73,-60,-77,-68,-70,-65,138,93,-66,-69,-74,-56,-58,-162,93,-170,219,227,-161,-78,-169,-59,-75,-56,-57,-76,]),'OR':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,129,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,129,129,-96,-90,129,-99,-91,-93,-78,-169,-59,-75,-56,-57,-76,]),'TYPE':([0,19,21,24,35,37,39,40,100,103,165,167,170,237,238,301,320,322,325,330,333,334,339,],[18,-2,-7,-6,-4,18,-8,-5,-113,-3,-18,-24,-9,-179,-112,18,18,18,18,18,18,18,18,]),'RETURNS':([275,303,],[300,300,]),'RESULT':([0,1,19,21,24,35,37,39,40,47,48,100,102,103,111,112,114,134,165,167,170,190,209,210,237,238,248,301,320,322,325,330,333,334,339,],[25,25,-2,-7,-6,-4,25,-8,-5,25,-115,-113,25,-3,25,25,-116,25,-18,-24,-9,25,25,25,-179,-112,25,25,25,25,25,25,25,25,25,]),'DIVIDE':([8,11,12,28,34,38,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-60,-17,-160,96,-159,-56,-67,-107,118,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,118,118,118,118,-101,118,118,118,118,118,118,118,-99,118,118,-78,-169,-59,-75,-56,-57,-76,]),'RBRACKET':([11,12,34,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,144,145,150,152,158,162,163,176,178,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,216,217,218,234,255,257,258,264,266,267,270,271,272,285,288,290,292,296,309,312,313,317,318,336,],[-17,-160,-159,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-32,-38,-33,-37,-34,-36,-35,234,-63,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,255,-63,-169,-59,-75,289,-48,-54,-53,294,-64,296,-62,-81,312,-40,-39,-57,-82,-76,-43,-51,328,-52,]),'REF':([11,79,80,87,149,169,223,274,294,321,328,],[-17,-15,149,149,149,149,-16,149,149,149,149,]),'BY':([11,12,34,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,241,242,243,255,285,296,309,312,],[-17,-160,-159,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,-169,-59,280,-152,-155,-75,-81,-57,-82,-76,]),'TIMES':([8,11,12,28,34,38,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-60,-17,-160,99,-159,-56,-67,-107,131,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,131,131,131,131,-101,131,131,131,131,131,131,131,-99,131,131,-78,-169,-59,-75,-56,-57,-76,]),'ICONST':([14,25,33,42,49,55,61,71,74,77,90,93,98,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,174,175,179,180,181,182,187,192,215,219,221,222,226,227,233,235,236,252,253,256,280,282,284,291,293,295,329,],[70,70,70,70,70,70,70,70,70,70,70,70,-131,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-130,-125,-129,-126,-128,-127,70,70,70,258,70,70,70,70,70,70,70,70,70,70,307,70,70,70,70,70,70,]),'FOR':([1,],[44,]),'UPPER':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[32,32,32,-2,-7,-6,32,32,-4,32,-8,-5,32,32,-115,32,32,32,32,32,32,32,32,32,-131,-113,32,-3,32,32,-116,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-18,-24,-9,-130,-125,-129,-126,-128,-127,32,32,32,32,32,32,32,32,32,32,32,32,32,-179,-112,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PRED':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[31,31,31,-2,-7,-6,31,31,-4,31,-8,-5,31,31,-115,31,31,31,31,31,31,31,31,31,-131,-113,31,-3,31,31,-116,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-18,-24,-9,-130,-125,-129,-126,-128,-127,31,31,31,31,31,31,31,31,31,31,31,31,31,-179,-112,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INT':([11,79,80,87,149,169,188,223,227,240,274,294,295,321,328,329,],[-17,-15,162,162,162,162,162,-16,162,162,162,162,162,162,162,162,]),'DOWN':([11,12,34,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,97,108,109,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,241,242,243,255,279,285,296,307,309,312,],[-17,-160,-159,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,186,-151,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,-169,-59,278,-152,-155,-75,305,-81,-57,-153,-82,-76,]),'NUM':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[29,29,29,-2,-7,-6,29,29,-4,29,-8,-5,29,29,-115,29,29,29,29,29,29,29,29,29,-131,-113,29,-3,29,29,-116,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-18,-24,-9,-130,-125,-129,-126,-128,-127,29,29,29,29,29,29,29,29,29,29,29,29,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'IN':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,108,109,117,139,140,141,143,186,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,130,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,188,-151,-162,-106,-105,-111,-170,240,-161,-100,-95,-94,-97,-89,-101,-98,-92,130,130,-96,-90,-103,-99,-91,-93,-78,-169,-59,-75,-56,-57,-76,]),'LOC':([11,144,145,147,148,150,151,152,153,154,155,158,162,163,164,220,289,290,292,298,315,316,335,],[-17,-32,-38,-31,-30,-33,-45,-37,-41,-29,-46,-34,-36,-35,-28,-44,-47,-40,-39,319,-49,-55,-50,]),'NOT':([11,12,14,25,33,34,42,49,50,51,52,53,55,56,57,58,59,60,61,63,64,65,66,68,69,70,72,73,77,90,93,97,98,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,139,140,141,143,159,174,175,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,215,218,221,222,226,227,233,234,235,236,252,253,255,256,268,282,284,291,293,295,296,312,329,],[-17,-160,71,71,71,-159,71,71,-67,-107,126,-109,71,-88,-72,-71,-73,-60,71,-110,-68,-70,-65,-108,-66,-69,-74,-56,71,71,71,-58,-131,-162,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-106,-105,-111,-170,71,-130,-125,-129,-126,-128,-127,71,-161,71,-100,-95,-94,-97,-89,-101,-98,-92,-102,126,-96,-90,-103,-99,-91,-93,-78,71,-169,71,71,71,71,71,-59,71,71,71,71,-75,71,-56,71,71,71,71,71,-57,-76,71,]),'OD':([47,48,100,112,114,190,238,],[113,-115,-113,189,-116,246,-112,]),'LENGTH':([0,1,14,19,21,24,25,33,35,37,39,40,42,47,48,49,55,61,71,74,76,77,90,93,98,100,102,103,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,165,167,170,174,175,179,180,181,182,187,190,192,209,210,215,221,222,226,227,233,235,236,237,238,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[27,27,27,-2,-7,-6,27,27,-4,27,-8,-5,27,27,-115,27,27,27,27,27,27,27,27,27,-131,-113,27,-3,27,27,-116,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-18,-24,-9,-130,-125,-129,-126,-128,-127,27,27,27,27,27,27,27,27,27,27,27,27,27,-179,-112,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'SCONST':([14,25,33,42,49,55,61,71,74,77,90,93,98,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,174,175,179,180,181,182,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[72,72,72,72,72,72,72,72,72,72,72,72,-131,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-130,-125,-129,-126,-128,-127,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'MINUS':([8,11,12,14,25,28,33,34,38,42,49,50,51,52,53,55,56,57,58,59,60,61,63,64,65,66,68,69,70,72,73,77,90,93,97,98,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,139,140,141,143,159,174,175,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,215,218,221,222,226,227,233,234,235,236,252,253,255,256,268,282,284,291,293,295,296,312,329,],[-60,-17,-160,74,74,95,74,-159,-56,74,74,-67,-107,124,-109,74,-88,-72,-71,-73,-60,74,-110,-68,-70,-65,-108,-66,-69,-74,-56,74,74,74,-58,-131,-162,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-106,-105,-111,-170,74,-130,-125,-129,-126,-128,-127,74,-161,74,-100,124,124,-97,124,-101,-98,124,124,124,124,124,124,-99,124,124,-78,74,-169,74,74,74,74,74,-59,74,74,74,74,-75,74,-56,74,74,74,74,74,-57,-76,74,]),'PROC':([102,],[185,]),'END':([19,21,24,35,39,40,100,103,165,167,170,237,238,322,330,334,339,],[-2,-7,-6,-4,-8,-5,-113,-3,-18,-24,-9,-179,-112,332,337,340,341,]),'RPAREN':([11,12,34,49,50,51,52,53,56,57,58,59,60,62,63,64,65,66,68,69,70,72,73,77,97,115,116,117,136,139,140,141,142,143,144,145,147,148,150,151,152,153,154,155,158,162,163,164,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,220,234,239,247,255,259,263,272,273,276,285,289,290,292,293,296,297,298,309,312,313,314,315,316,319,323,331,335,],[-17,-160,-159,117,-67,-107,-79,-109,-88,-72,-71,-73,-60,-80,-110,-68,-70,-65,-108,-66,-69,-74,-56,143,-58,191,-163,-162,213,-106,-105,-111,218,-170,-32,-38,-31,-30,-33,-45,-37,-41,-29,-46,-34,-36,-35,-28,-161,-100,-95,-94,-97,-89,-101,-98,-92,-102,-104,-96,-90,-103,-99,-91,-93,-78,-169,-44,-59,275,-164,-75,290,292,-62,-184,303,-81,-47,-40,-39,117,-57,-186,-189,-82,-76,-43,-163,-49,-55,-188,-185,338,-50,]),'ARROW':([8,11,12,14,25,28,33,34,38,42,49,55,60,61,68,71,73,74,77,90,93,97,98,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,141,143,159,174,175,179,180,181,182,187,191,192,215,218,221,222,226,227,233,234,235,236,252,253,256,268,282,284,291,293,295,296,329,],[-60,-17,-160,76,76,97,76,-159,-56,76,76,76,-60,76,97,76,-56,76,76,76,76,-58,-131,-162,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,97,-170,76,-130,-125,-129,-126,-128,-127,76,-161,76,76,-169,76,76,76,76,76,-59,76,76,76,76,76,-56,76,76,76,76,76,-57,76,]),'NEQ':([11,12,34,50,51,52,53,56,57,58,59,60,63,64,65,66,68,69,70,72,73,97,117,139,140,141,143,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,218,234,255,268,296,312,],[-17,-160,-159,-67,-107,125,-109,-88,-72,-71,-73,-60,-110,-68,-70,-65,-108,-66,-69,-74,-56,-58,-162,-106,-105,-111,-170,-161,-100,-95,-94,-97,125,-101,-98,-92,125,125,-96,125,125,-99,-91,-93,-78,-169,-59,-75,-56,-57,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start_value':([187,],[241,]),'discrete_range_mode':([80,87,149,169,188,227,240,274,294,295,321,328,329,],[163,163,163,163,163,163,163,163,163,163,163,163,163,]),'binop':([14,25,33,42,49,55,61,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[52,52,52,52,52,52,52,52,52,52,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'referenced_location':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'initialization':([172,],[232,]),'while_control':([1,43,],[41,105,]),'result_action':([0,1,37,47,102,111,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operand':([14,25,33,42,49,55,61,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'expression_list':([93,138,],[176,216,]),'assignment_action':([0,1,37,47,102,111,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'formal_parameter_list':([239,],[276,]),'procedure_definition':([102,],[183,]),'exit_action':([0,1,37,47,102,111,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assigning_operator':([28,],[90,]),'call_action':([0,1,14,25,33,37,42,47,49,55,61,71,74,76,77,90,93,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,187,190,192,209,210,215,221,222,226,227,233,235,236,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[8,8,60,60,60,8,60,8,60,60,60,60,60,60,60,60,60,8,8,8,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,8,60,60,60,8,60,8,8,60,60,60,60,60,60,60,60,8,60,60,60,60,60,60,60,60,8,8,8,8,60,8,8,8,8,]),'lower_bound':([93,221,226,227,293,295,329,],[177,260,260,260,260,260,260,]),'program':([0,],[13,]),'then_clause':([54,],[135,]),'synonym_statement':([0,37,301,320,322,325,330,333,334,339,],[40,40,40,40,40,40,40,40,40,40,]),'synonym_definition':([16,166,],[78,228,]),'array_mode':([80,87,149,169,274,294,321,328,],[155,155,155,155,155,155,155,155,]),'identifier_list':([16,18,20,166,168,171,239,302,],[80,84,87,80,84,87,274,274,]),'operand1':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[51,51,51,51,51,51,51,139,140,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'action':([0,1,37,47,102,111,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[30,30,30,30,184,184,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'primitive_value':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'do_action':([0,1,37,47,102,111,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'else_clause':([135,],[212,]),'range_enumeration':([44,],[107,]),'for_control':([1,],[43,]),'array_primitive_value':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'discrete_expression':([187,282,],[242,308,]),'builtin_name':([0,1,14,25,33,37,42,47,49,55,61,71,74,76,77,90,93,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,187,190,192,209,210,215,221,222,226,227,233,235,236,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'value_array_element':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'end_value':([241,278,279,305,],[281,304,306,326,]),'declaration_statement':([0,37,301,320,322,325,330,333,334,339,],[35,35,35,35,35,35,35,35,35,35,]),'discrete_mode':([80,87,149,169,188,227,240,274,294,295,321,328,329,],[154,154,154,154,244,266,277,154,154,266,154,154,266,]),'loop_counter':([44,],[108,]),'parameter_spec':([274,321,],[297,331,]),'then_expression':([137,287,310,],[214,311,327,]),'control_part':([1,],[46,]),'statement_list':([0,301,320,325,333,],[37,322,330,334,339,]),'identifier':([0,1,14,16,17,18,20,25,33,37,42,44,47,49,55,61,71,74,76,77,80,87,90,93,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,149,157,159,166,168,169,171,187,188,190,192,209,210,215,221,222,226,227,233,235,236,239,240,248,252,253,256,274,282,284,291,293,294,295,301,302,320,321,322,325,328,329,330,333,334,339,],[38,38,73,79,82,79,79,73,73,38,73,109,38,73,73,73,73,73,73,73,153,153,73,73,73,73,38,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,38,73,153,223,73,79,79,153,79,73,245,38,73,38,38,73,73,73,73,268,73,73,73,79,245,38,73,73,73,153,73,73,73,73,153,268,38,79,38,153,38,38,153,268,38,38,38,38,]),'discrete_mode_name':([0,1,14,25,33,37,42,47,49,55,61,71,74,76,77,80,87,90,93,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,149,159,169,187,188,190,192,209,210,215,221,222,226,227,233,235,236,240,248,252,253,256,274,282,284,291,293,294,295,301,320,321,322,325,328,329,330,333,334,339,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,160,160,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,160,9,160,9,160,9,9,9,9,9,9,9,9,265,9,9,9,160,9,9,9,9,160,9,9,9,9,160,265,9,9,160,9,9,160,265,9,9,9,9,]),'expression':([14,25,33,42,49,55,61,77,90,93,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[75,89,101,75,116,136,75,116,173,178,217,225,243,247,254,261,225,261,261,269,270,272,286,75,288,243,75,272,314,261,261,]),'reference_mode':([80,87,149,169,274,294,321,328,],[148,148,148,148,148,148,148,148,]),'synonym_list':([16,],[81,]),'declaration_list':([20,],[86,]),'parameter_list':([49,77,293,],[115,142,115,]),'if_action':([0,1,37,47,102,111,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'string_length':([219,],[257,]),'boolean_expression':([14,42,61,253,284,],[54,104,137,287,310,]),'declaration':([20,171,],[88,231,]),'formal_parameter':([239,302,],[273,323,]),'value_array_slice':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'iteration':([44,],[110,]),'newmode_list':([18,],[83,]),'string_mode':([80,87,149,169,274,294,321,328,],[151,151,151,151,151,151,151,151,]),'step_enumeration':([44,],[106,]),'literal_range':([221,226,227,293,295,329,],[259,263,264,263,264,264,]),'mode':([80,87,149,169,274,294,321,328,],[156,172,220,230,298,316,298,316,]),'builtin_call':([0,1,14,25,33,37,42,47,49,55,61,71,74,76,77,90,93,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,187,190,192,209,210,215,221,222,226,227,233,235,236,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'conditional_expression':([14,25,33,42,49,55,61,77,90,93,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'statement':([0,37,301,320,322,325,330,333,334,339,],[19,103,19,19,103,19,103,19,103,103,]),'elsif_expression':([214,],[250,]),'integer_mode':([80,87,149,169,188,227,240,274,294,295,321,328,329,],[144,144,144,144,144,144,144,144,144,144,144,144,144,]),'procedure_statement':([0,37,301,320,322,325,330,333,334,339,],[21,21,21,21,21,21,21,21,21,21,]),'parenthesized_expression':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'literal':([14,25,33,42,49,55,61,71,74,77,90,93,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,159,187,192,215,221,222,226,227,233,235,236,252,253,256,282,284,291,293,295,329,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'newmode_statement':([0,37,301,320,322,325,330,333,334,339,],[24,24,24,24,24,24,24,24,24,24,]),'index_mode_list':([295,],[318,]),'return_action':([0,1,37,47,102,111,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'constant_expression':([159,222,],[224,262,]),'boolean_mode':([80,87,149,169,188,227,240,274,294,295,321,328,329,],[150,150,150,150,150,150,150,150,150,150,150,150,150,]),'location':([0,1,14,25,33,37,42,47,49,55,61,71,74,76,77,90,93,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,187,190,192,209,210,215,221,222,226,227,233,235,236,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[28,28,68,68,68,28,68,28,68,68,68,68,68,141,68,68,68,28,28,28,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,28,68,68,68,28,68,28,28,68,68,68,68,68,68,68,68,28,68,68,68,68,68,68,68,68,28,28,28,28,68,28,28,28,28,]),'element_mode':([294,328,],[315,335,]),'upper_bound':([236,291,],[271,313,]),'procedure_call':([0,1,14,25,33,37,42,47,49,55,61,71,74,76,77,90,93,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,159,187,190,192,209,210,215,221,222,226,227,233,235,236,248,252,253,256,282,284,291,293,295,301,320,322,325,329,330,333,334,339,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'step_value':([241,],[279,]),'character_mode':([80,87,149,169,188,227,240,274,294,295,321,328,329,],[158,158,158,158,158,158,158,158,158,158,158,158,158,]),'else_expression':([214,250,],[251,283,]),'label_id':([0,1,37,47,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[36,45,36,45,45,45,45,45,45,45,36,36,36,36,36,36,36,36,]),'index_mode':([227,295,329,],[267,317,336,]),'action_statement_list':([1,112,134,210,],[47,190,209,248,]),'result_spec':([275,303,],[299,324,]),'composite_mode':([80,87,149,169,274,294,321,328,],[147,147,147,147,147,147,147,147,]),'action_statement':([0,1,37,47,112,134,190,209,210,248,301,320,322,325,330,333,334,339,],[39,48,39,114,48,48,114,114,48,114,39,39,39,39,39,39,39,39,]),'mode_definition':([18,168,],[85,229,]),'mode_name':([80,87,149,169,274,294,321,328,],[164,164,164,164,164,164,164,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
