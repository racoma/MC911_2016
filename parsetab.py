
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A08C644CA070452E70FFD5A391998A2A'
    
_lr_action_items = {'GE':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,146,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,146,-94,146,-93,-99,-97,-96,-100,146,-95,146,146,-98,146,-101,146,-78,-59,-161,-56,-75,-57,-76,]),'FOR':([6,],[47,]),'GT':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,148,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,148,-94,148,-93,-99,-97,-96,-100,148,-95,148,148,-98,148,-101,148,-78,-59,-161,-56,-75,-57,-76,]),'SYN':([0,3,8,20,24,36,37,38,53,58,104,140,182,227,228,296,319,320,324,331,333,334,340,],[4,-5,4,-7,-2,-8,-6,-4,-3,-113,-18,-24,-9,-179,-112,4,4,4,4,4,4,4,4,]),'LPAREN':([5,7,12,14,17,21,22,23,25,26,28,29,33,34,35,51,57,63,68,72,75,76,86,92,93,102,106,107,108,110,111,113,114,116,121,123,125,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,177,178,189,190,194,195,198,203,224,229,230,238,247,248,251,256,257,261,262,263,277,278,280,281,282,285,289,294,298,326,],[-174,-173,-42,57,76,76,76,-178,-171,-17,-177,-175,-176,-172,102,76,76,76,-42,76,76,76,-131,76,76,76,76,189,-34,-33,-32,-38,-37,-35,-42,194,-36,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,226,-127,-125,-130,-128,-129,-126,76,76,76,76,76,76,76,76,76,76,-42,281,194,-42,194,76,76,76,76,-39,-40,76,76,76,194,76,321,76,]),'DIVIDE':([2,11,12,19,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-60,-56,91,-17,-160,-66,-70,152,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,152,152,152,152,-99,152,152,-100,152,152,152,152,152,152,-101,152,-78,-59,-161,-56,-75,-57,-76,]),'RETURNS':([268,302,],[298,298,]),'CHAR':([26,42,44,101,117,138,191,195,199,258,269,282,283,321,326,327,],[-17,113,-15,113,113,113,-16,113,113,113,113,113,113,113,113,113,]),'MOD':([2,11,12,19,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-60,-56,94,-17,-160,-66,-70,159,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,159,159,159,159,-99,159,159,-100,159,159,159,159,159,159,-101,159,-78,-59,-161,-56,-75,-57,-76,]),'PROC':([85,],[166,]),'END':([3,20,24,36,37,38,53,58,104,140,182,227,228,319,331,333,340,],[-5,-7,-2,-8,-6,-4,-3,-113,-18,-24,-9,-179,-112,330,337,339,341,]),'SUCC':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[7,-5,7,7,7,-7,7,7,-2,-8,-6,-4,7,7,-115,-3,7,-113,7,7,7,7,7,7,-131,7,7,7,-18,7,7,-116,7,-24,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-127,-125,-130,-128,-129,-126,7,-9,7,7,7,7,7,7,7,7,-179,-112,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NOT':([2,17,21,22,26,32,51,57,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,80,81,83,84,86,89,92,93,102,106,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,169,170,171,172,177,178,184,189,190,194,195,198,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,229,230,231,238,239,247,260,261,262,263,277,281,282,285,294,303,315,326,],[-159,63,63,63,-17,-160,63,63,-66,-70,158,-73,-67,-60,-88,-56,-109,-107,-69,-108,63,63,-74,-65,-72,-71,-68,-110,-131,-58,63,63,63,63,-170,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-106,-105,-111,-127,-125,-130,-128,-129,-126,-162,63,63,63,63,63,63,-169,158,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,63,-78,63,63,-59,63,-161,-56,-75,63,63,63,63,63,63,63,63,-57,-76,63,]),'NULL':([17,21,22,51,57,63,72,75,76,86,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[64,64,64,64,64,64,64,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-127,-125,-130,-128,-129,-126,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'UPPER':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[5,-5,5,5,5,-7,5,5,-2,-8,-6,-4,5,5,-115,-3,5,-113,5,5,5,5,5,5,-131,5,5,5,-18,5,5,-116,5,-24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-127,-125,-130,-128,-129,-126,5,-9,5,5,5,5,5,5,5,5,-179,-112,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'MINUS':([2,11,12,17,19,21,22,26,32,51,57,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,80,81,83,84,86,89,92,93,102,106,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,169,170,171,172,177,178,184,189,190,194,195,198,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,229,230,231,238,239,247,260,261,262,263,277,281,282,285,294,303,315,326,],[-159,-60,-56,72,95,72,72,-17,-160,72,72,-66,-70,157,-73,-67,-60,-88,-56,-109,-107,-69,-108,72,72,-74,-65,-72,-71,-68,-110,-131,-58,72,72,72,72,-170,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-106,-105,-111,-127,-125,-130,-128,-129,-126,-162,72,72,72,72,72,72,-169,157,157,157,157,-99,-97,157,-100,157,157,157,157,-98,157,-101,157,72,-78,72,72,-59,72,-161,-56,-75,72,72,72,72,72,72,72,72,-57,-76,72,]),'BY':([2,26,32,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,253,254,255,260,293,303,315,318,],[-159,-17,-160,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,286,-152,-155,-75,-81,-57,-76,-82,]),'CONCAT':([2,11,12,19,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-60,-56,90,-17,-160,-66,-70,145,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,-56,-75,-57,-76,]),'AND':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,153,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,153,-94,-91,-93,-99,-97,-96,-100,-89,-95,153,153,-98,153,-101,-92,-78,-59,-161,-56,-75,-57,-76,]),'EQ':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,147,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,147,-94,-91,-93,-99,-97,-96,-100,147,-95,147,147,-98,147,-101,-92,-78,-59,-161,-56,-75,-57,-76,]),'LE':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,151,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,151,-94,151,-93,-99,-97,-96,-100,151,-95,151,151,-98,151,-101,151,-78,-59,-161,-56,-75,-57,-76,]),'THEN':([2,26,32,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,96,97,141,161,162,163,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,260,291,293,303,315,317,318,],[-159,-17,-160,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-83,179,-170,-106,-105,224,-111,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,-75,224,-81,-57,-76,224,-82,]),'ARRAY':([26,42,44,101,117,138,191,269,283,321,327,],[-17,124,-15,124,124,124,-16,124,124,124,124,]),'INT':([26,42,44,101,117,138,191,195,199,258,269,282,283,321,326,327,],[-17,125,-15,125,125,125,-16,125,125,125,125,125,125,125,125,125,]),'RPAREN':([2,26,32,57,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,102,108,110,111,113,114,115,116,118,119,120,121,123,125,126,141,142,143,161,162,164,165,184,185,192,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,226,231,239,242,246,259,260,267,270,271,278,279,280,281,293,299,300,303,304,305,308,309,315,318,322,323,332,336,],[-159,-17,-160,141,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,184,-34,-33,-32,-38,-37,-45,-35,-28,-31,-30,-41,-29,-36,-46,-170,-163,204,-106,-105,225,-111,-162,239,-44,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,268,-59,-161,278,280,-164,-75,-184,302,-62,-39,-47,-40,184,-81,-189,-186,-57,-43,-163,-55,-49,-76,-82,-188,-185,338,-50,]),'CHARS':([26,42,44,101,117,138,191,269,283,321,327,],[-17,122,-15,122,122,122,-16,122,122,122,122,]),'LBRACKET':([2,11,12,19,26,32,59,60,61,64,65,66,68,73,74,77,78,80,81,83,84,89,122,124,141,165,184,204,225,231,239,247,260,303,315,],[-159,-60,-56,93,-17,-160,-66,-70,144,-73,-67,-60,-56,-69,93,-74,-65,-72,-71,-68,-77,-58,193,195,-170,93,-162,-169,-78,-59,-161,-56,-75,-57,-76,]),'PLUS':([2,11,12,19,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-60,-56,88,-17,-160,-66,-70,150,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,150,150,150,150,-99,-97,150,-100,150,150,150,150,-98,150,-101,150,-78,-59,-161,-56,-75,-57,-76,]),'FALSE':([17,21,22,51,57,63,72,75,76,86,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[60,60,60,60,60,60,60,60,60,-131,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-127,-125,-130,-128,-129,-126,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'READ':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[28,-5,28,28,28,-7,28,28,-2,-8,-6,-4,28,28,-115,-3,28,-113,28,28,28,28,28,28,-131,28,28,28,-18,28,28,-116,28,-24,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-127,-125,-130,-128,-129,-126,28,-9,28,28,28,28,28,28,28,28,-179,-112,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'RESULT':([0,3,6,8,20,24,36,37,38,48,52,53,58,85,104,127,134,135,140,179,182,197,227,228,232,233,274,296,319,320,324,331,333,334,340,],[17,-5,17,17,-7,-2,-8,-6,-4,17,-115,-3,-113,17,-18,17,-116,17,-24,17,-9,17,-179,-112,17,17,17,17,17,17,17,17,17,17,17,]),'ICONST':([17,21,22,51,57,63,72,75,76,86,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,189,190,193,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,286,294,326,],[73,73,73,73,73,73,73,73,73,-131,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-127,-125,-130,-128,-129,-126,73,73,245,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,311,73,73,]),'IF':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,75,76,85,86,92,93,102,104,106,127,134,135,140,144,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[21,-5,21,21,75,-7,75,75,-2,-8,-6,-4,21,75,-115,-3,75,-113,75,75,21,-131,75,75,75,-18,75,21,-116,21,-24,75,-127,-125,-130,-128,-129,-126,21,-9,75,75,75,75,21,75,75,75,-179,-112,75,75,21,21,75,75,75,75,21,75,75,75,75,75,21,21,21,21,75,21,21,21,21,]),'RETURN':([0,3,6,8,20,24,36,37,38,48,52,53,58,85,104,127,134,135,140,179,182,197,227,228,232,233,274,296,319,320,324,331,333,334,340,],[22,-5,22,22,-7,-2,-8,-6,-4,22,-115,-3,-113,22,-18,22,-116,22,-24,22,-9,22,-179,-112,22,22,22,22,22,22,22,22,22,22,22,]),'PRINT':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[23,-5,23,23,23,-7,23,23,-2,-8,-6,-4,23,23,-115,-3,23,-113,23,23,23,23,23,23,-131,23,23,23,-18,23,23,-116,23,-24,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-127,-125,-130,-128,-129,-126,23,-9,23,23,23,23,23,23,23,23,-179,-112,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ASSIGN':([2,11,12,19,26,32,42,44,54,68,87,88,89,90,91,94,95,108,109,110,111,113,114,115,116,118,119,120,121,123,125,126,128,132,141,183,184,191,192,204,231,239,278,279,280,303,308,309,336,],[-159,-60,-56,86,-17,-160,106,-15,138,-56,169,170,-58,171,172,177,178,-34,190,-33,-32,-38,-37,-45,-35,-28,-31,-30,-41,-29,-36,-46,198,-151,-170,238,-162,-16,-44,-169,-59,-161,-39,-47,-40,-57,-55,-49,-50,]),'DO':([0,3,6,8,20,24,36,37,38,48,52,53,58,85,104,127,134,135,140,179,182,197,227,228,232,233,274,296,319,320,324,331,333,334,340,],[6,-5,6,6,-7,-2,-8,-6,-4,6,-115,-3,-113,6,-18,6,-116,6,-24,6,-9,6,-179,-112,6,6,6,6,6,6,6,6,6,6,6,]),'OD':([48,52,58,127,134,197,228,],[133,-115,-113,196,-116,252,-112,]),'SCONST':([17,21,22,51,57,63,72,75,76,86,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[77,77,77,77,77,77,77,77,77,-131,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-127,-125,-130,-128,-129,-126,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'ARROW':([2,11,12,17,19,21,22,26,32,51,57,63,66,68,72,74,75,76,86,89,92,93,102,106,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,169,170,171,172,177,178,184,189,190,194,195,198,203,204,224,229,230,231,238,239,247,261,262,263,277,281,282,285,294,303,326,],[-159,-60,-56,79,89,79,79,-17,-160,79,79,79,-60,-56,79,89,79,79,-131,-58,79,79,79,79,-170,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,89,-127,-125,-130,-128,-129,-126,-162,79,79,79,79,79,79,-169,79,79,79,-59,79,-161,-56,79,79,79,79,79,79,79,79,-57,79,]),'LOC':([26,108,110,111,113,114,115,116,118,119,120,121,123,125,126,192,278,279,280,299,308,309,336,],[-17,-34,-33,-32,-38,-37,-45,-35,-28,-31,-30,-41,-29,-36,-46,-44,-39,-47,-40,322,-55,-49,-50,]),'LOWER':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[29,-5,29,29,29,-7,29,29,-2,-8,-6,-4,29,29,-115,-3,29,-113,29,29,29,29,29,29,-131,29,29,29,-18,29,29,-116,29,-24,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-127,-125,-130,-128,-129,-126,29,-9,29,29,29,29,29,29,29,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'SEMI':([1,2,10,11,13,15,16,22,26,31,32,39,41,43,45,46,50,55,56,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,82,83,84,89,96,98,99,100,103,108,110,111,113,114,115,116,118,119,120,121,123,125,126,129,130,131,133,136,137,141,161,162,165,167,168,173,183,184,186,187,188,192,196,201,202,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,234,236,237,239,243,252,255,257,260,268,275,276,278,279,280,284,289,293,297,302,303,308,309,310,312,313,315,318,325,328,330,336,337,338,339,341,],[-117,-159,-123,-120,-121,58,-122,-167,-17,-118,-160,-119,104,-19,127,-143,-142,-25,140,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-168,-68,-110,-58,-83,-166,-10,182,-165,-34,-33,-32,-38,-37,-45,-35,-28,-31,-30,-41,-29,-36,-46,-144,-146,-145,-140,-141,-158,-170,-106,-105,-111,227,228,-124,-13,-162,-20,-22,-23,-44,-139,-27,-26,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-133,-11,-12,-161,-21,-138,-155,-157,-75,296,-132,-14,-39,-47,-40,-150,-156,-81,320,324,-57,-55,-49,-154,-148,-149,-76,-82,334,-147,-183,-50,-182,-187,-181,-180,]),'DCL':([0,3,8,20,24,36,37,38,53,58,104,140,182,227,228,296,319,320,324,331,333,334,340,],[27,-5,27,-7,-2,-8,-6,-4,-3,-113,-18,-24,-9,-179,-112,27,27,27,27,27,27,27,27,]),'OR':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,155,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,155,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,155,-98,155,-101,-92,-78,-59,-161,-56,-75,-57,-76,]),'COMMA':([2,26,32,41,42,43,44,54,55,56,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,99,100,101,108,110,111,113,114,115,116,118,119,120,121,123,125,126,141,142,143,161,162,165,175,176,183,184,185,186,187,188,191,192,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,236,237,239,243,249,250,251,259,260,267,269,270,271,273,276,278,279,280,293,299,300,303,304,305,306,307,308,309,315,318,322,323,335,336,],[-159,-17,-160,105,112,-19,-15,112,-25,139,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-10,181,112,-34,-33,-32,-38,-37,-45,-35,-28,-31,-30,-41,-29,-36,-46,-170,-163,203,-106,-105,-111,230,-63,-13,-162,203,-20,-22,-23,-16,-44,-27,-26,-169,230,-63,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-11,-12,-161,-21,-54,282,-53,-164,-75,-184,112,301,-62,-64,-14,-39,-47,-40,-81,-189,-186,-57,-43,-163,-51,326,-55,-49,-76,-82,-188,-185,-52,-50,]),'IN':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,128,132,141,161,162,165,184,200,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,156,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,199,-151,-170,-106,-105,-111,-162,258,-169,156,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,156,-101,-92,-78,-59,-161,-56,-75,-57,-76,]),'CCONST':([17,21,22,51,57,63,72,75,76,86,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[80,80,80,80,80,80,80,80,80,-131,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-127,-125,-130,-128,-129,-126,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'TRUE':([17,21,22,51,57,63,72,75,76,86,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[81,81,81,81,81,81,81,81,81,-131,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-127,-125,-130,-128,-129,-126,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'TYPE':([0,3,8,20,24,36,37,38,53,58,104,140,182,227,228,296,319,320,324,331,333,334,340,],[9,-5,9,-7,-2,-8,-6,-4,-3,-113,-18,-24,-9,-179,-112,9,9,9,9,9,9,9,9,]),'NEQ':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,160,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,160,-94,-91,-93,-99,-97,-96,-100,160,-95,160,160,-98,160,-101,-92,-78,-59,-161,-56,-75,-57,-76,]),'ELSIF':([2,26,32,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,231,239,260,265,266,293,303,315,316,318,329,],[-159,-17,-160,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,262,-78,-59,-161,-75,294,-84,-81,-57,-76,-86,-82,-87,]),'ELSE':([2,26,32,52,58,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,134,141,161,162,165,179,180,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,228,231,232,239,260,265,266,293,303,315,316,318,329,],[-159,-17,-160,-115,-113,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-116,-170,-106,-105,-111,-135,233,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,263,-78,-112,-59,-134,-161,-75,263,-84,-81,-57,-76,-86,-82,-87,]),'WHILE':([2,6,26,32,50,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,108,110,111,113,114,116,125,129,130,131,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,255,257,260,278,280,284,289,293,303,310,312,313,315,318,328,],[-159,51,-17,-160,51,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-34,-33,-32,-38,-37,-35,-36,-144,-146,-145,-170,-106,-105,-111,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,-155,-157,-75,-39,-40,-150,-156,-81,-57,-154,-148,-149,-76,-82,-147,]),'TO':([2,26,32,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,253,254,255,260,287,288,293,303,311,314,315,318,],[-159,-17,-160,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,285,-152,-155,-75,285,285,-81,-57,-153,285,-76,-82,]),'TIMES':([2,11,12,19,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-60,-56,87,-17,-160,-66,-70,149,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,149,149,149,149,-99,149,149,-100,149,149,149,149,149,149,-101,149,-78,-59,-161,-56,-75,-57,-76,]),'$end':([3,8,20,24,30,36,37,38,53,58,104,140,182,227,228,],[-5,-1,-7,-2,0,-8,-6,-4,-3,-113,-18,-24,-9,-179,-112,]),'LENGTH':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[33,-5,33,33,33,-7,33,33,-2,-8,-6,-4,33,33,-115,-3,33,-113,33,33,33,33,33,33,-131,33,33,33,-18,33,33,-116,33,-24,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-127,-125,-130,-128,-129,-126,33,-9,33,33,33,33,33,33,33,33,-179,-112,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'BOOL':([26,42,44,101,117,138,191,195,199,258,269,282,283,321,326,327,],[-17,114,-15,114,114,114,-16,114,114,114,114,114,114,114,114,114,]),'ID':([0,3,4,6,8,9,17,20,21,22,24,26,27,36,37,38,40,42,44,47,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,101,102,104,105,106,112,117,127,134,135,138,139,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,181,182,189,190,191,194,195,197,198,199,203,224,226,227,228,229,230,232,233,238,258,261,262,263,269,274,277,281,282,283,285,294,296,301,319,320,321,324,326,327,331,333,334,340,],[26,-5,26,26,26,26,26,-7,26,26,-2,-17,26,-8,-6,-4,26,26,-15,26,26,26,-115,-3,26,-113,26,26,26,26,26,26,-131,26,26,26,26,-18,26,26,26,26,26,-116,26,26,26,-24,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-127,-125,-130,-128,-129,-126,26,26,-9,26,26,-16,26,26,26,26,26,26,26,26,-179,-112,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FI':([2,26,32,52,58,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,134,141,161,162,165,179,180,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,228,231,232,233,235,239,260,264,274,292,293,295,303,315,318,],[-159,-17,-160,-115,-113,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-116,-170,-106,-105,-111,-135,234,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-112,-59,-134,-137,275,-161,-75,293,-136,-85,-81,318,-57,-76,-82,]),'LT':([2,26,32,59,60,62,64,65,66,67,68,69,70,73,74,77,78,80,81,83,84,89,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,247,260,303,315,],[-159,-17,-160,-66,-70,154,-73,-67,-60,-88,-56,-109,-107,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,-162,-169,154,-94,154,-93,-99,-97,-96,-100,154,-95,154,154,-98,154,-101,154,-78,-59,-161,-56,-75,-57,-76,]),'NUM':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[25,-5,25,25,25,-7,25,25,-2,-8,-6,-4,25,25,-115,-3,25,-113,25,25,25,25,25,25,-131,25,25,25,-18,25,25,-116,25,-24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-127,-125,-130,-128,-129,-126,25,-9,25,25,25,25,25,25,25,25,-179,-112,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'DOWN':([2,26,32,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,128,132,141,161,162,165,184,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,253,254,255,260,288,293,303,311,315,318,],[-159,-17,-160,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,200,-151,-170,-106,-105,-111,-162,-169,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,287,-152,-155,-75,314,-81,-57,-153,-76,-82,]),'PRED':([0,3,6,8,17,20,21,22,24,36,37,38,48,51,52,53,57,58,63,72,75,76,79,85,86,92,93,102,104,106,127,134,135,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,177,178,179,182,189,190,194,195,197,198,203,224,227,228,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[34,-5,34,34,34,-7,34,34,-2,-8,-6,-4,34,34,-115,-3,34,-113,34,34,34,34,34,34,-131,34,34,34,-18,34,34,-116,34,-24,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-127,-125,-130,-128,-129,-126,34,-9,34,34,34,34,34,34,34,34,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RBRACKET':([2,26,32,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,108,110,111,113,114,116,125,141,161,162,165,175,176,184,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,244,245,249,250,251,260,271,272,273,278,280,290,293,303,304,306,307,315,318,335,],[-159,-17,-160,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-34,-33,-32,-38,-37,-35,-36,-170,-106,-105,-111,231,-63,-162,-169,260,-63,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,279,-48,-54,283,-53,-75,-62,303,-64,-39,-40,315,-81,-57,-43,-51,327,-76,-82,-52,]),'COLON':([2,12,18,26,32,49,59,60,62,64,65,66,67,68,69,70,71,73,74,77,78,80,81,83,84,89,141,161,162,165,174,176,184,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,231,239,240,241,247,260,293,303,305,315,318,],[-159,-114,85,-17,-160,135,-66,-70,-79,-73,-67,-60,-88,-56,-109,-107,-80,-69,-108,-74,-65,-72,-71,-68,-110,-58,-170,-106,-105,-111,229,-61,-162,-169,261,-104,-94,-91,-93,-99,-97,-96,-100,-89,-95,-90,-103,-98,-102,-101,-92,-78,-59,-161,277,-61,-56,-75,-81,-57,-61,-76,-82,]),'REF':([26,42,44,101,117,138,191,269,283,321,327,],[-17,117,-15,117,117,117,-16,117,117,117,117,]),'EXIT':([0,3,6,8,20,24,36,37,38,48,52,53,58,85,104,127,134,135,140,179,182,197,227,228,232,233,274,296,319,320,324,331,333,334,340,],[40,-5,40,40,-7,-2,-8,-6,-4,40,-115,-3,-113,40,-18,40,-116,40,-24,40,-9,40,-179,-112,40,40,40,40,40,40,40,40,40,40,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'if_action':([0,6,8,48,85,127,135,179,197,232,233,274,296,319,320,324,331,333,334,340,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'synonym_statement':([0,8,296,319,320,324,331,333,334,340,],[3,3,3,3,3,3,3,3,3,3,]),'boolean_mode':([42,101,117,138,195,199,258,269,282,283,321,326,327,],[110,110,110,110,110,110,110,110,110,110,110,110,110,]),'value_array_element':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'declaration_statement':([0,8,296,319,320,324,331,333,334,340,],[38,38,38,38,38,38,38,38,38,38,]),'assigning_operator':([19,],[92,]),'while_control':([6,50,],[46,136,]),'binop':([17,21,22,51,57,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[62,62,62,62,62,62,62,62,62,62,62,62,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'discrete_expression':([198,285,],[254,310,]),'value_array_slice':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'formal_parameter':([226,301,],[267,323,]),'end_value':([253,287,288,314,],[284,312,313,328,]),'expression':([17,21,22,51,57,75,76,92,93,102,106,144,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[82,96,98,96,142,96,164,173,176,142,188,206,241,188,241,241,255,259,266,271,273,276,290,96,292,271,305,241,255,96,241,]),'operand':([17,21,22,51,57,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'identifier_list':([4,9,27,105,139,181,226,301,],[42,54,101,42,54,101,269,269,]),'exit_action':([0,6,8,48,85,127,135,179,197,232,233,274,296,319,320,324,331,333,334,340,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'conditional_expression':([17,21,22,51,57,75,76,92,93,102,106,144,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'return_action':([0,6,8,48,85,127,135,179,197,232,233,274,296,319,320,324,331,333,334,340,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'reference_mode':([42,101,117,138,269,283,321,327,],[120,120,120,120,120,120,120,120,]),'procedure_statement':([0,8,296,319,320,324,331,333,334,340,],[20,20,20,20,20,20,20,20,20,20,]),'operand1':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[70,70,70,70,70,161,162,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'loop_counter':([47,],[128,]),'synonym_definition':([4,105,],[43,186,]),'procedure_definition':([85,],[167,]),'statement':([0,8,296,319,320,324,331,333,334,340,],[24,53,24,53,24,24,53,53,24,53,]),'integer_mode':([42,101,117,138,195,199,258,269,282,283,321,326,327,],[111,111,111,111,111,111,111,111,111,111,111,111,111,]),'mode':([42,101,117,138,269,283,321,327,],[109,183,192,201,299,308,299,308,]),'action_statement_list':([6,127,179,233,],[48,197,232,274,]),'constant_expression':([106,190,],[187,243,]),'step_value':([253,],[288,]),'for_control':([6,],[50,]),'declaration':([27,181,],[99,236,]),'parameter_spec':([269,321,],[300,332,]),'string_mode':([42,101,117,138,269,283,321,327,],[115,115,115,115,115,115,115,115,]),'action':([0,6,8,48,85,127,135,179,197,232,233,274,296,319,320,324,331,333,334,340,],[15,15,15,15,168,15,168,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'array_mode':([42,101,117,138,269,283,321,327,],[126,126,126,126,126,126,126,126,]),'index_mode':([195,282,326,],[250,306,335,]),'discrete_mode_name':([0,6,8,17,21,22,42,48,51,57,63,72,75,76,79,85,92,93,101,102,106,117,127,135,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,179,189,190,194,195,197,198,199,203,224,229,230,232,233,238,258,261,262,263,269,274,277,281,282,283,285,294,296,319,320,321,324,326,327,331,333,334,340,],[35,35,35,35,35,35,107,35,35,35,35,35,35,35,35,35,35,35,107,35,35,107,35,35,107,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,248,35,35,107,35,35,35,35,35,35,35,107,35,35,35,107,35,35,35,248,107,35,35,35,35,35,107,35,248,107,35,35,35,35,]),'action_statement':([0,6,8,48,127,179,197,232,233,274,296,319,320,324,331,333,334,340,],[36,52,36,134,52,52,134,134,52,134,36,36,36,36,36,36,36,36,]),'index_mode_list':([282,],[307,]),'discrete_mode':([42,101,117,138,195,199,258,269,282,283,321,326,327,],[123,123,123,123,251,257,289,123,251,123,123,251,123,]),'newmode_statement':([0,8,296,319,320,324,331,333,334,340,],[37,37,37,37,37,37,37,37,37,37,]),'boolean_expression':([21,51,75,262,294,],[97,137,163,291,317,]),'assignment_action':([0,6,8,48,85,127,135,179,197,232,233,274,296,319,320,324,331,333,334,340,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'procedure_call':([0,6,8,17,21,22,48,51,57,63,72,75,76,79,85,92,93,102,106,127,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,179,189,190,194,195,197,198,203,224,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'lower_bound':([93,189,194,195,281,282,326,],[174,240,240,240,240,240,240,]),'result_action':([0,6,8,48,85,127,135,179,197,232,233,274,296,319,320,324,331,333,334,340,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'start_value':([198,],[253,]),'step_enumeration':([47,],[131,]),'control_part':([6,],[45,]),'array_primitive_value':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'newmode_list':([9,],[56,]),'expression_list':([93,144,],[175,205,]),'statement_list':([0,296,320,324,334,],[8,319,331,333,340,]),'discrete_range_mode':([42,101,117,138,195,199,258,269,282,283,321,326,327,],[116,116,116,116,116,116,116,116,116,116,116,116,116,]),'composite_mode':([42,101,117,138,269,283,321,327,],[119,119,119,119,119,119,119,119,]),'iteration':([47,],[129,]),'identifier':([0,4,6,8,9,17,21,22,27,40,42,47,48,51,57,63,72,75,76,79,85,92,93,101,102,105,106,112,117,127,135,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,179,181,189,190,194,195,197,198,199,203,224,226,229,230,232,233,238,258,261,262,263,269,274,277,281,282,283,285,294,296,301,319,320,321,324,326,327,331,333,334,340,],[12,44,12,12,44,68,68,68,44,103,121,132,12,68,68,68,68,68,68,68,68,68,68,121,68,44,68,191,121,12,68,121,44,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,12,44,68,68,68,247,12,68,256,68,68,44,68,68,12,12,68,256,68,68,68,121,12,68,68,247,121,68,68,12,44,12,12,121,12,247,121,12,12,12,12,]),'then_clause':([97,],[180,]),'mode_definition':([9,139,],[55,202,]),'referenced_location':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'builtin_name':([0,6,8,17,21,22,48,51,57,63,72,75,76,79,85,92,93,102,106,127,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,179,189,190,194,195,197,198,203,224,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'initialization':([183,],[237,]),'string_length':([193,],[244,]),'result_spec':([268,302,],[297,325,]),'label_id':([0,6,8,48,127,179,197,232,233,274,296,319,320,324,331,333,334,340,],[18,49,18,49,49,49,49,49,49,49,18,18,18,18,18,18,18,18,]),'location':([0,6,8,17,21,22,48,51,57,63,72,75,76,79,85,92,93,102,106,127,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,179,189,190,194,195,197,198,203,224,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[19,19,19,74,74,74,19,74,74,74,74,74,74,165,19,74,74,74,74,19,19,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,19,74,74,74,74,19,74,74,74,74,74,19,19,74,74,74,74,19,74,74,74,74,74,19,19,19,19,74,19,19,19,19,]),'range_enumeration':([47,],[130,]),'parenthesized_expression':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'character_mode':([42,101,117,138,195,199,258,269,282,283,321,326,327,],[108,108,108,108,108,108,108,108,108,108,108,108,108,]),'then_expression':([163,291,317,],[223,316,329,]),'literal':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'else_clause':([180,],[235,]),'formal_parameter_list':([226,],[270,]),'program':([0,],[30,]),'literal_range':([189,194,195,281,282,326,],[242,246,249,242,249,249,]),'synonym_list':([4,],[41,]),'declaration_list':([27,],[100,]),'do_action':([0,6,8,48,85,127,135,179,197,232,233,274,296,319,320,324,331,333,334,340,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'mode_name':([42,101,117,138,269,283,321,327,],[118,118,118,118,118,118,118,118,]),'builtin_call':([0,6,8,17,21,22,48,51,57,63,72,75,76,79,85,92,93,102,106,127,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,179,189,190,194,195,197,198,203,224,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'parameter_list':([57,102,281,],[143,185,185,]),'element_mode':([283,327,],[309,336,]),'primitive_value':([17,21,22,51,57,63,72,75,76,92,93,102,106,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,189,190,194,195,198,203,224,229,230,238,261,262,263,277,281,282,285,294,326,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'call_action':([0,6,8,17,21,22,48,51,57,63,72,75,76,79,85,92,93,102,106,127,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,179,189,190,194,195,197,198,203,224,229,230,232,233,238,261,262,263,274,277,281,282,285,294,296,319,320,324,326,331,333,334,340,],[11,11,11,66,66,66,11,66,66,66,66,66,66,66,11,66,66,66,66,11,11,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,11,66,66,66,66,11,66,66,66,66,66,11,11,66,66,66,66,11,66,66,66,66,66,11,11,11,11,66,11,11,11,11,]),'upper_bound':([229,277,],[272,304,]),'else_expression':([223,265,],[264,295,]),'elsif_expression':([223,],[265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
