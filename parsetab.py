
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7D516CA36C32570E62B074DC9BEE6793'
    
_lr_action_items = {'RETURNS':([256,293,],[289,289,]),'MOD':([1,2,6,19,23,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-60,-17,93,-56,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,130,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,130,130,-99,130,130,130,130,130,130,-101,130,130,130,130,-100,130,-78,-59,-169,-75,-56,-57,-76,]),'SUCC':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[30,30,-2,30,-7,-5,30,-4,-6,30,30,-8,30,30,30,-115,30,30,30,30,30,30,30,30,-131,-3,30,-113,30,30,-116,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-24,-9,-126,-125,-127,-130,-128,-129,30,-18,30,30,30,30,30,-179,-112,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LOWER':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[3,3,-2,3,-7,-5,3,-4,-6,3,3,-8,3,3,3,-115,3,3,3,3,3,3,3,3,-131,-3,3,-113,3,3,-116,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-24,-9,-126,-125,-127,-130,-128,-129,3,-18,3,3,3,3,3,-179,-112,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PLUS':([1,2,6,19,23,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-60,-17,86,-56,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,126,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,126,-99,126,126,-97,126,126,126,-101,126,126,126,126,-100,126,-78,-59,-169,-75,-56,-57,-76,]),'TRUE':([9,27,31,41,42,61,65,71,72,85,87,88,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,168,170,174,175,176,177,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[51,51,51,51,51,51,51,51,51,51,51,-131,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-126,-125,-127,-130,-128,-129,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'LBRACKET':([1,2,6,19,23,39,50,51,52,53,54,55,56,57,59,60,62,63,66,70,75,90,104,139,158,167,178,187,213,230,231,248,266,303,309,],[-160,-60,-17,87,-56,-159,-60,-71,-68,-72,-70,-65,-69,-67,118,-56,87,-73,-74,-77,-66,-58,-162,87,225,227,-170,-161,-78,-59,-169,-75,-56,-57,-76,]),'LE':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,127,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,127,-99,-94,127,-97,-96,127,127,-101,-93,-95,127,127,-100,127,-78,-59,-169,-75,-56,-57,-76,]),'CCONST':([9,27,31,41,42,61,65,71,72,85,87,88,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,168,170,174,175,176,177,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[53,53,53,53,53,53,53,53,53,53,53,-131,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-126,-125,-127,-130,-128,-129,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'FALSE':([9,27,31,41,42,61,65,71,72,85,87,88,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,168,170,174,175,176,177,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[54,54,54,54,54,54,54,54,54,54,54,-131,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-126,-125,-127,-130,-128,-129,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'FI':([1,6,39,49,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,103,104,116,119,138,139,178,180,181,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,230,231,232,234,235,248,250,274,284,286,287,303,309,311,],[-160,-17,-159,-115,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-113,-162,-116,-105,-106,-111,-170,-135,233,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-112,-59,-169,-134,-137,275,-75,284,-136,-81,-85,311,-57,-76,-82,]),'LENGTH':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[28,28,-2,28,-7,-5,28,-4,-6,28,28,-8,28,28,28,-115,28,28,28,28,28,28,28,28,-131,-3,28,-113,28,28,-116,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-24,-9,-126,-125,-127,-130,-128,-129,28,-18,28,28,28,28,28,-179,-112,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'DO':([0,7,8,15,21,22,24,25,38,47,49,80,94,103,108,109,116,143,148,180,182,189,217,218,232,234,274,290,314,315,317,330,331,332,338,],[7,7,-2,-7,-5,7,-4,-6,-8,7,-115,7,-3,-113,7,7,-116,-24,-9,7,-18,7,-179,-112,7,7,7,7,7,7,7,7,7,7,7,]),'RBRACKET':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,104,119,138,139,152,156,157,159,160,161,162,172,173,178,187,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,265,267,268,269,270,271,272,273,283,284,296,298,303,309,311,320,324,325,339,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-162,-105,-106,-111,-36,-33,-37,-38,-35,-34,-32,230,-63,-170,-161,248,-63,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-75,-54,-53,300,302,-48,303,-62,-64,309,-81,-39,-40,-57,-76,-82,-43,334,-51,-52,]),'RESULT':([0,7,8,15,21,22,24,25,38,47,49,80,94,103,108,109,116,143,148,180,182,189,217,218,232,234,274,290,314,315,317,330,331,332,338,],[9,9,-2,-7,-5,9,-4,-6,-8,9,-115,9,-3,-113,9,9,-116,-24,-9,9,-18,9,-179,-112,9,9,9,9,9,9,9,9,9,9,9,]),'WHILE':([1,6,7,39,48,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,104,112,113,114,119,138,139,152,156,157,159,160,161,162,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,243,247,248,277,281,284,296,298,303,304,306,308,309,311,326,],[-160,-17,42,-159,42,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-162,-145,-144,-146,-105,-106,-111,-36,-33,-37,-38,-35,-34,-32,-170,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-157,-155,-75,-156,-150,-81,-39,-40,-57,-149,-154,-148,-76,-82,-147,]),'LOC':([6,150,152,153,154,155,156,157,159,160,161,162,163,164,166,226,294,296,298,302,322,323,340,],[-17,-41,-36,-29,-30,-45,-33,-37,-38,-35,-34,-32,-46,-28,-31,-44,319,-39,-40,-47,-49,-55,-50,]),'READ':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[10,10,-2,10,-7,-5,10,-4,-6,10,10,-8,10,10,10,-115,10,10,10,10,10,10,10,10,-131,-3,10,-113,10,10,-116,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-24,-9,-126,-125,-127,-130,-128,-129,10,-18,10,10,10,10,10,-179,-112,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ICONST':([9,27,31,41,42,61,65,71,72,85,87,88,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,168,170,174,175,176,177,185,186,192,196,221,222,224,225,227,228,229,237,249,251,252,279,280,288,297,299,301,333,],[56,56,56,56,56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-126,-125,-127,-130,-128,-129,56,56,56,56,56,56,56,56,270,56,56,56,56,56,56,56,307,56,56,56,56,56,]),'LPAREN':([3,4,6,9,10,14,16,20,23,26,27,28,29,30,31,41,42,60,61,65,71,72,85,87,88,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,149,150,152,153,156,157,159,160,161,162,168,170,174,175,176,177,185,186,192,196,221,222,224,225,228,229,237,242,243,249,251,252,264,266,267,277,279,288,289,296,297,298,299,301,333,],[-175,41,-17,71,-177,-171,-178,-172,-42,95,71,-176,-174,-173,71,71,71,-42,71,71,71,71,71,71,-131,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,219,221,-42,-36,224,-33,-37,-38,-35,-34,-32,-126,-125,-127,-130,-128,-129,71,71,71,71,71,71,71,71,71,71,71,-42,224,71,71,71,299,-42,224,224,71,71,313,-39,71,-40,71,71,71,]),'GE':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,124,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,124,-99,-94,124,-97,-96,124,124,-101,-93,-95,124,124,-100,124,-78,-59,-169,-75,-56,-57,-76,]),'SEMI':([1,2,6,11,12,31,34,35,36,37,39,40,43,44,48,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,68,69,70,74,75,78,79,81,82,90,97,98,99,100,102,104,107,112,113,114,115,117,119,138,139,144,145,150,151,152,153,154,155,156,157,159,160,161,162,163,164,166,169,178,187,188,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,220,223,226,230,231,233,236,238,239,241,243,247,248,256,262,275,276,277,281,284,291,293,296,298,302,303,304,306,308,309,311,318,322,323,326,329,335,336,337,340,341,],[-160,-120,-17,-117,-123,-167,-122,-121,-118,-119,-159,103,-143,108,-142,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-168,-107,-110,-80,-66,143,-25,148,-10,-58,-83,-166,-19,182,-165,-162,-158,-145,-144,-146,-140,-141,-105,-106,-111,217,218,-41,-13,-36,-29,-30,-45,-33,-37,-38,-35,-34,-32,-46,-28,-31,-124,-170,-161,-139,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-27,-26,-11,-12,-44,-59,-169,-133,-20,-22,-23,-138,-157,-155,-75,290,-14,-132,-21,-156,-150,-81,315,317,-39,-40,-47,-57,-149,-154,-148,-76,-82,332,-49,-55,-147,-183,-187,-182,-181,-50,-180,]),'$end':([5,8,15,21,22,24,25,38,94,103,143,148,182,217,218,],[0,-2,-7,-5,-1,-4,-6,-8,-3,-113,-24,-9,-18,-179,-112,]),'TYPE':([0,8,15,21,22,24,25,38,94,103,143,148,182,217,218,290,314,315,317,330,331,332,338,],[13,-2,-7,-5,13,-4,-6,-8,-3,-113,-24,-9,-18,-179,-112,13,13,13,13,13,13,13,13,]),'NUM':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[14,14,-2,14,-7,-5,14,-4,-6,14,14,-8,14,14,14,-115,14,14,14,14,14,14,14,14,-131,-3,14,-113,14,14,-116,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-24,-9,-126,-125,-127,-130,-128,-129,14,-18,14,14,14,14,14,-179,-112,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'FOR':([7,],[46,]),'LT':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,132,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,132,-99,-94,132,-97,-96,132,132,-101,-93,-95,132,132,-100,132,-78,-59,-169,-75,-56,-57,-76,]),'IN':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,110,111,119,138,139,178,187,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,133,-107,-110,-66,-58,-162,-151,190,-105,-106,-111,-170,-161,244,-98,-89,-99,-94,-91,-97,-96,133,-92,-101,-93,-95,-103,133,-100,-90,-78,-59,-169,-75,-56,-57,-76,]),'CONCAT':([1,2,6,19,23,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-60,-17,91,-56,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,134,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-75,-56,-57,-76,]),'REF':([6,76,83,101,141,165,214,258,300,313,334,],[-17,-15,165,165,165,165,-16,165,165,165,165,]),'BY':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,245,246,247,248,284,303,309,311,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-162,-105,-106,-111,-170,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-152,280,-155,-75,-81,-57,-76,-82,]),'OR':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,136,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,-89,-99,-94,-91,-97,-96,136,-92,-101,-93,-95,136,136,-100,-90,-78,-59,-169,-75,-56,-57,-76,]),'BOOL':([6,76,83,101,141,165,190,214,225,244,258,300,301,313,333,334,],[-17,-15,157,157,157,157,157,-16,157,157,157,157,157,157,157,157,]),'AND':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,122,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,-89,-99,-94,-91,-97,-96,122,-92,-101,-93,-95,122,122,-100,122,-78,-59,-169,-75,-56,-57,-76,]),'ELSE':([1,6,39,49,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,103,104,116,119,138,139,178,180,181,187,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,230,231,232,248,253,254,284,303,309,310,311,327,],[-160,-17,-159,-115,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-113,-162,-116,-105,-106,-111,-170,-135,234,-161,252,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-112,-59,-169,-134,-75,252,-84,-81,-57,-76,-86,-82,-87,]),'DCL':([0,8,15,21,22,24,25,38,94,103,143,148,182,217,218,290,314,315,317,330,331,332,338,],[18,-2,-7,-5,18,-4,-6,-8,-3,-113,-24,-9,-18,-179,-112,18,18,18,18,18,18,18,18,]),'COLON':([1,6,17,23,39,45,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,104,119,138,139,171,173,178,187,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,260,261,266,284,303,309,311,321,],[-160,-17,80,-114,-159,109,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-162,-105,-106,-111,228,-61,-170,-161,249,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-75,297,-61,-56,-81,-57,-76,-82,-61,]),'ARRAY':([6,76,83,101,141,165,214,258,300,313,334,],[-17,-15,158,158,158,158,-16,158,158,158,158,]),'ELSIF':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,104,119,138,139,178,187,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,253,254,284,303,309,310,311,327,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-162,-105,-106,-111,-170,-161,251,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-75,288,-84,-81,-57,-76,-86,-82,-87,]),'PRED':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[20,20,-2,20,-7,-5,20,-4,-6,20,20,-8,20,20,20,-115,20,20,20,20,20,20,20,20,-131,-3,20,-113,20,20,-116,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-24,-9,-126,-125,-127,-130,-128,-129,20,-18,20,20,20,20,20,-179,-112,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'RPAREN':([1,6,39,41,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,95,104,105,106,119,137,138,139,150,152,153,154,155,156,157,159,160,161,162,163,164,166,178,179,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,219,226,230,231,240,248,255,257,259,263,272,284,294,295,296,298,299,302,303,309,311,316,319,320,321,322,323,328,340,],[-160,-17,-159,104,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,178,-162,187,-163,-105,213,-106,-111,-41,-36,-29,-30,-45,-33,-37,-38,-35,-34,-32,-46,-28,-31,-170,231,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,256,-44,-59,-169,-164,-75,-184,293,296,298,-62,-81,-189,-186,-39,-40,104,-47,-57,-76,-82,-185,-188,-43,-163,-49,-55,335,-50,]),'DOWN':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,104,110,111,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,245,246,247,248,278,284,303,307,309,311,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-162,-151,191,-105,-106,-111,-170,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-152,282,-155,-75,305,-81,-57,-153,-76,-82,]),'RETURN':([0,7,8,15,21,22,24,25,38,47,49,80,94,103,108,109,116,143,148,180,182,189,217,218,232,234,274,290,314,315,317,330,331,332,338,],[31,31,-2,-7,-5,31,-4,-6,-8,31,-115,31,-3,-113,31,31,-116,-24,-9,31,-18,31,-179,-112,31,31,31,31,31,31,31,31,31,31,31,]),'EXIT':([0,7,8,15,21,22,24,25,38,47,49,80,94,103,108,109,116,143,148,180,182,189,217,218,232,234,274,290,314,315,317,330,331,332,338,],[33,33,-2,-7,-5,33,-4,-6,-8,33,-115,33,-3,-113,33,33,-116,-24,-9,33,-18,33,-179,-112,33,33,33,33,33,33,33,33,33,33,33,]),'NEQ':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,129,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,129,-99,-94,-91,-97,-96,129,-92,-101,-93,-95,129,129,-100,129,-78,-59,-169,-75,-56,-57,-76,]),'CHAR':([6,76,83,101,141,165,190,214,225,244,258,300,301,313,333,334,],[-17,-15,159,159,159,159,159,-16,159,159,159,159,159,159,159,159,]),'IF':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,65,71,80,85,87,88,94,95,103,108,109,116,118,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[27,27,-2,65,-7,-5,27,-4,-6,65,65,-8,65,65,27,-115,65,65,27,65,65,-131,-3,65,-113,27,27,-116,65,-24,-9,-126,-125,-127,-130,-128,-129,27,-18,65,65,27,65,65,-179,-112,65,65,65,65,65,65,27,27,65,65,65,65,27,65,65,27,65,65,65,27,27,27,27,27,27,65,27,]),'TO':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,245,246,247,248,278,282,284,303,305,307,309,311,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,-162,-105,-106,-111,-170,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-152,279,-155,-75,279,279,-81,-57,279,-153,-76,-82,]),'INT':([6,76,83,101,141,165,190,214,225,244,258,300,301,313,333,334,],[-17,-15,152,152,152,152,152,-16,152,152,152,152,152,152,152,152,]),'SCONST':([9,27,31,41,42,61,65,71,72,85,87,88,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,168,170,174,175,176,177,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[66,66,66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-126,-125,-127,-130,-128,-129,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'UPPER':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[29,29,-2,29,-7,-5,29,-4,-6,29,29,-8,29,29,29,-115,29,29,29,29,29,29,29,29,-131,-3,29,-113,29,29,-116,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-24,-9,-126,-125,-127,-130,-128,-129,29,-18,29,29,29,29,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'PRINT':([0,7,8,9,15,21,22,24,25,27,31,38,41,42,47,49,61,65,71,72,73,80,85,87,88,94,95,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,148,168,170,174,175,176,177,180,182,185,186,189,192,196,217,218,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[16,16,-2,16,-7,-5,16,-4,-6,16,16,-8,16,16,16,-115,16,16,16,16,16,16,16,16,-131,-3,16,-113,16,16,-116,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-24,-9,-126,-125,-127,-130,-128,-129,16,-18,16,16,16,16,16,-179,-112,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'MINUS':([1,2,6,9,19,23,27,31,39,41,42,50,51,52,53,54,55,56,57,58,60,62,63,64,65,66,67,69,70,71,75,85,87,88,90,95,104,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,168,170,174,175,176,177,178,185,186,187,192,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,221,222,224,225,228,229,230,231,237,248,249,251,252,266,279,288,297,299,301,303,309,333,],[-160,-60,-17,61,84,-56,61,61,-159,61,61,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,61,-74,121,-107,-110,61,-66,61,61,-131,-58,61,-162,61,-105,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-106,-111,-126,-125,-127,-130,-128,-129,-170,61,61,-161,61,61,-98,121,-99,121,121,-97,121,121,121,-101,121,121,121,121,-100,121,-78,61,61,61,61,61,61,-59,-169,61,-75,61,61,61,-56,61,61,61,61,61,-57,-76,61,]),'SYN':([0,8,15,21,22,24,25,38,94,103,143,148,182,217,218,290,314,315,317,330,331,332,338,],[32,-2,-7,-5,32,-4,-6,-8,-3,-113,-24,-9,-18,-179,-112,32,32,32,32,32,32,32,32,]),'NULL':([9,27,31,41,42,61,65,71,72,85,87,88,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,168,170,174,175,176,177,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[63,63,63,63,63,63,63,63,63,63,63,-131,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-126,-125,-127,-130,-128,-129,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'TIMES':([1,2,6,19,23,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-60,-17,89,-56,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,123,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,123,123,-99,123,123,123,123,123,123,-101,123,123,123,123,-100,123,-78,-59,-169,-75,-56,-57,-76,]),'EQ':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,125,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,125,-99,-94,-91,-97,-96,125,-92,-101,-93,-95,125,125,-100,125,-78,-59,-169,-75,-56,-57,-76,]),'CHARS':([6,76,83,101,141,165,214,258,300,313,334,],[-17,-15,167,167,167,167,-16,167,167,167,167,]),'OD':([47,49,103,108,116,189,218,],[115,-115,-113,188,-116,241,-112,]),'COMMA':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,76,77,78,79,81,82,83,90,99,100,101,104,105,106,119,138,139,150,151,152,153,154,155,156,157,159,160,161,162,163,164,166,172,173,178,179,187,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,220,223,226,230,231,236,238,239,240,248,255,257,258,262,265,267,268,272,273,276,284,294,295,296,298,302,303,309,311,316,319,320,321,322,323,324,325,339,340,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-15,140,142,-25,147,-10,140,-58,-19,183,140,-162,186,-163,-105,-106,-111,-41,-13,-36,-29,-30,-45,-33,-37,-38,-35,-34,-32,-46,-28,-31,229,-63,-170,186,-161,229,-63,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-16,-27,-26,-11,-12,-44,-59,-169,-20,-22,-23,-164,-75,-184,292,140,-14,-54,-53,301,-62,-64,-21,-81,-189,-186,-39,-40,-47,-57,-76,-82,-185,-188,-43,-163,-49,-55,333,-51,-52,-50,]),'ID':([0,6,7,8,9,13,15,18,21,22,24,25,27,31,32,33,38,41,42,46,47,49,61,65,71,72,73,76,80,83,85,87,88,94,95,101,103,108,109,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,147,148,165,168,170,174,175,176,177,180,182,183,185,186,189,190,192,196,214,217,218,219,221,222,224,225,228,229,232,234,237,244,249,251,252,258,274,279,288,290,292,297,299,300,301,313,314,315,317,330,331,332,333,334,338,],[6,-17,6,-2,6,6,-7,6,-5,6,-4,-6,6,6,6,6,-8,6,6,6,6,-115,6,6,6,6,6,-15,6,6,6,6,-131,-3,6,6,-113,6,6,-116,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-24,6,-9,6,-126,-125,-127,-130,-128,-129,6,-18,6,6,6,6,6,6,6,-16,-179,-112,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NOT':([1,6,9,27,31,39,41,42,50,51,52,53,54,55,56,57,58,60,62,63,64,65,66,67,69,70,71,75,85,87,88,90,95,104,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,168,170,174,175,176,177,178,185,186,187,192,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,221,222,224,225,228,229,230,231,237,248,249,251,252,266,279,288,297,299,301,303,309,333,],[-160,-17,72,72,72,-159,72,72,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,72,-74,128,-107,-110,72,-66,72,72,-131,-58,72,-162,72,-105,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-106,-111,-126,-125,-127,-130,-128,-129,-170,72,72,-161,72,72,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,128,-100,-90,-78,72,72,72,72,72,72,-59,-169,72,-75,72,72,72,-56,72,72,72,72,72,-57,-76,72,]),'ASSIGN':([1,2,6,19,23,39,60,76,77,84,86,89,90,91,92,93,101,104,110,111,150,151,152,153,154,155,156,157,159,160,161,162,163,164,166,178,184,187,214,226,230,231,296,298,302,303,322,323,340,],[-160,-60,-17,88,-56,-159,-56,-15,141,168,170,174,-58,175,176,177,185,-162,-151,192,-41,222,-36,-29,-30,-45,-33,-37,-38,-35,-34,-32,-46,-28,-31,-170,237,-161,-16,-44,-59,-169,-39,-40,-47,-57,-49,-55,-50,]),'GT':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,131,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,-98,131,-99,-94,131,-97,-96,131,131,-101,-93,-95,131,131,-100,131,-78,-59,-169,-75,-56,-57,-76,]),'ARROW':([1,2,6,9,19,23,27,31,39,41,42,50,60,61,62,65,71,72,85,87,88,90,95,104,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,168,170,174,175,176,177,178,185,186,187,192,196,221,222,224,225,228,229,230,231,237,249,251,252,266,279,288,297,299,301,303,333,],[-160,-60,-17,73,90,-56,73,73,-159,73,73,-60,-56,73,90,73,73,73,73,73,-131,-58,73,-162,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,90,-126,-125,-127,-130,-128,-129,-170,73,73,-161,73,73,73,73,73,73,73,73,-59,-169,73,73,73,73,-56,73,73,73,73,73,-57,73,]),'THEN':([1,6,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,74,75,90,96,97,104,119,120,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,284,285,303,309,311,312,],[-160,-17,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,-79,-107,-110,-80,-66,-58,180,-83,-162,-105,196,-106,-111,-170,-161,-98,-89,-99,-94,-91,-97,-96,-102,-92,-101,-93,-95,-103,-104,-100,-90,-78,-59,-169,-75,-81,196,-57,-76,-82,196,]),'DIVIDE':([1,2,6,19,23,39,50,51,52,53,54,55,56,57,58,60,62,63,64,66,67,69,70,75,90,104,119,138,139,178,187,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,230,231,248,266,303,309,],[-160,-60,-17,92,-56,-159,-60,-71,-68,-72,-70,-65,-69,-67,-109,-56,-108,-73,-88,-74,135,-107,-110,-66,-58,-162,-105,-106,-111,-170,-161,135,135,-99,135,135,135,135,135,135,-101,135,135,135,135,-100,135,-78,-59,-169,-75,-56,-57,-76,]),'PROC':([80,],[146,]),'END':([8,15,21,24,25,38,94,103,143,148,182,217,218,314,330,331,338,],[-2,-7,-5,-4,-6,-8,-3,-113,-24,-9,-18,-179,-112,329,336,337,341,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'call_action':([0,7,9,22,27,31,41,42,47,61,65,71,72,73,80,85,87,95,108,109,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,180,185,186,189,192,196,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[2,2,50,2,50,50,50,50,2,50,50,50,50,50,2,50,50,50,2,2,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,2,50,50,2,50,50,50,50,50,50,50,50,2,2,50,50,50,50,2,50,50,2,50,50,50,2,2,2,2,2,2,50,2,]),'builtin_call':([0,7,9,22,27,31,41,42,47,61,65,71,72,73,80,85,87,95,108,109,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,180,185,186,189,192,196,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'declaration_list':([18,],[81,]),'program':([0,],[5,]),'result_spec':([256,293,],[291,318,]),'primitive_value':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'element_mode':([300,334,],[322,340,]),'step_enumeration':([46,],[112,]),'step_value':([246,],[278,]),'loop_counter':([46,],[111,]),'if_action':([0,7,22,47,80,108,109,180,189,232,234,274,290,314,315,317,330,331,332,338,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'end_value':([246,278,282,305,],[281,304,308,326,]),'for_control':([7,],[48,]),'array_mode':([83,101,141,165,258,300,313,334,],[163,163,163,163,163,163,163,163,]),'literal_range':([221,224,225,299,301,333,],[259,263,265,259,265,265,]),'referenced_location':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'while_control':([7,48,],[43,117,]),'iteration':([46,],[113,]),'procedure_statement':([0,22,290,314,315,317,330,331,332,338,],[15,15,15,15,15,15,15,15,15,15,]),'control_part':([7,],[44,]),'upper_bound':([228,297,],[271,320,]),'lower_bound':([87,221,224,225,299,301,333,],[171,260,260,260,260,260,260,]),'operand':([9,27,31,41,42,65,71,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'synonym_list':([32,],[100,]),'conditional_expression':([9,27,31,41,42,65,71,85,87,95,118,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'identifier':([0,7,9,13,18,22,27,31,32,33,41,42,46,47,61,65,71,72,73,80,83,85,87,95,101,108,109,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,141,142,147,165,180,183,185,186,189,190,192,196,219,221,222,224,225,228,229,232,234,237,244,249,251,252,258,274,279,288,290,292,297,299,300,301,313,314,315,317,330,331,332,333,334,338,],[23,23,60,76,76,23,60,60,76,102,60,60,110,23,60,60,60,60,60,60,150,60,60,60,150,23,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,214,150,76,76,150,23,76,60,60,23,242,60,60,76,60,60,60,266,60,60,23,23,60,242,60,60,60,150,23,60,60,23,76,60,60,150,266,150,23,23,23,23,23,23,266,150,23,]),'index_mode_list':([301,],[324,]),'builtin_name':([0,7,9,22,27,31,41,42,47,61,65,71,72,73,80,85,87,95,108,109,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,180,185,186,189,192,196,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'mode':([83,101,141,165,258,300,313,334,],[151,184,215,226,294,323,294,323,]),'string_mode':([83,101,141,165,258,300,313,334,],[155,155,155,155,155,155,155,155,]),'start_value':([192,],[246,]),'boolean_mode':([83,101,141,165,190,225,244,258,300,301,313,333,334,],[156,156,156,156,156,156,156,156,156,156,156,156,156,]),'formal_parameter_list':([219,],[257,]),'range_enumeration':([46,],[114,]),'binop':([9,27,31,41,42,65,71,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[67,67,67,67,67,67,67,67,67,67,67,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'assigning_operator':([19,],[85,]),'character_mode':([83,101,141,165,190,225,244,258,300,301,313,333,334,],[161,161,161,161,161,161,161,161,161,161,161,161,161,]),'integer_mode':([83,101,141,165,190,225,244,258,300,301,313,333,334,],[162,162,162,162,162,162,162,162,162,162,162,162,162,]),'then_clause':([96,],[181,]),'return_action':([0,7,22,47,80,108,109,180,189,232,234,274,290,314,315,317,330,331,332,338,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'exit_action':([0,7,22,47,80,108,109,180,189,232,234,274,290,314,315,317,330,331,332,338,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'discrete_expression':([192,279,],[245,306,]),'index_mode':([225,301,333,],[268,325,339,]),'value_array_element':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'assignment_action':([0,7,22,47,80,108,109,180,189,232,234,274,290,314,315,317,330,331,332,338,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'procedure_call':([0,7,9,22,27,31,41,42,47,61,65,71,72,73,80,85,87,95,108,109,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,180,185,186,189,192,196,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'discrete_mode_name':([0,7,9,22,27,31,41,42,47,61,65,71,72,73,80,83,85,87,95,101,108,109,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,141,165,180,185,186,189,190,192,196,221,222,224,225,228,229,232,234,237,244,249,251,252,258,274,279,288,290,297,299,300,301,313,314,315,317,330,331,332,333,334,338,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,149,4,4,4,149,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,149,149,4,4,4,4,149,4,4,4,4,4,264,4,4,4,4,4,149,4,4,4,149,4,4,4,4,4,4,149,264,149,4,4,4,4,4,4,264,149,4,]),'formal_parameter':([219,292,],[255,316,]),'parenthesized_expression':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'action':([0,7,22,47,80,108,109,180,189,232,234,274,290,314,315,317,330,331,332,338,],[40,40,40,40,145,40,145,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'statement':([0,22,290,314,315,317,330,331,332,338,],[8,94,8,94,8,8,94,94,8,94,]),'declaration':([18,147,],[82,220,]),'reference_mode':([83,101,141,165,258,300,313,334,],[154,154,154,154,154,154,154,154,]),'parameter_list':([41,95,299,],[105,179,105,]),'constant_expression':([185,237,],[238,276,]),'literal':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'discrete_range_mode':([83,101,141,165,190,225,244,258,300,301,313,333,334,],[160,160,160,160,160,160,160,160,160,160,160,160,160,]),'result_action':([0,7,22,47,80,108,109,180,189,232,234,274,290,314,315,317,330,331,332,338,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'value_array_slice':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'else_expression':([195,253,],[250,287,]),'elsif_expression':([195,],[253,]),'else_clause':([181,],[235,]),'array_primitive_value':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'mode_definition':([13,142,],[79,216,]),'composite_mode':([83,101,141,165,258,300,313,334,],[166,166,166,166,166,166,166,166,]),'then_expression':([120,285,312,],[195,310,327,]),'label_id':([0,7,22,47,108,180,189,232,234,274,290,314,315,317,330,331,332,338,],[17,45,17,45,45,45,45,45,45,45,17,17,17,17,17,17,17,17,]),'synonym_definition':([32,183,],[99,236,]),'boolean_expression':([27,42,65,251,288,],[96,107,120,285,312,]),'location':([0,7,9,22,27,31,41,42,47,61,65,71,72,73,80,85,87,95,108,109,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,180,185,186,189,192,196,221,222,224,225,228,229,232,234,237,249,251,252,274,279,288,290,297,299,301,314,315,317,330,331,332,333,338,],[19,19,62,19,62,62,62,62,19,62,62,62,62,139,19,62,62,62,19,19,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,19,62,62,19,62,62,62,62,62,62,62,62,19,19,62,62,62,62,19,62,62,19,62,62,62,19,19,19,19,19,19,62,19,]),'string_length':([227,],[269,]),'synonym_statement':([0,22,290,314,315,317,330,331,332,338,],[21,21,21,21,21,21,21,21,21,21,]),'statement_list':([0,290,315,317,332,],[22,314,330,331,338,]),'declaration_statement':([0,22,290,314,315,317,330,331,332,338,],[24,24,24,24,24,24,24,24,24,24,]),'newmode_statement':([0,22,290,314,315,317,330,331,332,338,],[25,25,25,25,25,25,25,25,25,25,]),'procedure_definition':([80,],[144,]),'discrete_mode':([83,101,141,165,190,225,244,258,300,301,313,333,334,],[153,153,153,153,243,267,277,153,153,267,153,267,153,]),'expression_list':([87,118,],[172,193,]),'expression':([9,27,31,41,42,65,71,85,87,95,118,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[68,97,98,106,97,97,137,169,173,106,194,239,240,247,254,261,262,261,261,272,273,239,283,97,286,247,97,272,321,261,261,]),'operand1':([9,27,31,41,42,61,65,71,72,85,87,95,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,185,186,192,196,221,222,224,225,228,229,237,249,251,252,279,288,297,299,301,333,],[69,69,69,69,69,119,69,69,138,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'action_statement_list':([7,108,180,234,],[47,189,232,274,]),'parameter_spec':([258,313,],[295,328,]),'mode_name':([83,101,141,165,258,300,313,334,],[164,164,164,164,164,164,164,164,]),'identifier_list':([13,18,32,142,147,183,219,292,],[77,83,101,77,83,101,258,258,]),'initialization':([151,],[223,]),'newmode_list':([13,],[78,]),'do_action':([0,7,22,47,80,108,109,180,189,232,234,274,290,314,315,317,330,331,332,338,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'action_statement':([0,7,22,47,108,180,189,232,234,274,290,314,315,317,330,331,332,338,],[38,49,38,116,49,49,116,116,49,116,38,38,38,38,38,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
