
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BCB76B988C5B397460AF8F9DA7CB224E'
    
_lr_action_items = {'COMMA':([20,23,24,42,43,44,45,46,64,65,66,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,96,97,98,106,107,108,110,111,112,113,114,116,117,118,121,122,124,125,133,134,150,153,170,179,180,181,182,183,186,189,190,192,195,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,230,231,232,233,235,245,247,248,249,252,254,263,269,271,272,273,274,277,279,280,284,295,300,301,304,305,306,307,308,309,315,317,322,325,335,336,],[-17,-160,-159,105,115,-15,-10,-58,-25,115,149,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-19,115,178,-31,-41,-29,-37,-34,-28,-32,-30,-45,-46,-13,-33,-35,-36,-38,-63,196,-111,-106,-105,-163,-162,234,-170,234,-11,-16,-12,-44,-59,-27,-26,-63,196,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-22,-23,-20,-161,-169,-14,-53,-54,282,-64,-62,-75,-184,115,303,-21,-164,-40,-47,-39,-57,-81,-189,-186,-43,-49,-55,327,-51,-163,-76,-82,-188,-185,-50,-52,]),'GT':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,155,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,155,-98,155,-99,155,-97,-101,155,-95,-100,155,155,155,-161,-169,-56,-75,-57,-76,]),'FOR':([6,],[57,]),'EXIT':([0,2,6,10,11,13,17,22,32,41,60,62,94,95,104,142,143,145,148,177,185,202,227,228,236,239,275,299,319,321,324,330,333,334,339,],[21,21,21,-6,-5,-4,-8,-7,-2,-3,-115,21,-113,21,-9,21,21,-116,-24,-18,21,21,-179,-112,21,21,21,21,21,21,21,21,21,21,21,]),'CHARS':([20,43,44,97,119,147,189,271,281,320,326,],[-17,109,-15,109,109,109,-16,109,109,109,109,]),'REF':([20,43,44,97,119,147,189,271,281,320,326,],[-17,119,-15,119,119,119,-16,119,119,119,119,]),'READ':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[4,4,4,-6,-5,-4,4,-8,-7,-2,4,4,-3,4,-131,4,-115,4,4,4,4,4,4,4,-113,4,4,4,-9,-126,-130,-125,-129,-128,-127,4,4,-116,-24,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-18,4,4,4,4,4,4,4,4,4,4,-179,-112,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'CONCAT':([5,7,18,20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[48,-56,-60,-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,161,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-56,-75,-57,-76,]),'PLUS':([5,7,18,20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[49,-56,-60,-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,162,-70,-65,-111,-106,-105,-162,-170,-59,-78,162,162,162,162,-98,162,-99,162,-97,-101,162,162,-100,162,162,162,-161,-169,-56,-75,-57,-76,]),'THEN':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,102,103,150,153,170,171,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,263,284,295,296,315,316,317,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-83,185,-111,-106,-105,224,-162,-170,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-75,-57,-81,224,-76,224,-82,]),'RETURNS':([270,302,],[298,298,]),'RPAREN':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,100,101,106,107,108,110,111,112,113,114,116,117,121,122,124,125,150,152,153,170,179,180,181,182,183,192,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,226,233,235,241,246,254,263,269,272,274,277,279,280,283,284,295,300,301,304,305,306,309,315,317,322,325,331,335,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,180,182,-31,-41,-29,-37,-34,-28,-32,-30,-45,-46,-33,-35,-36,-38,-111,207,-106,-105,-163,-162,233,-170,235,-44,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,270,-161,-169,277,280,-62,-75,-184,302,-164,-40,-47,-39,180,-57,-81,-189,-186,-43,-49,-55,-163,-76,-82,-188,-185,338,-50,]),'PROC':([95,],[172,]),'LPAREN':([4,7,12,16,20,26,27,29,33,34,35,36,38,39,40,53,54,55,63,74,79,81,88,92,100,101,107,108,110,111,113,120,121,122,124,125,126,127,128,129,130,131,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,176,187,191,193,194,196,197,199,224,229,234,247,250,251,255,256,262,266,268,277,278,280,282,283,287,290,292,298,327,],[-177,-42,-171,74,-17,-173,-176,-172,74,-178,100,101,-174,-175,74,74,-131,74,74,74,-42,74,74,74,74,74,-42,187,-37,-34,-32,193,-33,-35,-36,-38,-126,-130,-125,-129,-128,-127,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,226,74,74,74,74,74,74,74,74,74,74,74,187,-42,283,-42,187,74,74,74,-40,74,-39,74,74,74,187,74,320,74,]),'LE':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,154,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,154,-98,154,-99,154,-97,-101,154,-95,-100,154,154,154,-161,-169,-56,-75,-57,-76,]),'ARROW':([5,7,16,18,20,23,24,33,40,46,53,54,55,63,74,76,79,81,85,88,92,100,101,126,127,128,129,130,131,150,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,180,182,187,191,193,194,195,196,197,199,224,229,233,234,235,250,262,266,268,278,282,283,284,287,292,327,],[46,-56,71,-60,-17,-160,-159,71,71,-58,71,-131,71,71,71,-60,-56,71,46,71,71,71,71,-126,-130,-125,-129,-128,-127,46,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-162,-170,71,71,71,71,-59,71,71,71,71,71,-161,71,-169,-56,71,71,71,71,71,71,-57,71,71,71,]),'GE':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,156,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,156,-98,156,-99,156,-97,-101,156,-95,-100,156,156,156,-161,-169,-56,-75,-57,-76,]),'CHAR':([20,43,44,97,119,147,189,194,198,260,271,281,282,320,326,327,],[-17,125,-15,125,125,125,-16,125,125,125,125,125,125,125,125,125,]),'DCL':([0,2,10,11,13,17,22,32,41,94,104,148,177,227,228,299,319,321,324,330,333,334,339,],[3,3,-6,-5,-4,-8,-7,-2,-3,-113,-9,-24,-18,-179,-112,3,3,3,3,3,3,3,3,]),'RETURN':([0,2,6,10,11,13,17,22,32,41,60,62,94,95,104,142,143,145,148,177,185,202,227,228,236,239,275,299,319,321,324,330,333,334,339,],[16,16,16,-6,-5,-4,-8,-7,-2,-3,-115,16,-113,16,-9,16,16,-116,-24,-18,16,16,-179,-112,16,16,16,16,16,16,16,16,16,16,16,]),'TYPE':([0,2,10,11,13,17,22,32,41,94,104,148,177,227,228,299,319,321,324,330,333,334,339,],[14,14,-6,-5,-4,-8,-7,-2,-3,-113,-9,-24,-18,-179,-112,14,14,14,14,14,14,14,14,]),'TIMES':([5,7,18,20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[52,-56,-60,-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,160,-70,-65,-111,-106,-105,-162,-170,-59,-78,160,160,160,160,160,160,-99,160,160,-101,160,160,-100,160,160,160,-161,-169,-56,-75,-57,-76,]),'PRED':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[29,29,29,-6,-5,-4,29,-8,-7,-2,29,29,-3,29,-131,29,-115,29,29,29,29,29,29,29,-113,29,29,29,-9,-126,-130,-125,-129,-128,-127,29,29,-116,-24,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-18,29,29,29,29,29,29,29,29,29,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'OD':([60,62,94,142,145,202,228,],[-115,144,-113,201,-116,261,-112,]),'ICONST':([16,33,40,53,54,55,63,74,81,88,92,100,101,126,127,128,129,130,131,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,188,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,288,292,327,],[73,73,73,73,-131,73,73,73,73,73,73,73,73,-126,-130,-125,-129,-128,-127,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,243,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,313,73,73,]),'ELSIF':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,233,235,263,264,265,284,295,315,317,318,329,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,268,-161,-169,-75,-84,292,-57,-81,-76,-82,-86,-87,]),'$end':([2,10,11,13,17,22,32,37,41,94,104,148,177,227,228,],[-1,-6,-5,-4,-8,-7,-2,0,-3,-113,-9,-24,-18,-179,-112,]),'INT':([20,43,44,97,119,147,189,194,198,260,271,281,282,320,326,327,],[-17,124,-15,124,124,124,-16,124,124,124,124,124,124,124,124,124,]),'RESULT':([0,2,6,10,11,13,17,22,32,41,60,62,94,95,104,142,143,145,148,177,185,202,227,228,236,239,275,299,319,321,324,330,333,334,339,],[33,33,33,-6,-5,-4,-8,-7,-2,-3,-115,33,-113,33,-9,33,33,-116,-24,-18,33,33,-179,-112,33,33,33,33,33,33,33,33,33,33,33,]),'NUM':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[12,12,12,-6,-5,-4,12,-8,-7,-2,12,12,-3,12,-131,12,-115,12,12,12,12,12,12,12,-113,12,12,12,-9,-126,-130,-125,-129,-128,-127,12,12,-116,-24,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-18,12,12,12,12,12,12,12,12,12,12,-179,-112,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SEMI':([1,8,9,15,16,18,19,20,23,24,25,28,42,45,46,56,58,59,64,66,67,68,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,93,96,98,99,102,106,107,108,110,111,112,113,114,116,117,118,121,122,124,125,132,136,137,139,141,144,146,150,153,170,173,174,180,182,186,190,192,195,201,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,230,231,232,233,235,238,245,256,257,261,263,270,273,276,277,279,280,284,286,290,295,297,302,305,306,310,312,314,315,317,323,328,332,335,337,338,340,341,],[-119,-122,-118,-121,-167,-120,-123,-17,-160,-159,-117,94,104,-10,-58,-142,142,-143,-25,148,-67,-166,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-165,-19,177,-168,-83,-31,-41,-29,-37,-34,-28,-32,-30,-45,-46,-13,-33,-35,-36,-38,-124,-141,-144,-146,-145,-140,-158,-111,-106,-105,227,228,-162,-170,-11,-12,-44,-59,-139,-27,-26,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-22,-23,-20,-161,-169,-133,-14,-157,-155,-138,-75,299,-21,-132,-40,-47,-39,-57,-150,-156,-81,319,324,-49,-55,-149,-154,-148,-76,-82,333,-147,-183,-50,-182,-187,-181,-180,]),'SCONST':([16,33,40,53,54,55,63,74,81,88,92,100,101,126,127,128,129,130,131,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[78,78,78,78,-131,78,78,78,78,78,78,78,78,-126,-130,-125,-129,-128,-127,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RBRACKET':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,110,111,113,121,122,124,125,133,134,150,153,170,180,182,195,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,243,244,247,248,249,252,253,254,263,277,280,284,291,295,304,307,308,315,317,336,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-37,-34,-32,-33,-35,-36,-38,-63,195,-111,-106,-105,-162,-170,-59,-63,263,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-48,279,-53,-54,281,-64,284,-62,-75,-40,-39,-57,315,-81,-43,326,-51,-76,-82,-52,]),'SUCC':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[26,26,26,-6,-5,-4,26,-8,-7,-2,26,26,-3,26,-131,26,-115,26,26,26,26,26,26,26,-113,26,26,26,-9,-126,-130,-125,-129,-128,-127,26,26,-116,-24,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-18,26,26,26,26,26,26,26,26,26,26,-179,-112,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IN':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,138,140,150,153,170,180,182,195,200,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,157,-70,-65,-151,198,-111,-106,-105,-162,-170,-59,260,-78,-96,-93,-94,-103,-98,-92,-99,157,-97,-101,157,-95,-100,-90,-91,-89,-161,-169,-56,-75,-57,-76,]),'LENGTH':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[27,27,27,-6,-5,-4,27,-8,-7,-2,27,27,-3,27,-131,27,-115,27,27,27,27,27,27,27,-113,27,27,27,-9,-126,-130,-125,-129,-128,-127,27,27,-116,-24,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-18,27,27,27,27,27,27,27,27,27,27,-179,-112,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'BY':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,257,258,259,263,284,295,315,317,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-155,288,-152,-75,-57,-81,-76,-82,]),'END':([10,11,13,17,22,32,41,94,104,148,177,227,228,321,330,334,339,],[-6,-5,-4,-8,-7,-2,-3,-113,-9,-24,-18,-179,-112,332,337,340,341,]),'SYN':([0,2,10,11,13,17,22,32,41,94,104,148,177,227,228,299,319,321,324,330,333,334,339,],[31,31,-6,-5,-4,-8,-7,-2,-3,-113,-9,-24,-18,-179,-112,31,31,31,31,31,31,31,31,]),'NOT':([16,20,23,24,33,40,46,53,54,55,63,67,69,70,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,92,100,101,126,127,128,129,130,131,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,176,180,182,187,191,193,194,195,196,197,199,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,233,234,235,250,262,263,266,268,278,282,283,284,287,292,315,327,],[81,-17,-160,-159,81,81,-58,81,-131,81,81,-67,-109,-68,-69,81,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,164,-70,-65,81,81,81,-126,-130,-125,-129,-128,-127,-111,81,-106,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-105,81,-162,-170,81,81,81,81,-59,81,81,81,-78,-96,-93,-94,-103,-98,-92,-99,164,-97,-101,-102,-95,-100,-90,-91,-89,81,81,-161,81,-169,-56,81,-75,81,81,81,81,81,-57,81,81,-76,81,]),'TRUE':([16,33,40,53,54,55,63,74,81,88,92,100,101,126,127,128,129,130,131,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[82,82,82,82,-131,82,82,82,82,82,82,82,82,-126,-130,-125,-129,-128,-127,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'BOOL':([20,43,44,97,119,147,189,194,198,260,271,281,282,320,326,327,],[-17,110,-15,110,110,110,-16,110,110,110,110,110,110,110,110,110,]),'NULL':([16,33,40,53,54,55,63,74,81,88,92,100,101,126,127,128,129,130,131,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[83,83,83,83,-131,83,83,83,83,83,83,83,83,-126,-130,-125,-129,-128,-127,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'LBRACKET':([5,7,18,20,23,24,46,67,70,72,73,76,78,79,80,82,83,84,85,86,89,90,109,123,150,180,182,195,207,233,235,250,263,284,315,],[55,-56,-60,-17,-160,-159,-58,-67,-68,151,-69,-60,-74,-56,-77,-71,-73,-66,55,-72,-70,-65,188,194,55,-162,-170,-59,-78,-161,-169,-56,-75,-57,-76,]),'LOWER':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[39,39,39,-6,-5,-4,39,-8,-7,-2,39,39,-3,39,-131,39,-115,39,39,39,39,39,39,39,-113,39,39,39,-9,-126,-130,-125,-129,-128,-127,39,39,-116,-24,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-18,39,39,39,39,39,39,39,39,39,39,-179,-112,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PRINT':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[34,34,34,-6,-5,-4,34,-8,-7,-2,34,34,-3,34,-131,34,-115,34,34,34,34,34,34,34,-113,34,34,34,-9,-126,-130,-125,-129,-128,-127,34,34,-116,-24,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-18,34,34,34,34,34,34,34,34,34,34,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ID':([0,2,3,6,10,11,13,14,16,17,20,21,22,31,32,33,40,41,43,44,53,54,55,57,60,62,63,71,74,81,88,92,94,95,97,100,101,104,105,115,119,126,127,128,129,130,131,142,143,145,147,148,149,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,178,185,187,189,191,193,194,196,197,198,199,202,224,226,227,228,229,234,236,239,260,262,266,268,271,275,278,281,282,283,287,292,299,303,319,320,321,324,326,327,330,333,334,339,],[20,20,20,20,-6,-5,-4,20,20,-8,-17,20,-7,20,-2,20,20,-3,20,-15,20,-131,20,20,-115,20,20,20,20,20,20,20,-113,20,20,20,20,-9,20,20,20,-126,-130,-125,-129,-128,-127,20,20,-116,20,-24,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-18,20,20,20,-16,20,20,20,20,20,20,20,20,20,20,-179,-112,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'CCONST':([16,33,40,53,54,55,63,74,81,88,92,100,101,126,127,128,129,130,131,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[86,86,86,86,-131,86,86,86,86,86,86,86,86,-126,-130,-125,-129,-128,-127,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'DO':([0,2,6,10,11,13,17,22,32,41,60,62,94,95,104,142,143,145,148,177,185,202,227,228,236,239,275,299,319,321,324,330,333,334,339,],[6,6,6,-6,-5,-4,-8,-7,-2,-3,-115,6,-113,6,-9,6,6,-116,-24,-18,6,6,-179,-112,6,6,6,6,6,6,6,6,6,6,6,]),'TO':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,257,258,259,263,284,285,289,295,311,313,315,317,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-155,287,-152,-75,-57,287,287,-81,287,-153,-76,-82,]),'WHILE':([6,20,23,24,46,56,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,110,111,113,121,122,124,125,137,139,141,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,256,257,263,277,280,284,286,290,295,310,312,314,315,317,328,],[63,-17,-160,-159,-58,63,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-37,-34,-32,-33,-35,-36,-38,-144,-146,-145,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-157,-155,-75,-40,-39,-57,-150,-156,-81,-149,-154,-148,-76,-82,-147,]),'DOWN':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,138,140,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,257,258,259,263,284,285,295,313,315,317,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-151,200,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-155,289,-152,-75,-57,311,-81,-153,-76,-82,]),'MINUS':([5,7,16,18,20,23,24,33,40,46,53,54,55,63,67,69,70,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,92,100,101,126,127,128,129,130,131,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,176,180,182,187,191,193,194,195,196,197,199,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,233,234,235,250,262,263,266,268,278,282,283,284,287,292,315,327,],[47,-56,88,-60,-17,-160,-159,88,88,-58,88,-131,88,88,-67,-109,-68,-69,88,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,158,-70,-65,88,88,88,-126,-130,-125,-129,-128,-127,-111,88,-106,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-105,88,-162,-170,88,88,88,88,-59,88,88,88,-78,158,158,158,158,-98,158,-99,158,-97,-101,158,158,-100,158,158,158,88,88,-161,88,-169,-56,88,-75,88,88,88,88,88,-57,88,88,-76,88,]),'NEQ':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,159,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,159,-98,-92,-99,159,-97,-101,159,-95,-100,159,-91,159,-161,-169,-56,-75,-57,-76,]),'FALSE':([16,33,40,53,54,55,63,74,81,88,92,100,101,126,127,128,129,130,131,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[89,89,89,89,-131,89,89,89,89,89,89,89,89,-126,-130,-125,-129,-128,-127,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'EQ':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,168,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,168,-98,-92,-99,168,-97,-101,168,-95,-100,168,-91,168,-161,-169,-56,-75,-57,-76,]),'ELSE':([20,23,24,46,60,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,94,145,150,153,170,180,182,184,185,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,228,233,235,239,263,264,265,284,295,315,317,318,329,],[-17,-160,-159,-58,-115,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-113,-116,-111,-106,-105,-162,-170,236,-135,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,266,-112,-161,-169,-134,-75,-84,266,-57,-81,-76,-82,-86,-87,]),'FI':([20,23,24,46,60,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,94,145,150,153,170,180,182,184,185,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,228,233,235,236,237,239,263,267,275,284,293,294,295,315,317,],[-17,-160,-159,-58,-115,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-113,-116,-111,-106,-105,-162,-170,238,-135,-59,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-112,-161,-169,-137,276,-134,-75,295,-136,-57,317,-85,-81,-76,-82,]),'LOC':([20,106,107,108,110,111,112,113,114,116,117,121,122,124,125,192,277,279,280,300,305,306,335,],[-17,-31,-41,-29,-37,-34,-28,-32,-30,-45,-46,-33,-35,-36,-38,-44,-40,-47,-39,322,-49,-55,-50,]),'MOD':([5,7,18,20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[50,-56,-60,-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,163,-70,-65,-111,-106,-105,-162,-170,-59,-78,163,163,163,163,163,163,-99,163,163,-101,163,163,-100,163,163,163,-161,-169,-56,-75,-57,-76,]),'AND':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,169,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,169,-98,-92,-99,169,-97,-101,169,-95,-100,169,-91,-89,-161,-169,-56,-75,-57,-76,]),'UPPER':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,71,74,81,88,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[38,38,38,-6,-5,-4,38,-8,-7,-2,38,38,-3,38,-131,38,-115,38,38,38,38,38,38,38,-113,38,38,38,-9,-126,-130,-125,-129,-128,-127,38,38,-116,-24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-18,38,38,38,38,38,38,38,38,38,38,-179,-112,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LT':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,165,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,165,-98,165,-99,165,-97,-101,165,-95,-100,165,165,165,-161,-169,-56,-75,-57,-76,]),'DIVIDE':([5,7,18,20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[51,-56,-60,-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,166,-70,-65,-111,-106,-105,-162,-170,-59,-78,166,166,166,166,166,166,-99,166,166,-101,166,166,-100,166,166,166,-161,-169,-56,-75,-57,-76,]),'ARRAY':([20,43,44,97,119,147,189,271,281,320,326,],[-17,123,-15,123,123,123,-16,123,123,123,123,]),'OR':([20,23,24,46,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,150,153,170,180,182,195,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,250,263,284,315,],[-17,-160,-159,-58,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,167,-70,-65,-111,-106,-105,-162,-170,-59,-78,-96,-93,-94,167,-98,-92,-99,167,-97,-101,167,-95,-100,-90,-91,-89,-161,-169,-56,-75,-57,-76,]),'ASSIGN':([5,7,18,20,23,24,44,46,47,48,49,50,51,52,65,79,97,106,107,108,110,111,112,113,114,116,117,118,121,122,124,125,138,140,175,180,182,189,192,195,233,235,277,279,280,284,305,306,335,],[54,-56,-60,-17,-160,-159,-15,-58,126,127,128,129,130,131,147,-56,176,-31,-41,-29,-37,-34,-28,-32,-30,-45,-46,191,-33,-35,-36,-38,-151,199,229,-162,-170,-16,-44,-59,-161,-169,-40,-47,-39,-57,-49,-55,-50,]),'IF':([0,2,6,10,11,13,16,17,22,32,33,40,41,53,54,55,60,62,63,74,92,94,95,100,101,104,126,127,128,129,130,131,142,143,145,148,151,176,177,185,187,191,193,194,196,197,199,202,224,227,228,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[40,40,40,-6,-5,-4,92,-8,-7,-2,92,92,-3,92,-131,92,-115,40,92,92,92,-113,40,92,92,-9,-126,-130,-125,-129,-128,-127,40,40,-116,-24,92,92,-18,40,92,92,92,92,92,92,92,40,92,-179,-112,92,92,40,40,92,92,92,40,92,92,92,92,92,40,40,40,40,92,40,40,40,40,]),'COLON':([7,20,23,24,30,46,61,67,69,70,73,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,133,135,150,153,170,180,182,195,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,235,240,242,250,263,284,295,309,315,317,],[-114,-17,-160,-159,95,-58,143,-67,-109,-68,-69,-107,-60,-88,-74,-56,-110,-71,-73,-66,-108,-72,-79,-70,-65,-80,-61,197,-111,-106,-105,-162,-170,-59,262,-78,-96,-93,-94,-103,-98,-92,-99,-104,-97,-101,-102,-95,-100,-90,-91,-89,-161,-169,-61,278,-56,-75,-57,-81,-61,-76,-82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment_action':([0,2,6,62,95,142,143,185,202,236,239,275,299,319,321,324,330,333,334,339,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'for_control':([6,],[56,]),'upper_bound':([197,278,],[253,304,]),'newmode_list':([14,],[66,]),'then_expression':([171,296,316,],[225,318,329,]),'constant_expression':([176,229,],[230,273,]),'expression':([16,33,40,53,55,63,74,92,100,101,151,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[68,99,102,132,133,102,152,102,179,179,205,231,240,245,240,240,252,254,257,264,231,274,291,294,102,254,240,309,257,102,240,]),'return_action':([0,2,6,62,95,142,143,185,202,236,239,275,299,319,321,324,330,333,334,339,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'referenced_location':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'boolean_mode':([43,97,119,147,194,198,260,271,281,282,320,326,327,],[121,121,121,121,121,121,121,121,121,121,121,121,121,]),'formal_parameter_list':([226,],[272,]),'index_mode_list':([282,],[307,]),'if_action':([0,2,6,62,95,142,143,185,202,236,239,275,299,319,321,324,330,333,334,339,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'composite_mode':([43,97,119,147,271,281,320,326,],[106,106,106,106,106,106,106,106,]),'range_enumeration':([57,],[139,]),'expression_list':([55,151,],[134,206,]),'exit_action':([0,2,6,62,95,142,143,185,202,236,239,275,299,319,321,324,330,333,334,339,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while_control':([6,56,],[59,136,]),'operand1':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[75,75,75,75,75,75,75,153,170,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'call_action':([0,2,6,16,33,40,53,55,62,63,71,74,81,88,92,95,100,101,142,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,185,187,191,193,194,196,197,199,202,224,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[18,18,18,76,76,76,76,76,18,76,76,76,76,76,76,18,76,76,18,18,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,18,76,76,76,76,76,76,76,18,76,76,76,18,18,76,76,76,18,76,76,76,76,76,18,18,18,18,76,18,18,18,18,]),'index_mode':([194,282,327,],[249,308,336,]),'procedure_definition':([95,],[173,]),'iteration':([57,],[137,]),'step_enumeration':([57,],[141,]),'else_expression':([225,265,],[267,293,]),'integer_mode':([43,97,119,147,194,198,260,271,281,282,320,326,327,],[113,113,113,113,113,113,113,113,113,113,113,113,113,]),'result_spec':([270,302,],[297,323,]),'primitive_value':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'declaration_statement':([0,2,299,319,321,324,330,333,334,339,],[13,13,13,13,13,13,13,13,13,13,]),'location':([0,2,6,16,33,40,53,55,62,63,71,74,81,88,92,95,100,101,142,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,185,187,191,193,194,196,197,199,202,224,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[5,5,5,85,85,85,85,85,5,85,150,85,85,85,85,5,85,85,5,5,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,5,85,85,85,85,85,85,85,5,85,85,85,5,5,85,85,85,5,85,85,85,85,85,5,5,5,5,85,5,5,5,5,]),'mode_name':([43,97,119,147,271,281,320,326,],[112,112,112,112,112,112,112,112,]),'statement':([0,2,299,319,321,324,330,333,334,339,],[32,41,32,32,41,32,41,32,41,41,]),'value_array_element':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'parameter_list':([100,101,283,],[181,183,181,]),'character_mode':([43,97,119,147,194,198,260,271,281,282,320,326,327,],[111,111,111,111,111,111,111,111,111,111,111,111,111,]),'then_clause':([103,],[184,]),'action_statement_list':([6,142,185,236,],[62,202,239,275,]),'parenthesized_expression':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'else_clause':([184,],[237,]),'binop':([16,33,40,53,55,63,74,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[87,87,87,87,87,87,87,87,87,87,87,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'synonym_list':([31,],[98,]),'builtin_name':([0,2,6,16,33,40,53,55,62,63,71,74,81,88,92,95,100,101,142,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,185,187,191,193,194,196,197,199,202,224,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'parameter_spec':([271,320,],[301,331,]),'element_mode':([281,326,],[305,335,]),'lower_bound':([55,187,193,194,282,283,327,],[135,242,242,242,242,242,242,]),'mode':([43,97,119,147,271,281,320,326,],[118,175,192,203,300,306,300,306,]),'discrete_expression':([199,287,],[259,312,]),'discrete_mode':([43,97,119,147,194,198,260,271,281,282,320,326,327,],[108,108,108,108,247,256,290,108,108,247,108,108,247,]),'initialization':([118,],[190,]),'step_value':([258,],[285,]),'do_action':([0,2,6,62,95,142,143,185,202,236,239,275,299,319,321,324,330,333,334,339,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'builtin_call':([0,2,6,16,33,40,53,55,62,63,71,74,81,88,92,95,100,101,142,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,185,187,191,193,194,196,197,199,202,224,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'program':([0,],[37,]),'control_part':([6,],[58,]),'elsif_expression':([225,],[265,]),'array_mode':([43,97,119,147,271,281,320,326,],[117,117,117,117,117,117,117,117,]),'declaration':([3,105,],[45,186,]),'statement_list':([0,299,319,324,333,],[2,321,330,334,339,]),'literal_range':([187,193,194,282,283,327,],[241,246,248,248,246,248,]),'array_primitive_value':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'discrete_range_mode':([43,97,119,147,194,198,260,271,281,282,320,326,327,],[122,122,122,122,122,122,122,122,122,122,122,122,122,]),'action_statement':([0,2,6,62,142,185,202,236,239,275,299,319,321,324,330,333,334,339,],[17,17,60,145,60,60,145,60,145,145,17,17,17,17,17,17,17,17,]),'string_mode':([43,97,119,147,271,281,320,326,],[116,116,116,116,116,116,116,116,]),'action':([0,2,6,62,95,142,143,185,202,236,239,275,299,319,321,324,330,333,334,339,],[28,28,28,28,174,28,174,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'result_action':([0,2,6,62,95,142,143,185,202,236,239,275,299,319,321,324,330,333,334,339,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'operand':([16,33,40,53,55,63,74,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'assigning_operator':([5,],[53,]),'start_value':([199,],[258,]),'value_array_slice':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'synonym_definition':([31,178,],[96,232,]),'identifier':([0,2,3,6,14,16,21,31,33,40,43,53,55,57,62,63,71,74,81,88,92,95,97,100,101,105,115,119,142,143,147,149,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,178,185,187,191,193,194,196,197,198,199,202,224,226,229,234,236,239,260,262,266,268,271,275,278,281,282,283,287,292,299,303,319,320,321,324,326,327,330,333,334,339,],[7,7,44,7,44,79,93,44,79,79,107,79,79,138,7,79,79,79,79,79,79,79,107,79,79,44,189,107,7,79,107,44,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,44,7,79,79,79,250,79,79,255,79,7,79,44,79,79,7,7,255,79,79,79,107,7,79,107,250,79,79,79,7,44,7,107,7,7,107,250,7,7,7,7,]),'boolean_expression':([40,63,92,268,292,],[103,146,171,296,316,]),'formal_parameter':([226,303,],[269,325,]),'reference_mode':([43,97,119,147,271,281,320,326,],[114,114,114,114,114,114,114,114,]),'label_id':([0,2,6,62,142,185,202,236,239,275,299,319,321,324,330,333,334,339,],[30,30,61,61,61,61,61,61,61,61,30,30,30,30,30,30,30,30,]),'declaration_list':([3,],[42,]),'loop_counter':([57,],[140,]),'newmode_statement':([0,2,299,319,321,324,330,333,334,339,],[10,10,10,10,10,10,10,10,10,10,]),'synonym_statement':([0,2,299,319,321,324,330,333,334,339,],[11,11,11,11,11,11,11,11,11,11,]),'mode_definition':([14,149,],[64,204,]),'procedure_statement':([0,2,299,319,321,324,330,333,334,339,],[22,22,22,22,22,22,22,22,22,22,]),'string_length':([188,],[244,]),'discrete_mode_name':([0,2,6,16,33,40,43,53,55,62,63,71,74,81,88,92,95,97,100,101,119,142,143,147,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,185,187,191,193,194,196,197,198,199,202,224,229,234,236,239,260,262,266,268,271,275,278,281,282,283,287,292,299,319,320,321,324,326,327,330,333,334,339,],[35,35,35,35,35,35,120,35,35,35,35,35,35,35,35,35,35,120,35,35,120,35,35,120,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,251,35,35,120,35,35,35,35,35,35,35,120,35,35,35,120,35,35,120,251,35,35,35,35,35,120,35,35,120,251,35,35,35,35,]),'literal':([16,33,40,53,55,63,74,81,88,92,100,101,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'procedure_call':([0,2,6,16,33,40,53,55,62,63,71,74,81,88,92,95,100,101,142,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,185,187,191,193,194,196,197,199,202,224,229,234,236,239,262,266,268,275,278,282,283,287,292,299,319,321,324,327,330,333,334,339,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'conditional_expression':([16,33,40,53,55,63,74,92,100,101,151,176,187,191,193,194,196,197,199,224,229,234,262,266,268,278,282,283,287,292,327,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'identifier_list':([3,14,31,105,149,178,226,303,],[43,65,97,43,65,97,271,271,]),'end_value':([258,285,289,311,],[286,310,314,328,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',516),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',521),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',522),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',528),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',529),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',530),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',542),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',547),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',552),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',557),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',562),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',567),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',568),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',576),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',582),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',583),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',588),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',589),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',597),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',598),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',609),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',613),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',614),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',626),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',627),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',641),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',642),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',654),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',655),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',656),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',669),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',670),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',679),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',683),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',687),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',688),
]
