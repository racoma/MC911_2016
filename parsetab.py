
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '416022A2081A13959C131F7578E9174F'
    
_lr_action_items = {'UPPER':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[1,1,1,-5,-8,-4,1,-2,-7,-6,1,1,1,1,1,1,1,-3,-113,1,1,-131,-115,1,1,1,1,1,-9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-18,1,-24,-125,-126,-129,-127,-130,-128,1,1,-116,1,1,1,1,1,1,1,1,1,1,1,-179,-112,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'CHARS':([33,41,42,74,108,154,186,271,280,324,326,],[-17,119,-15,119,119,119,-16,119,119,119,119,]),'PLUS':([13,16,18,29,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[80,-56,-159,-60,-17,-160,-68,-70,-108,-67,-69,-56,131,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,131,-97,131,-98,131,-101,131,131,131,131,131,131,-100,-99,131,131,-59,-161,-169,-56,-75,-57,-76,]),'GT':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,132,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,132,-97,-93,-98,132,-101,-95,132,-94,132,-96,132,-100,-99,132,132,-59,-161,-169,-56,-75,-57,-76,]),'MINUS':([4,13,16,18,29,33,36,38,39,45,47,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,82,83,84,89,94,99,100,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,150,155,156,161,162,163,164,179,182,189,190,191,192,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,219,222,223,224,227,233,234,235,245,252,253,256,257,277,281,282,286,290,295,310,327,],[46,81,-56,-159,-60,-17,46,46,-160,-68,46,-70,-108,-67,-69,-56,133,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,46,-60,46,46,-131,-58,46,46,46,-105,46,-111,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-106,46,-125,-126,-129,-127,-130,-128,-162,-170,46,46,46,46,-78,133,-97,133,-98,133,-101,133,133,133,133,133,133,-100,-99,133,133,46,46,46,-59,46,46,46,-161,-169,-56,-75,46,46,46,46,46,46,46,-57,46,-76,46,]),'DCL':([0,5,8,9,17,21,26,28,71,79,124,148,152,231,232,301,321,323,325,330,331,334,338,],[3,3,-5,-8,-4,-2,-7,-6,-3,-113,-9,-18,-24,-179,-112,3,3,3,3,3,3,3,3,]),'LE':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,140,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,140,-97,-93,-98,140,-101,-95,140,-94,140,-96,140,-100,-99,140,140,-59,-161,-169,-56,-75,-57,-76,]),'TO':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,252,266,267,268,287,290,293,296,310,311,314,317,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,-75,295,-152,-155,-81,-57,295,295,-76,-82,-153,295,]),'LPAREN':([1,4,16,19,23,24,27,30,31,32,33,34,35,36,38,46,47,54,67,68,82,83,84,94,99,100,104,105,110,112,114,115,116,121,122,123,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,176,189,190,191,192,215,219,222,224,227,233,245,248,249,253,256,257,264,265,277,278,279,281,282,286,291,295,302,327,],[-174,47,-42,-172,-176,-171,-175,-178,99,-177,-17,-173,100,47,47,47,47,-42,47,47,47,47,-131,47,47,47,-36,-35,-37,-38,190,191,-33,-42,-32,-34,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-125,-126,-129,-127,-130,-128,230,47,47,47,47,47,47,47,47,47,47,-42,190,282,47,47,47,190,-42,47,-40,-39,47,47,47,190,47,324,47,]),'RESULT':([0,5,8,9,17,20,21,26,28,71,79,91,97,98,124,148,152,170,172,174,184,229,231,232,236,238,275,301,321,323,325,330,331,334,338,],[4,4,-5,-8,-4,4,-2,-7,-6,-3,-113,-115,4,4,-9,-18,-24,4,4,-116,4,4,-179,-112,4,4,4,4,4,4,4,4,4,4,4,]),'FALSE':([4,36,38,46,47,67,68,82,83,84,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[48,48,48,48,48,48,48,48,48,-131,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-125,-126,-129,-127,-130,-128,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'LT':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,136,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,136,-97,-93,-98,136,-101,-95,136,-94,136,-96,136,-100,-99,136,136,-59,-161,-169,-56,-75,-57,-76,]),'SYN':([0,5,8,9,17,21,26,28,71,79,124,148,152,231,232,301,321,323,325,330,331,334,338,],[6,6,-5,-8,-4,-2,-7,-6,-3,-113,-9,-18,-24,-179,-112,6,6,6,6,6,6,6,6,]),'EXIT':([0,5,8,9,17,20,21,26,28,71,79,91,97,98,124,148,152,170,172,174,184,229,231,232,236,238,275,301,321,323,325,330,331,334,338,],[7,7,-5,-8,-4,7,-2,-7,-6,-3,-113,-115,7,7,-9,-18,-24,7,7,-116,7,7,-179,-112,7,7,7,7,7,7,7,7,7,7,7,]),'DOWN':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,126,129,147,166,167,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,252,266,267,268,287,290,296,310,311,314,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,225,-151,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,-75,293,-152,-155,-81,-57,317,-76,-82,-153,]),'CHAR':([33,41,42,74,108,154,186,192,226,263,271,280,281,324,326,327,],[-17,112,-15,112,112,112,-16,112,112,112,112,112,112,112,112,112,]),'SCONST':([4,36,38,46,47,67,68,82,83,84,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[61,61,61,61,61,61,61,61,61,-131,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-125,-126,-129,-127,-130,-128,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'ELSIF':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,223,234,235,252,254,258,287,290,310,311,313,328,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,257,-59,-161,-169,-75,286,-84,-81,-57,-76,-82,-86,-87,]),'NEQ':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,145,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,145,-97,-93,-98,-91,-101,-95,145,-94,145,-96,145,-100,-99,145,-92,-59,-161,-169,-56,-75,-57,-76,]),'ARROW':([4,13,16,18,29,33,36,38,39,46,47,50,54,67,68,70,82,83,84,89,94,99,100,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,179,182,189,190,191,192,215,219,222,223,224,227,233,234,235,245,253,256,257,277,281,282,286,290,295,327,],[51,89,-56,-159,-60,-17,51,51,-160,51,51,89,-56,51,51,-60,51,51,-131,-58,51,51,51,51,89,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-125,-126,-129,-127,-130,-128,-162,-170,51,51,51,51,51,51,51,-59,51,51,51,-161,-169,-56,51,51,51,51,51,51,51,-57,51,51,]),'SEMI':([2,10,12,14,15,18,25,29,33,36,39,40,43,44,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,75,76,78,89,92,95,96,101,102,104,105,106,109,110,111,112,113,114,116,117,120,121,122,123,126,129,147,160,165,168,169,171,173,175,177,178,179,182,187,188,194,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,218,220,221,223,228,234,235,237,240,252,259,264,268,269,273,276,278,279,283,287,290,291,294,300,303,305,306,310,311,315,316,318,322,329,332,335,337,339,340,341,],[-121,-122,79,-119,-123,-159,-117,-120,-17,-167,-160,-118,-10,124,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-168,-60,-19,148,-165,152,-25,-58,-143,172,-142,-166,-83,-36,-35,-30,-45,-37,-31,-38,-13,-29,-33,-46,-28,-41,-32,-34,-105,-111,-106,-124,-144,-145,-146,-158,-141,-140,231,232,-162,-170,-44,-12,-11,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-20,-22,-23,-26,-27,-59,-139,-161,-169,-133,-14,-75,-21,-157,-155,-138,301,-132,-40,-39,-47,-81,-57,-156,-150,321,325,-55,-49,-76,-82,-148,-154,-149,331,-147,-183,-50,-181,-187,-182,-180,]),'BY':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,252,266,267,268,287,290,310,311,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,-75,292,-152,-155,-81,-57,-76,-82,]),'TYPE':([0,5,8,9,17,21,26,28,71,79,124,148,152,231,232,301,321,323,325,330,331,334,338,],[11,11,-5,-8,-4,-2,-7,-6,-3,-113,-9,-18,-24,-179,-112,11,11,11,11,11,11,11,11,]),'COLON':([16,18,22,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,93,126,129,147,157,159,179,182,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,241,243,245,252,287,290,309,310,311,],[-114,-159,98,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,170,-105,-111,-106,222,-61,-162,-170,-78,253,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,277,-61,-56,-75,-81,-57,-61,-76,-82,]),'FI':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,79,89,91,126,129,147,174,179,182,184,185,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,232,234,235,236,238,239,252,255,275,285,287,288,290,310,311,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-113,-58,-115,-105,-111,-106,-116,-162,-170,-135,237,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-112,-161,-169,-134,-137,276,-75,287,-136,311,-81,-85,-57,-76,-82,]),'THEN':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,102,103,126,129,146,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,252,287,289,290,310,311,312,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-83,184,-105,-111,215,-106,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,-75,-81,215,-57,-76,-82,215,]),'GE':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,138,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,138,-97,-93,-98,138,-101,-95,138,-94,138,-96,138,-100,-99,138,138,-59,-161,-169,-56,-75,-57,-76,]),'CONCAT':([13,16,18,29,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[87,-56,-159,-60,-17,-160,-68,-70,-108,-67,-69,-56,139,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,-56,-75,-57,-76,]),'END':([8,9,17,21,26,28,71,79,124,148,152,231,232,323,330,334,338,],[-5,-8,-4,-2,-7,-6,-3,-113,-9,-18,-24,-179,-112,332,337,340,341,]),'CCONST':([4,36,38,46,47,67,68,82,83,84,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[56,56,56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-125,-126,-129,-127,-130,-128,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'READ':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[32,32,32,-5,-8,-4,32,-2,-7,-6,32,32,32,32,32,32,32,-3,-113,32,32,-131,-115,32,32,32,32,32,-9,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-18,32,-24,-125,-126,-129,-127,-130,-128,32,32,-116,32,32,32,32,32,32,32,32,32,32,32,-179,-112,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PRED':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[19,19,19,-5,-8,-4,19,-2,-7,-6,19,19,19,19,19,19,19,-3,-113,19,19,-131,-115,19,19,19,19,19,-9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-18,19,-24,-125,-126,-129,-127,-130,-128,19,19,-116,19,19,19,19,19,19,19,19,19,19,19,-179,-112,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'INT':([33,41,42,74,108,154,186,192,226,263,271,280,281,324,326,327,],[-17,104,-15,104,104,104,-16,104,104,104,104,104,104,104,104,104,]),'BOOL':([33,41,42,74,108,154,186,192,226,263,271,280,281,324,326,327,],[-17,110,-15,110,110,110,-16,110,110,110,110,110,110,110,110,110,]),'OR':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,130,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,130,-94,130,-96,-89,-100,-99,130,-92,-59,-161,-169,-56,-75,-57,-76,]),'$end':([5,8,9,17,21,26,28,37,71,79,124,148,152,231,232,],[-1,-5,-8,-4,-2,-7,-6,0,-3,-113,-9,-18,-24,-179,-112,]),'REF':([33,41,42,74,108,154,186,271,280,324,326,],[-17,108,-15,108,108,108,-16,108,108,108,108,]),'WHILE':([18,20,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,96,104,105,110,112,116,122,123,126,129,147,165,168,169,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,252,264,268,278,279,287,290,291,294,310,311,315,316,318,329,],[-159,94,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,94,-36,-35,-37,-38,-33,-32,-34,-105,-111,-106,-144,-145,-146,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,-75,-157,-155,-40,-39,-81,-57,-156,-150,-76,-82,-148,-154,-149,-147,]),'COMMA':([18,33,39,41,42,43,44,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,76,77,78,89,104,105,106,109,110,111,112,113,114,116,117,120,121,122,123,126,129,147,158,159,179,180,181,182,183,186,187,188,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,218,220,221,223,234,235,240,246,247,248,252,259,261,262,270,271,272,274,278,279,283,287,290,297,298,304,305,306,307,308,309,310,311,319,320,335,336,],[-159,-17,-160,107,-15,-10,125,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-19,149,107,153,107,-25,-58,-36,-35,-30,-45,-37,-31,-38,-13,-29,-33,-46,-28,-41,-32,-34,-105,-111,-106,224,-63,-162,233,-163,-170,233,-16,-44,-12,-11,-78,224,-63,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-20,-22,-23,-26,-27,-59,-161,-169,-14,-54,281,-53,-75,-21,-62,-64,-184,107,299,-164,-40,-39,-47,-81,-57,-189,-186,-43,-55,-49,327,-51,-163,-76,-82,-188,-185,-50,-52,]),'LBRACKET':([13,16,18,29,33,39,45,48,49,50,52,53,54,56,57,59,61,64,65,66,70,89,118,119,129,179,182,195,223,234,235,245,252,290,310,],[82,-56,-159,-60,-17,-160,-68,-70,128,82,-67,-69,-56,-72,-73,-77,-74,-65,-71,-66,-60,-58,192,193,82,-162,-170,-78,-59,-161,-169,-56,-75,-57,-76,]),'ASSIGN':([13,16,18,29,33,39,42,54,74,77,80,81,85,86,87,88,89,104,105,106,109,110,111,112,113,114,116,117,120,121,122,123,151,166,167,179,182,186,187,223,234,235,278,279,283,290,305,306,335,],[84,-56,-159,-60,-17,-160,-15,-56,150,154,155,156,161,162,163,164,-58,-36,-35,-30,-45,-37,-31,-38,189,-29,-33,-46,-28,-41,-32,-34,219,227,-151,-162,-170,-16,-44,-59,-161,-169,-40,-39,-47,-57,-55,-49,-50,]),'NUM':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[24,24,24,-5,-8,-4,24,-2,-7,-6,24,24,24,24,24,24,24,-3,-113,24,24,-131,-115,24,24,24,24,24,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-18,24,-24,-125,-126,-129,-127,-130,-128,24,24,-116,24,24,24,24,24,24,24,24,24,24,24,-179,-112,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'IN':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,166,167,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,225,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,137,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,226,-151,-162,-170,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,137,-96,-89,-100,-99,137,-92,-59,263,-161,-169,-56,-75,-57,-76,]),'NULL':([4,36,38,46,47,67,68,82,83,84,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[57,57,57,57,57,57,57,57,57,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-125,-126,-129,-127,-130,-128,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'OD':([79,91,97,172,174,229,232,],[-113,-115,175,228,-116,269,-112,]),'ELSE':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,79,89,91,126,129,147,174,179,182,184,185,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,223,232,234,235,236,252,254,258,287,290,310,311,313,328,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-113,-58,-115,-105,-111,-106,-116,-162,-170,-135,238,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,256,-59,-112,-161,-169,-134,-75,256,-84,-81,-57,-76,-82,-86,-87,]),'LOWER':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[27,27,27,-5,-8,-4,27,-2,-7,-6,27,27,27,27,27,27,27,-3,-113,27,27,-131,-115,27,27,27,27,27,-9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-18,27,-24,-125,-126,-129,-127,-130,-128,27,27,-116,27,27,27,27,27,27,27,27,27,27,27,-179,-112,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LOC':([33,104,105,106,109,110,111,112,114,116,117,120,121,122,123,187,278,279,283,297,305,306,335,],[-17,-36,-35,-30,-45,-37,-31,-38,-29,-33,-46,-28,-41,-32,-34,-44,-40,-39,-47,319,-55,-49,-50,]),'RPAREN':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,99,100,104,105,106,109,110,111,112,114,116,117,120,121,122,123,126,127,129,147,179,180,181,182,183,187,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,230,234,235,242,244,252,261,270,272,274,278,279,282,283,287,290,297,298,304,305,306,309,310,311,319,320,333,335,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,179,182,-36,-35,-30,-45,-37,-31,-38,-29,-33,-46,-28,-41,-32,-34,-105,195,-111,-106,-162,234,-163,-170,235,-44,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,273,-161,-169,278,279,-75,-62,-184,300,-164,-40,-39,179,-47,-81,-57,-189,-186,-43,-55,-49,-163,-76,-82,-188,-185,339,-50,]),'ICONST':([4,36,38,46,47,67,68,82,83,84,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,189,190,191,192,193,215,219,222,224,227,233,253,256,257,277,281,282,286,292,295,327,],[53,53,53,53,53,53,53,53,53,-131,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-125,-126,-129,-127,-130,-128,53,53,53,53,251,53,53,53,53,53,53,53,53,53,53,53,53,53,314,53,53,]),'RETURNS':([273,300,],[302,302,]),'PRINT':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[30,30,30,-5,-8,-4,30,-2,-7,-6,30,30,30,30,30,30,30,-3,-113,30,30,-131,-115,30,30,30,30,30,-9,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-18,30,-24,-125,-126,-129,-127,-130,-128,30,30,-116,30,30,30,30,30,30,30,30,30,30,30,-179,-112,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'FOR':([20,],[90,]),'EQ':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,134,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,134,-97,-93,-98,-91,-101,-95,134,-94,134,-96,134,-100,-99,134,-92,-59,-161,-169,-56,-75,-57,-76,]),'ID':([0,3,4,5,6,7,8,9,11,17,20,21,26,28,33,36,38,41,42,46,47,51,67,68,71,74,79,82,83,84,90,91,94,97,98,99,100,107,108,124,125,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,152,153,154,155,156,161,162,163,164,170,172,174,184,186,189,190,191,192,215,219,222,224,226,227,229,230,231,232,233,236,238,253,256,257,263,271,275,277,280,281,282,286,295,299,301,321,323,324,325,326,327,330,331,334,338,],[33,33,33,33,33,33,-5,-8,33,-4,33,-2,-7,-6,-17,33,33,33,-15,33,33,33,33,33,-3,33,-113,33,33,-131,33,-115,33,33,33,33,33,33,33,-9,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-18,33,33,-24,33,33,-125,-126,-129,-127,-130,-128,33,33,-116,33,-16,33,33,33,33,33,33,33,33,33,33,33,33,-179,-112,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'DO':([0,5,8,9,17,20,21,26,28,71,79,91,97,98,124,148,152,170,172,174,184,229,231,232,236,238,275,301,321,323,325,330,331,334,338,],[20,20,-5,-8,-4,20,-2,-7,-6,-3,-113,-115,20,20,-9,-18,-24,20,20,-116,20,20,-179,-112,20,20,20,20,20,20,20,20,20,20,20,]),'TRUE':([4,36,38,46,47,67,68,82,83,84,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,155,156,161,162,163,164,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-125,-126,-129,-127,-130,-128,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'SUCC':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[34,34,34,-5,-8,-4,34,-2,-7,-6,34,34,34,34,34,34,34,-3,-113,34,34,-131,-115,34,34,34,34,34,-9,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-18,34,-24,-125,-126,-129,-127,-130,-128,34,34,-116,34,34,34,34,34,34,34,34,34,34,34,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MOD':([13,16,18,29,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[85,-56,-159,-60,-17,-160,-68,-70,-108,-67,-69,-56,135,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,135,135,135,135,135,-101,135,135,135,135,135,135,-100,-99,135,135,-59,-161,-169,-56,-75,-57,-76,]),'RETURN':([0,5,8,9,17,20,21,26,28,71,79,91,97,98,124,148,152,170,172,174,184,229,231,232,236,238,275,301,321,323,325,330,331,334,338,],[36,36,-5,-8,-4,36,-2,-7,-6,-3,-113,-115,36,36,-9,-18,-24,36,36,-116,36,36,-179,-112,36,36,36,36,36,36,36,36,36,36,36,]),'TIMES':([13,16,18,29,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[86,-56,-159,-60,-17,-160,-68,-70,-108,-67,-69,-56,143,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,143,143,143,143,143,-101,143,143,143,143,143,143,-100,-99,143,143,-59,-161,-169,-56,-75,-57,-76,]),'RBRACKET':([18,33,39,45,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,89,104,105,110,112,116,122,123,126,129,147,158,159,179,182,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,246,247,248,250,251,252,260,261,262,278,279,284,287,290,304,307,308,310,311,336,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,-79,-72,-73,-80,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-36,-35,-37,-38,-33,-32,-34,-105,-111,-106,223,-63,-162,-170,-78,252,-63,-90,-97,-93,-98,-91,-101,-95,-103,-94,-104,-96,-89,-100,-99,-102,-92,-59,-161,-169,-54,280,-53,283,-48,-75,290,-62,-64,-40,-39,310,-81,-57,-43,326,-51,-76,-82,-52,]),'AND':([18,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[-159,-17,-160,-68,-70,-108,-67,-69,-56,141,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,141,-97,-93,-98,-91,-101,-95,141,-94,141,-96,-89,-100,-99,141,-92,-59,-161,-169,-56,-75,-57,-76,]),'IF':([0,4,5,8,9,17,20,21,26,28,36,38,47,67,71,79,82,83,84,91,94,97,98,99,100,124,128,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[38,67,38,-5,-8,-4,38,-2,-7,-6,67,67,67,67,-3,-113,67,67,-131,-115,67,38,38,67,67,-9,67,-18,67,-24,-125,-126,-129,-127,-130,-128,38,38,-116,38,67,67,67,67,67,67,67,67,67,38,-179,-112,67,38,38,67,67,67,38,67,67,67,67,67,38,38,38,38,67,38,38,38,38,]),'LENGTH':([0,4,5,8,9,17,20,21,26,28,36,38,46,47,51,67,68,71,79,82,83,84,91,94,97,98,99,100,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,152,155,156,161,162,163,164,170,172,174,184,189,190,191,192,215,219,222,224,227,229,231,232,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[23,23,23,-5,-8,-4,23,-2,-7,-6,23,23,23,23,23,23,23,-3,-113,23,23,-131,-115,23,23,23,23,23,-9,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-18,23,-24,-125,-126,-129,-127,-130,-128,23,23,-116,23,23,23,23,23,23,23,23,23,23,23,-179,-112,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'DIVIDE':([13,16,18,29,33,39,45,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,70,89,126,129,147,179,182,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,223,234,235,245,252,290,310,],[88,-56,-159,-60,-17,-160,-68,-70,-108,-67,-69,-56,142,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,-60,-58,-105,-111,-106,-162,-170,-78,142,142,142,142,142,-101,142,142,142,142,142,142,-100,-99,142,142,-59,-161,-169,-56,-75,-57,-76,]),'NOT':([4,18,33,36,38,39,45,47,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,82,83,84,89,94,99,100,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,150,155,156,161,162,163,164,179,182,189,190,191,192,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,219,222,223,224,227,233,234,235,245,252,253,256,257,277,281,282,286,290,295,310,327,],[68,-159,-17,68,68,-160,-68,68,-70,-108,-67,-69,-56,144,-72,-73,-110,-88,-74,-107,-109,-65,-71,-66,68,-60,68,68,-131,-58,68,68,68,-105,68,-111,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-106,68,-125,-126,-129,-127,-130,-128,-162,-170,68,68,68,68,-78,-90,-97,-93,-98,-91,-101,-95,-103,-94,144,-96,-89,-100,-99,-102,-92,68,68,68,-59,68,68,68,-161,-169,-56,-75,68,68,68,68,68,68,68,-57,68,-76,68,]),'PROC':([98,],[176,]),'ARRAY':([33,41,42,74,108,154,186,271,280,324,326,],[-17,118,-15,118,118,118,-16,118,118,118,118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'newmode_list':([11,],[76,]),'initialization':([113,],[188,]),'string_length':([193,],[250,]),'action_statement':([0,5,20,97,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[9,9,91,174,91,91,174,174,91,174,9,9,9,9,9,9,9,9,]),'return_action':([0,5,20,97,98,170,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'declaration_list':([3,],[44,]),'value_array_slice':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'else_expression':([214,254,],[255,285,]),'procedure_definition':([98,],[177,]),'iteration':([90,],[165,]),'action':([0,5,20,97,98,170,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[12,12,12,12,178,178,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array_mode':([41,74,108,154,271,280,324,326,],[117,117,117,117,117,117,117,117,]),'statement_list':([0,301,321,325,331,],[5,323,330,334,338,]),'identifier':([0,3,4,5,6,7,11,20,36,38,41,46,47,51,67,68,74,82,83,90,94,97,98,99,100,107,108,125,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,149,150,153,154,170,172,184,189,190,191,192,215,219,222,224,226,227,229,230,233,236,238,253,256,257,263,271,275,277,280,281,282,286,295,299,301,321,323,324,325,326,327,330,331,334,338,],[16,42,54,16,42,75,42,16,54,54,121,54,54,54,54,54,121,54,54,167,54,16,54,54,54,186,121,42,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,42,54,42,121,54,16,16,54,54,54,245,54,54,54,54,265,54,16,42,54,16,16,54,54,54,265,121,16,54,121,245,54,54,54,42,16,16,16,121,16,121,245,16,16,16,16,]),'literal_range':([190,191,192,281,282,327,],[242,244,246,246,244,246,]),'formal_parameter_list':([230,],[272,]),'binop':([4,36,38,47,67,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[55,55,55,55,55,55,55,55,55,55,55,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'mode_definition':([11,153,],[78,220,]),'program':([0,],[37,]),'discrete_mode':([41,74,108,154,192,226,263,271,280,281,324,326,327,],[114,114,114,114,248,264,291,114,114,248,114,114,248,]),'label_id':([0,5,20,97,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[22,22,93,93,93,93,93,93,93,93,22,22,22,22,22,22,22,22,]),'element_mode':([280,326,],[306,335,]),'reference_mode':([41,74,108,154,271,280,324,326,],[106,106,106,106,106,106,106,106,]),'end_value':([266,293,296,317,],[294,315,318,329,]),'start_value':([227,],[266,]),'step_enumeration':([90,],[168,]),'literal':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'control_part':([20,],[95,]),'procedure_statement':([0,5,301,321,323,325,330,331,334,338,],[26,26,26,26,26,26,26,26,26,26,]),'discrete_expression':([227,295,],[267,316,]),'then_clause':([103,],[185,]),'result_spec':([273,300,],[303,322,]),'for_control':([20,],[96,]),'newmode_statement':([0,5,301,321,323,325,330,331,334,338,],[28,28,28,28,28,28,28,28,28,28,]),'referenced_location':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'operand1':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[62,62,62,126,62,62,147,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'exit_action':([0,5,20,97,98,170,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'assigning_operator':([13,],[83,]),'action_statement_list':([20,172,184,238,],[97,229,236,275,]),'builtin_name':([0,4,5,20,36,38,46,47,51,67,68,82,83,94,97,98,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,170,172,184,189,190,191,192,215,219,222,224,227,229,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'integer_mode':([41,74,108,154,192,226,263,271,280,281,324,326,327,],[122,122,122,122,122,122,122,122,122,122,122,122,122,]),'expression_list':([82,128,],[158,196,]),'constant_expression':([150,219,],[217,259,]),'boolean_expression':([38,67,94,257,286,],[103,146,171,289,312,]),'formal_parameter':([230,299,],[270,320,]),'result_action':([0,5,20,97,98,170,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'step_value':([266,],[296,]),'composite_mode':([41,74,108,154,271,280,324,326,],[111,111,111,111,111,111,111,111,]),'mode':([41,74,108,154,271,280,324,326,],[113,151,187,221,297,305,297,305,]),'upper_bound':([222,277,],[260,304,]),'index_mode_list':([281,],[307,]),'declaration':([3,125,],[43,194,]),'then_expression':([146,289,312,],[214,313,328,]),'location':([0,4,5,20,36,38,46,47,51,67,68,82,83,94,97,98,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,170,172,184,189,190,191,192,215,219,222,224,227,229,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[13,50,13,13,50,50,50,50,129,50,50,50,50,50,13,13,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,13,13,13,50,50,50,50,50,50,50,50,50,13,50,13,13,50,50,50,13,50,50,50,50,50,13,13,13,13,50,13,13,13,13,]),'lower_bound':([82,190,191,192,281,282,327,],[157,241,241,241,241,241,241,]),'mode_name':([41,74,108,154,271,280,324,326,],[120,120,120,120,120,120,120,120,]),'assignment_action':([0,5,20,97,98,170,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'while_control':([20,96,],[92,173,]),'character_mode':([41,74,108,154,192,226,263,271,280,281,324,326,327,],[123,123,123,123,123,123,123,123,123,123,123,123,123,]),'array_primitive_value':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'value_array_element':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'else_clause':([185,],[239,]),'procedure_call':([0,4,5,20,36,38,46,47,51,67,68,82,83,94,97,98,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,170,172,184,189,190,191,192,215,219,222,224,227,229,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'range_enumeration':([90,],[169,]),'statement':([0,5,301,321,323,325,330,331,334,338,],[21,71,21,21,71,21,71,21,71,71,]),'primitive_value':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'conditional_expression':([4,36,38,47,67,82,83,94,99,100,128,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'string_mode':([41,74,108,154,271,280,324,326,],[109,109,109,109,109,109,109,109,]),'call_action':([0,4,5,20,36,38,46,47,51,67,68,82,83,94,97,98,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,170,172,184,189,190,191,192,215,219,222,224,227,229,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[29,70,29,29,70,70,70,70,70,70,70,70,70,70,29,29,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,29,29,29,70,70,70,70,70,70,70,70,70,29,70,29,29,70,70,70,29,70,70,70,70,70,29,29,29,29,70,29,29,29,29,]),'if_action':([0,5,20,97,98,170,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'identifier_list':([3,6,11,125,149,153,230,299,],[41,74,77,41,74,77,271,271,]),'operand':([4,36,38,47,67,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'synonym_statement':([0,5,301,321,323,325,330,331,334,338,],[8,8,8,8,8,8,8,8,8,8,]),'expression':([4,36,38,47,67,82,83,94,99,100,128,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[69,101,102,127,102,159,160,102,181,181,197,218,240,243,243,243,258,218,261,262,268,274,284,288,102,261,243,309,102,268,243,]),'elsif_expression':([214,],[254,]),'parameter_list':([99,100,282,],[180,183,180,]),'declaration_statement':([0,5,301,321,323,325,330,331,334,338,],[17,17,17,17,17,17,17,17,17,17,]),'boolean_mode':([41,74,108,154,192,226,263,271,280,281,324,326,327,],[116,116,116,116,116,116,116,116,116,116,116,116,116,]),'discrete_mode_name':([0,4,5,20,36,38,41,46,47,51,67,68,74,82,83,94,97,98,99,100,108,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,154,170,172,184,189,190,191,192,215,219,222,224,226,227,229,233,236,238,253,256,257,263,271,275,277,280,281,282,286,295,301,321,323,324,325,326,327,330,331,334,338,],[31,31,31,31,31,31,115,31,31,31,31,31,115,31,31,31,31,31,31,31,115,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,115,31,31,31,31,31,31,249,31,31,31,31,115,31,31,31,31,31,31,31,31,115,115,31,31,115,249,31,31,31,31,31,31,115,31,115,249,31,31,31,31,]),'loop_counter':([90,],[166,]),'synonym_definition':([6,149,],[72,216,]),'parameter_spec':([271,324,],[298,333,]),'discrete_range_mode':([41,74,108,154,192,226,263,271,280,281,324,326,327,],[105,105,105,105,105,105,105,105,105,105,105,105,105,]),'parenthesized_expression':([4,36,38,46,47,67,68,82,83,94,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,189,190,191,192,215,219,222,224,227,233,253,256,257,277,281,282,286,295,327,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'synonym_list':([6,],[73,]),'index_mode':([192,281,327,],[247,308,336,]),'builtin_call':([0,4,5,20,36,38,46,47,51,67,68,82,83,94,97,98,99,100,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,170,172,184,189,190,191,192,215,219,222,224,227,229,233,236,238,253,256,257,275,277,281,282,286,295,301,321,323,325,327,330,331,334,338,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'do_action':([0,5,20,97,98,170,172,184,229,236,238,275,301,321,323,325,330,331,334,338,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
