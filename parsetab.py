
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8CCFE4EDA291458568827DB337719FD7'
    
_lr_action_items = {end':([1,5,10,23,27,28,38,40,72,103,105,164,169,238,239,],[-2,0,-1,-6,-8,-7,-5,-4,-3,-113,-24,-18,-9,-179,-112,]),'TIMES':([3,11,32,33,35,36,48,49,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,257,283,304,],[-160,78,-56,-17,-159,-60,-71,-109,-107,-108,-74,-67,-110,-65,-56,-68,-66,119,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,119,119,-99,119,119,119,119,119,119,119,119,119,119,119,-101,-100,-59,-161,-75,-56,-57,-76,]),'NUM':([0,1,8,10,17,23,27,28,30,34,38,40,45,46,53,55,57,58,72,77,79,81,92,95,97,98,102,103,105,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,164,166,169,173,175,182,190,195,213,214,218,220,221,222,225,227,228,233,234,238,239,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[24,-2,24,24,24,-6,-8,-7,24,24,-5,-4,24,24,24,24,24,24,-3,-131,24,24,24,24,24,-115,24,-113,-24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-126,-130,-125,-127,-129,-128,24,-18,24,-9,24,-116,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-179,-112,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'RBRACKET':([3,33,35,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,137,138,146,150,152,153,154,156,157,170,189,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,248,249,250,251,252,259,260,261,277,282,283,285,287,304,307,308,312,313,336,],[-160,-17,-159,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-63,212,-37,-33,-34,-35,-38,-32,-36,-162,-169,-63,242,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,-64,-62,283,-48,284,-54,289,-53,304,-81,-57,-39,-40,-76,-82,-43,327,-51,-52,]),'TYPE':([0,1,10,23,27,28,38,40,72,103,105,164,169,238,239,298,319,320,323,330,333,334,339,],[2,-2,2,-6,-8,-7,-5,-4,-3,-113,-24,-18,-9,-179,-112,2,2,2,2,2,2,2,2,]),'LBRACKET':([3,11,32,33,35,36,47,48,52,54,59,60,61,62,63,64,66,67,69,70,71,75,109,116,145,159,170,189,193,212,231,242,257,283,304,],[-160,79,-56,-17,-159,-60,112,-71,79,-74,-67,-77,-65,-56,-68,-66,-60,-73,-69,-70,-72,-58,-170,79,217,221,-162,-169,-78,-59,-161,-75,-56,-57,-76,]),'RETURN':([0,1,10,23,27,28,34,38,40,72,97,98,102,103,105,164,166,169,173,175,182,225,227,233,238,239,264,298,319,320,323,330,333,334,339,],[30,-2,30,-6,-8,-7,30,-5,-4,-3,30,-115,30,-113,-24,-18,30,-9,30,-116,30,30,30,30,-179,-112,30,30,30,30,30,30,30,30,30,]),'TO':([3,33,35,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,267,268,269,282,283,293,294,304,307,315,316,],[-160,-17,-159,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,291,-155,-152,-81,-57,291,291,-76,-82,-153,291,]),'SUCC':([0,1,8,10,17,23,27,28,30,34,38,40,45,46,53,55,57,58,72,77,79,81,92,95,97,98,102,103,105,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,164,166,169,173,175,182,190,195,213,214,218,220,221,222,225,227,228,233,234,238,239,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[16,-2,16,16,16,-6,-8,-7,16,16,-5,-4,16,16,16,16,16,16,-3,-131,16,16,16,16,16,-115,16,-113,-24,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-126,-130,-125,-127,-129,-128,16,-18,16,-9,16,-116,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-179,-112,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'DOWN':([3,33,35,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,176,180,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,267,268,269,282,283,293,304,307,315,],[-160,-17,-159,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-151,236,-169,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,294,-155,-152,-81,-57,316,-76,-82,-153,]),'CONCAT':([3,11,32,33,35,36,48,49,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,257,283,304,],[-160,74,-56,-17,-159,-60,-71,-109,-107,-108,-74,-67,-110,-65,-56,-68,-66,117,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,-56,-57,-76,]),'RPAREN':([3,33,35,45,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,92,108,109,110,111,113,114,116,144,146,148,149,150,152,153,154,155,156,157,158,160,162,170,171,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,219,231,237,240,242,249,254,256,274,276,282,283,284,285,287,288,302,303,304,307,308,309,310,311,324,325,332,335,],[-160,-17,-159,109,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,170,-163,-170,189,-105,-106,193,-111,-46,-37,-45,-30,-33,-34,-35,-38,-41,-32,-36,-29,-28,-31,-162,231,-169,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-44,-161,273,-164,-75,-62,285,287,300,-184,-81,-57,-47,-39,-40,170,-186,-189,-76,-82,-43,-163,-49,-55,-185,-188,338,-50,]),'LENGTH':([0,1,8,10,17,23,27,28,30,34,38,40,45,46,53,55,57,58,72,77,79,81,92,95,97,98,102,103,105,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,164,166,169,173,175,182,190,195,213,214,218,220,221,222,225,227,228,233,234,238,239,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[29,-2,29,29,29,-6,-8,-7,29,29,-5,-4,29,29,29,29,29,29,-3,-131,29,29,29,29,29,-115,29,-113,-24,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-126,-130,-125,-127,-129,-128,29,-18,29,-9,29,-116,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'THEN':([3,33,35,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,86,87,109,111,113,115,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,278,282,283,304,306,307,],[-160,-17,-159,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,-83,166,-170,-105,-106,195,-111,-162,-169,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,195,-81,-57,-76,195,-82,]),'DO':([0,1,10,23,27,28,34,38,40,72,97,98,102,103,105,164,166,169,173,175,182,225,227,233,238,239,264,298,319,320,323,330,333,334,339,],[34,-2,34,-6,-8,-7,34,-5,-4,-3,34,-115,34,-113,-24,-18,34,-9,34,-116,34,34,34,34,-179,-112,34,34,34,34,34,34,34,34,34,]),'NULL':([8,17,30,45,46,53,55,57,77,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[67,67,67,67,67,67,67,67,-131,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-126,-130,-125,-127,-129,-128,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'IN':([3,33,35,48,49,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,176,180,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,236,242,257,283,304,],[-160,-17,-159,-71,-109,-107,-108,-74,-67,-110,-65,-56,-68,-66,122,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-151,235,-169,-78,122,-98,-99,122,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,272,-75,-56,-57,-76,]),'BY':([3,33,35,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,267,268,269,282,283,304,307,],[-160,-17,-159,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,292,-155,-152,-81,-57,-76,-82,]),'OR':([3,33,35,48,49,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,257,283,304,],[-160,-17,-159,-71,-109,-107,-108,-74,-67,-110,-65,-56,-68,-66,124,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,124,-98,-99,124,-97,124,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,-56,-57,-76,]),'LT':([3,33,35,48,49,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,257,283,304,],[-160,-17,-159,-71,-109,-107,-108,-74,-67,-110,-65,-56,-68,-66,125,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,125,-98,-99,125,-97,125,125,125,-95,-93,-94,125,-96,125,-101,-100,-59,-161,-75,-56,-57,-76,]),'LE':([3,33,35,48,49,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,257,283,304,],[-160,-17,-159,-71,-109,-107,-108,-74,-67,-110,-65,-56,-68,-66,129,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,129,-98,-99,129,-97,129,129,129,-95,-93,-94,129,-96,129,-101,-100,-59,-161,-75,-56,-57,-76,]),'CHARS':([33,44,83,89,106,151,188,275,289,321,327,],[-17,-15,145,145,145,145,-16,145,145,145,145,]),'END':([1,23,27,28,38,40,72,103,105,164,169,238,239,320,330,334,339,],[-2,-6,-8,-7,-5,-4,-3,-113,-24,-18,-9,-179,-112,331,337,340,341,]),'COMMA':([3,33,35,41,42,43,44,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,83,84,85,89,90,91,108,109,110,111,113,116,137,138,144,146,148,149,150,152,153,154,155,156,157,158,160,162,167,170,171,186,187,188,189,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,215,216,219,223,229,230,231,240,242,248,249,259,260,261,262,265,274,275,276,282,283,284,285,287,302,303,304,307,308,309,310,311,312,313,324,325,335,336,],[-160,-17,-159,104,-25,107,-15,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,107,-19,163,107,-10,168,-163,-170,190,-105,-106,-111,-63,213,-46,-37,-45,-30,-33,-34,-35,-38,-41,-32,-36,-29,-28,-31,-13,-162,190,-26,-27,-16,-169,-63,213,-78,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-23,-22,-44,-20,-12,-11,-161,-164,-75,-64,-62,-54,290,-53,-21,-14,301,107,-184,-81,-57,-47,-39,-40,-186,-189,-76,-82,-43,-163,-49,-55,328,-51,-185,-188,-50,-52,]),'ICONST':([8,17,30,45,46,53,55,57,77,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,190,195,213,214,217,218,220,221,222,228,234,241,243,245,279,286,288,290,291,292,328,],[69,69,69,69,69,69,69,69,-131,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-126,-130,-125,-127,-129,-128,69,69,69,69,69,251,69,69,69,69,69,69,69,69,69,69,69,69,69,69,315,69,]),'FALSE':([8,17,30,45,46,53,55,57,77,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[70,70,70,70,70,70,70,70,-131,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-126,-130,-125,-127,-129,-128,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'MOD':([3,11,32,33,35,36,48,49,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,257,283,304,],[-160,80,-56,-17,-159,-60,-71,-109,-107,-108,-74,-67,-110,-65,-56,-68,-66,131,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,131,131,-99,131,131,131,131,131,131,131,131,131,131,131,-101,-100,-59,-161,-75,-56,-57,-76,]),'ELSIF':([3,33,35,48,49,51,52,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,75,109,111,113,116,170,189,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,242,244,247,282,283,304,305,307,326,],[-160,-17,-159,-71,-109,-107,-108,-74,-80,-67,-110,-65,-56,-68,-66,-79,-60,-73,-88,-69,-70,-72,-58,-170,-105,-106,-111,-162,-169,-78,243,-104,-98,-99,-102,-97,-103,-89,-90,-95,-93,-94,-91,-96,-92,-101,-100,-59,-161,-75,279,-84,-81,-57,-76,-86,-82,-87,]),'CCONST':([8,17,30,45,46,53,55,57,77,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[71,71,71,71,71,71,71,71,-131,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-126,-130,-125,-127,-129,-128,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'array_mode':([83,89,106,151,275,289,321,327,],[144,144,144,144,144,144,144,144,]),'else_clause':([165,],[224,]),'array_primitive_value':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'step_value':([267,],[293,]),'do_action':([0,10,34,97,102,166,173,182,225,227,233,264,298,319,320,323,330,333,334,339,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'iteration':([99,],[178,]),'referenced_location':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'conditional_expression':([8,17,30,45,55,57,79,81,92,95,112,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'location':([0,8,10,17,30,34,45,46,53,55,57,58,79,81,92,95,97,102,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,166,173,182,190,195,213,214,218,220,221,222,225,227,228,233,234,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[11,52,11,52,52,11,52,52,52,52,52,116,52,52,52,52,11,11,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,11,11,11,52,52,52,52,52,52,52,52,11,11,52,11,52,52,52,52,11,52,52,52,52,52,11,11,11,11,52,11,11,11,11,]),'assigning_operator':([11,],[81,]),'expression':([8,17,30,45,55,57,79,81,92,95,112,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[50,86,93,108,114,86,137,141,108,86,191,215,240,247,248,249,253,253,253,215,265,268,277,86,281,86,249,309,253,268,253,]),'builtin_name':([0,8,10,17,30,34,45,46,53,55,57,58,79,81,92,95,97,102,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,166,173,182,190,195,213,214,218,220,221,222,225,227,228,233,234,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'start_value':([234,],[267,]),'action_statement_list':([34,166,173,225,],[97,227,233,264,]),'expression_list':([79,112,],[138,192,]),'discrete_mode':([83,89,106,151,221,235,272,275,289,290,321,327,328,],[158,158,158,158,261,271,296,158,158,261,158,158,261,]),'while_control':([34,100,],[94,181,]),'if_action':([0,10,34,97,102,166,173,182,225,227,233,264,298,319,320,323,330,333,334,339,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'procedure_definition':([102,],[184,]),'element_mode':([289,327,],[310,335,]),'assignment_action':([0,10,34,97,102,166,173,182,225,227,233,264,298,319,320,323,330,333,334,339,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'value_array_slice':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'range_enumeration':([99,],[179,]),'mode_definition':([2,104,],[42,186,]),'upper_bound':([214,286,],[250,308,]),'end_value':([267,293,294,316,],[295,317,318,329,]),'action_statement':([0,10,34,97,166,173,225,227,233,264,298,319,320,323,330,333,334,339,],[27,27,98,175,98,98,98,175,175,175,27,27,27,27,27,27,27,27,]),'formal_parameter':([237,301,],[276,324,]),'discrete_range_mode':([83,89,106,151,221,235,272,275,289,290,321,327,328,],[153,153,153,153,153,153,153,153,153,153,153,153,153,]),'primitive_value':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'literal':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'then_clause':([87,],[165,]),'string_length':([217,],[252,]),'procedure_call':([0,8,10,17,30,34,45,46,53,55,57,58,79,81,92,95,97,102,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,166,173,182,190,195,213,214,218,220,221,222,225,227,228,233,234,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'index_mode':([221,290,328,],[260,313,336,]),'mode':([83,89,106,151,275,289,321,327,],[161,167,187,219,303,311,303,311,]),'discrete_expression':([234,291,],[269,314,]),'string_mode':([83,89,106,151,275,289,321,327,],[148,148,148,148,148,148,148,148,]),'loop_counter':([99,],[180,]),'declaration_statement':([0,10,298,319,320,323,330,333,334,339,],[40,40,40,40,40,40,40,40,40,40,]),'label_id':([0,10,34,97,166,173,225,227,233,264,298,319,320,323,330,333,334,339,],[37,37,101,101,101,101,101,101,101,101,37,37,37,37,37,37,37,37,]),'statement':([0,10,298,319,320,323,330,333,334,339,],[1,72,1,1,72,1,72,1,72,72,]),'synonym_list':([13,],[85,]),'builtin_call':([0,8,10,17,30,34,45,46,53,55,57,58,79,81,92,95,97,102,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,166,173,182,190,195,213,214,218,220,221,222,225,227,228,233,234,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'program':([0,],[5,]),'else_expression':([194,244,],[246,280,]),'then_expression':([115,278,306,],[194,305,326,]),'result_action':([0,10,34,97,102,166,173,182,225,227,233,264,298,319,320,323,330,333,334,339,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'reference_mode':([83,89,106,151,275,289,321,327,],[149,149,149,149,149,149,149,149,]),'boolean_mode':([83,89,106,151,221,235,272,275,289,290,321,327,328,],[150,150,150,150,150,150,150,150,150,150,150,150,150,]),'elsif_expression':([194,],[244,]),'statement_list':([0,298,319,323,333,],[10,320,330,334,339,]),'index_mode_list':([290,],[312,]),'integer_mode':([83,89,106,151,221,235,272,275,289,290,321,327,328,],[156,156,156,156,156,156,156,156,156,156,156,156,156,]),'formal_parameter_list':([237,],[274,]),'operand1':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[51,51,51,51,111,113,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'return_action':([0,10,34,97,102,166,173,182,225,227,233,264,298,319,320,323,330,333,334,339,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaration':([22,168,],[90,230,]),'control_part':([34,],[96,]),'mode_name':([83,89,106,151,275,289,321,327,],[160,160,160,160,160,160,160,160,]),'literal_range':([218,220,221,288,290,328,],[254,256,259,254,259,259,]),'newmode_list':([2,],[41,]),'boolean_expression':([17,57,95,243,279,],[87,115,172,278,306,]),'synonym_definition':([13,163,],[84,223,]),'exit_action':([0,10,34,97,102,166,173,182,225,227,233,264,298,319,320,323,330,333,334,339,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'constant_expression':([143,222,],[216,262,]),'newmode_statement':([0,10,298,319,320,323,330,333,334,339,],[23,23,23,23,23,23,23,23,23,23,]),'lower_bound':([79,218,220,221,288,290,328,],[139,255,255,255,255,255,255,]),'discrete_mode_name':([0,8,10,17,30,34,45,46,53,55,57,58,79,81,83,89,92,95,97,102,106,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,151,166,173,182,190,195,213,214,218,220,221,222,225,227,228,233,234,235,241,243,245,264,272,275,279,286,288,289,290,291,298,319,320,321,323,327,328,330,333,334,339,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,147,147,26,26,26,26,147,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,147,26,26,26,26,26,26,26,26,26,258,26,26,26,26,26,26,147,26,26,26,26,147,147,26,26,26,147,258,26,26,26,26,147,26,147,258,26,26,26,26,]),'declaration_list':([22,],[91,]),'procedure_statement':([0,10,298,319,320,323,330,333,334,339,],[28,28,28,28,28,28,28,28,28,28,]),'character_mode':([83,89,106,151,221,235,272,275,289,290,321,327,328,],[152,152,152,152,152,152,152,152,152,152,152,152,152,]),'parameter_spec':([275,321,],[302,332,]),'for_control':([34,],[100,]),'identifier':([0,2,8,10,13,17,19,22,30,34,45,46,53,55,57,58,79,81,83,89,92,95,97,99,102,104,106,107,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,151,163,166,168,173,182,190,195,213,214,218,220,221,222,225,227,228,233,234,235,237,241,243,245,264,272,275,279,286,288,289,290,291,298,301,319,320,321,323,327,328,330,333,334,339,],[32,44,62,32,44,62,88,44,62,32,62,62,62,62,62,62,62,62,155,155,62,62,32,176,62,44,155,188,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,155,44,32,44,32,62,62,62,62,62,62,62,257,62,32,32,62,32,62,270,44,62,62,62,32,270,155,62,62,62,155,257,62,32,44,32,32,155,32,155,257,32,32,32,32,]),'step_enumeration':([99,],[177,]),'parenthesized_expression':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'parameter_list':([45,92,288,],[110,171,171,]),'value_array_element':([8,17,30,45,46,53,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'binop':([8,17,30,45,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[65,65,65,65,65,65,65,65,65,65,65,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'identifier_list':([2,13,22,104,163,168,237,301,],[43,83,89,43,83,89,275,275,]),'call_action':([0,8,10,17,30,34,45,46,53,55,57,58,79,81,92,95,97,102,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,166,173,182,190,195,213,214,218,220,221,222,225,227,228,233,234,241,243,245,264,279,286,288,290,291,298,319,320,323,328,330,333,334,339,],[36,66,36,66,66,36,66,66,66,66,66,66,66,66,66,66,36,36,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,36,36,36,66,66,66,66,66,66,66,66,36,36,66,36,66,66,66,66,36,66,66,66,66,66,36,36,36,36,66,36,36,36,36,]),'result_spec':([273,300,],[297,322,]),'operand':([8,17,30,45,55,57,79,81,92,95,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,143,190,195,213,214,218,220,221,222,228,234,241,243,245,279,286,288,290,291,328,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'synonym_statement':([0,10,298,319,320,323,330,333,334,339,],[38,38,38,38,38,38,38,38,38,38,]),'action':([0,10,34,97,102,166,173,182,225,227,233,264,298,319,320,323,330,333,334,339,],[39,39,39,39,185,39,39,185,39,39,39,39,39,39,39,39,39,39,39,39,]),'initialization':([167,],[229,]),'composite_mode':([83,89,106,151,275,289,321,327,],[162,162,162,162,162,162,162,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
