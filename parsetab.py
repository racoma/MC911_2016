
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '873F8B5CABCA61B3B9292EBCFA48E0AB'
    
_lr_action_items = {'RETURN':([0,1,10,19,22,25,27,36,39,68,82,83,88,94,135,167,169,171,177,182,185,209,210,215,216,229,253,289,310,312,314,327,328,329,335,],[3,-7,-4,-2,3,3,-5,-6,-8,3,-113,-3,3,-115,3,-9,-116,3,3,-18,-24,-179,-112,3,3,3,3,3,3,3,3,3,3,3,3,]),'TIMES':([6,14,17,24,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-60,73,-56,-17,-159,-69,-66,-67,-68,-60,-65,-108,112,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,112,-99,112,112,112,112,112,112,112,-100,112,112,112,112,112,-101,-78,-161,-59,-75,-56,-57,-76,]),'THEN':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,70,71,75,104,108,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,278,281,290,304,306,307,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,135,-83,-58,-170,190,-105,-106,-111,-162,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,190,-81,-57,-76,190,-82,]),'EQ':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,113,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,-92,-99,-91,113,-94,113,-95,113,113,-100,-96,113,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'LT':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,117,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,117,-99,117,117,-94,117,-95,117,117,-100,-96,117,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'INT':([28,84,86,97,157,183,222,225,231,249,272,294,295,313,332,333,],[-17,160,-15,160,160,160,-16,160,160,160,160,160,160,160,160,160,]),'ELSE':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,82,94,104,109,110,127,132,134,135,169,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,212,216,217,242,243,245,281,290,304,305,307,326,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-113,-115,-170,-105,-106,-111,-162,215,-135,-116,-169,247,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-112,-161,-134,-59,-75,-84,247,-81,-57,-76,-86,-82,-87,]),'TRUE':([3,15,26,41,44,45,53,62,69,74,80,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,139,140,141,142,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[56,56,56,56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-130,-127,-128,-126,-125,-129,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DIVIDE':([6,14,17,24,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-60,76,-56,-17,-159,-69,-66,-67,-68,-60,-65,-108,120,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,120,-99,120,120,120,120,120,120,120,-100,120,120,120,120,120,-101,-78,-161,-59,-75,-56,-57,-76,]),'PRINT':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[5,-7,5,-4,5,-2,5,5,5,-5,-6,-8,5,5,5,5,5,5,5,5,5,-131,5,-113,-3,5,-115,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-130,-127,-128,-126,-125,-129,-9,-116,5,5,5,-18,-24,5,5,-179,-112,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'IN':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,172,175,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,232,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,122,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-151,231,-169,-92,-99,-91,-90,-94,122,-95,-89,122,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,272,-75,-56,-57,-76,]),'UPPER':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[7,-7,7,-4,7,-2,7,7,7,-5,-6,-8,7,7,7,7,7,7,7,7,7,-131,7,-113,-3,7,-115,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-130,-127,-128,-126,-125,-129,-9,-116,7,7,7,-18,-24,7,7,-179,-112,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'PLUS':([6,14,17,24,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-60,78,-56,-17,-159,-69,-66,-67,-68,-60,-65,-108,125,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,125,-99,125,125,125,125,125,125,125,-100,125,125,125,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'REF':([28,84,86,97,157,183,222,249,294,313,332,],[-17,157,-15,157,157,157,-16,157,157,157,157,]),'CONCAT':([6,14,17,24,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-60,72,-56,-17,-159,-69,-66,-67,-68,-60,-65,-108,119,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'LENGTH':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[31,-7,31,-4,31,-2,31,31,31,-5,-6,-8,31,31,31,31,31,31,31,31,31,-131,31,-113,-3,31,-115,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-130,-127,-128,-126,-125,-129,-9,-116,31,31,31,-18,-24,31,31,-179,-112,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'GT':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,123,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,123,-99,123,123,-94,123,-95,123,123,-100,-96,123,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'BY':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,273,274,275,281,290,304,307,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,303,-152,-155,-81,-57,-76,-82,]),'OR':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,114,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,-92,-99,-91,-90,-94,114,-95,-89,114,-100,-96,114,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'LBRACKET':([6,14,17,24,28,37,42,43,46,47,49,50,51,52,55,56,58,60,64,65,66,75,104,127,132,158,161,187,208,212,217,242,264,290,304,],[-160,-60,81,-56,-17,-159,-69,107,-66,-67,-68,-60,-65,81,-70,-71,-77,-56,-72,-74,-73,-58,-170,81,-162,225,226,-169,-78,-161,-59,-75,-56,-57,-76,]),'FALSE':([3,15,26,41,44,45,53,62,69,74,80,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,139,140,141,142,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[55,55,55,55,55,55,55,55,55,55,-131,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-130,-127,-128,-126,-125,-129,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'END':([1,10,19,27,36,39,82,83,167,182,185,209,210,314,328,329,335,],[-7,-4,-2,-5,-6,-8,-113,-3,-9,-18,-24,-179,-112,331,336,337,341,]),'LOC':([28,146,148,149,150,151,152,153,154,159,160,162,163,164,165,224,285,291,296,297,317,318,339,],[-17,-32,-35,-34,-41,-31,-28,-46,-45,-37,-36,-38,-30,-29,-33,-44,311,-39,-47,-40,-55,-49,-50,]),'SCONST':([3,15,26,41,44,45,53,62,69,74,80,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,139,140,141,142,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[65,65,65,65,65,65,65,65,65,65,-131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-130,-127,-128,-126,-125,-129,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'ICONST':([3,15,26,41,44,45,53,62,69,74,80,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,139,140,141,142,180,186,190,218,219,221,223,225,226,227,233,234,241,244,247,279,292,293,295,301,303,333,],[42,42,42,42,42,42,42,42,42,42,-131,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-130,-127,-128,-126,-125,-129,42,42,42,42,42,42,42,42,266,42,42,42,42,42,42,42,42,42,42,42,325,42,]),'IF':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,62,68,69,74,80,81,82,83,88,94,95,107,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[15,-7,44,-4,44,-2,15,15,44,-5,-6,-8,44,44,44,15,44,44,-131,44,-113,-3,15,-115,44,44,15,-130,-127,-128,-126,-125,-129,-9,-116,15,15,44,-18,-24,44,44,-179,-112,15,15,44,44,44,44,44,44,15,44,44,44,44,44,15,44,15,44,44,44,44,15,15,15,15,15,15,44,15,]),'PROC':([68,],[131,]),'NOT':([3,6,15,26,28,37,41,42,44,46,47,49,50,51,52,54,55,56,58,60,61,62,63,64,65,66,67,69,74,75,80,81,95,104,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,136,137,139,140,141,142,180,186,187,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,218,219,221,223,225,227,233,234,241,242,244,247,264,279,290,292,293,295,301,304,333,],[53,-160,53,53,-17,-159,53,-69,53,-66,-67,-68,-60,-65,-108,116,-70,-71,-110,-56,-88,53,-109,-72,-74,-73,-107,53,53,-58,-131,53,53,-170,53,-105,-106,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-111,-162,-130,-127,-128,-126,-125,-129,53,53,-169,53,-92,-99,-91,-90,-94,-102,-95,-89,116,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,53,53,53,53,53,53,53,53,53,-75,53,53,-56,53,-57,53,53,53,53,-76,53,]),'MOD':([6,14,17,24,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-60,79,-56,-17,-159,-69,-66,-67,-68,-60,-65,-108,126,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,126,-99,126,126,126,126,126,126,126,-100,126,126,126,126,126,-101,-78,-161,-59,-75,-56,-57,-76,]),'RPAREN':([6,28,37,41,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,69,75,104,105,106,109,110,127,128,132,133,146,148,149,150,151,152,153,154,159,160,162,163,164,165,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,212,217,224,240,242,248,250,255,258,268,281,285,286,290,291,293,296,297,304,307,308,311,315,316,317,318,330,339,],[-160,-17,-159,104,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,132,-58,-170,187,-163,-105,-106,-111,208,-162,212,-32,-35,-34,-41,-31,-28,-46,-45,-37,-36,-38,-30,-29,-33,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,251,-161,-59,-44,-164,-75,284,-184,-62,291,297,-81,-189,-186,-57,-39,132,-47,-40,-76,-82,-185,-188,-43,-163,-55,-49,338,-50,]),'NUM':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[38,-7,38,-4,38,-2,38,38,38,-5,-6,-8,38,38,38,38,38,38,38,38,38,-131,38,-113,-3,38,-115,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-130,-127,-128,-126,-125,-129,-9,-116,38,38,38,-18,-24,38,38,-179,-112,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'RBRACKET':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,143,145,146,148,149,159,160,162,165,187,188,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,254,255,256,262,263,265,266,267,277,281,290,291,297,304,307,315,319,320,340,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,217,-63,-32,-35,-34,-37,-36,-38,-33,-169,-63,242,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,-64,-62,290,-54,294,-53,-48,296,304,-81,-57,-39,-40,-76,-82,-43,332,-51,-52,]),'NEQ':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,111,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,-92,-99,-91,111,-94,111,-95,111,111,-100,-96,111,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'PRED':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[20,-7,20,-4,20,-2,20,20,20,-5,-6,-8,20,20,20,20,20,20,20,20,20,-131,20,-113,-3,20,-115,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-130,-127,-128,-126,-125,-129,-9,-116,20,20,20,-18,-24,20,20,-179,-112,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'FOR':([25,],[91,]),'$end':([1,10,19,21,22,27,36,39,82,83,167,182,185,209,210,],[-7,-4,-2,0,-1,-5,-6,-8,-113,-3,-9,-18,-24,-179,-112,]),'GE':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,115,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,115,-99,115,115,-94,115,-95,115,115,-100,-96,115,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'DCL':([0,1,10,19,22,27,36,39,82,83,167,182,185,209,210,289,310,312,314,327,328,329,335,],[23,-7,-4,-2,23,-5,-6,-8,-113,-3,-9,-18,-24,-179,-112,23,23,23,23,23,23,23,23,]),'FI':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,82,94,104,109,110,127,132,134,135,169,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,212,213,215,216,217,242,246,253,280,281,282,290,304,307,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-113,-115,-170,-105,-106,-111,-162,214,-135,-116,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-112,-161,252,-137,-134,-59,-75,281,-136,307,-81,-85,-57,-76,-82,]),'ARROW':([3,6,14,15,17,24,26,28,37,41,44,45,50,52,53,60,62,69,74,75,80,81,95,104,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,136,137,139,140,141,142,180,186,187,190,212,217,218,219,221,223,225,227,233,234,241,244,247,264,279,290,292,293,295,301,333,],[57,-160,-60,57,75,-56,57,-17,-159,57,57,57,-60,75,57,-56,57,57,57,-58,-131,57,57,-170,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,75,-162,-130,-127,-128,-126,-125,-129,57,57,-169,57,-161,-59,57,57,57,57,57,57,57,57,57,57,57,-56,57,-57,57,57,57,57,57,]),'OD':([82,88,94,169,171,210,229,],[-113,168,-115,-116,230,-112,269,]),'COMMA':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,84,85,86,87,97,98,99,100,101,102,104,105,106,109,110,127,132,133,143,145,146,147,148,149,150,151,152,153,154,159,160,162,163,164,165,187,188,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,220,222,224,228,235,236,237,238,239,240,242,248,249,250,254,255,257,262,263,265,276,281,285,286,290,291,296,297,304,307,308,311,315,316,317,318,319,320,339,340,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,155,166,-15,-10,155,181,-19,-25,155,184,-170,186,-163,-105,-106,-111,-162,186,218,-63,-32,-13,-35,-34,-41,-31,-28,-46,-45,-37,-36,-38,-30,-29,-33,-169,-63,218,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-12,-16,-44,-11,-22,-23,-20,-27,-26,-164,-75,283,155,-184,-64,-62,-14,-54,295,-53,-21,-81,-189,-186,-57,-39,-47,-40,-76,-82,-185,-188,-43,-163,-55,-49,333,-51,-50,-52,]),'DO':([0,1,10,19,22,25,27,36,39,68,82,83,88,94,135,167,169,171,177,182,185,209,210,215,216,229,253,289,310,312,314,327,328,329,335,],[25,-7,-4,-2,25,25,-5,-6,-8,25,-113,-3,25,-115,25,-9,-116,25,25,-18,-24,-179,-112,25,25,25,25,25,25,25,25,25,25,25,25,]),'MINUS':([3,6,14,15,17,24,26,28,37,41,42,44,46,47,49,50,51,52,54,55,56,58,60,61,62,63,64,65,66,67,69,74,75,80,81,95,104,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,136,137,139,140,141,142,180,186,187,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,218,219,221,223,225,227,233,234,241,242,244,247,264,279,290,292,293,295,301,304,333,],[45,-160,-60,45,77,-56,45,-17,-159,45,-69,45,-66,-67,-68,-60,-65,-108,124,-70,-71,-110,-56,-88,45,-109,-72,-74,-73,-107,45,45,-58,-131,45,45,-170,45,-105,-106,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-111,-162,-130,-127,-128,-126,-125,-129,45,45,-169,45,124,-99,124,124,124,124,124,124,124,-100,124,124,124,-98,-97,-101,-78,-161,-59,45,45,45,45,45,45,45,45,45,-75,45,45,-56,45,-57,45,45,45,45,-76,45,]),'ARRAY':([28,84,86,97,157,183,222,249,294,313,332,],[-17,158,-15,158,158,158,-16,158,158,158,158,]),'READ':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[13,-7,13,-4,13,-2,13,13,13,-5,-6,-8,13,13,13,13,13,13,13,13,13,-131,13,-113,-3,13,-115,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-130,-127,-128,-126,-125,-129,-9,-116,13,13,13,-18,-24,13,13,-179,-112,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LPAREN':([2,3,5,7,8,13,15,20,24,26,28,29,31,32,38,41,44,45,53,60,62,69,74,80,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,136,137,139,140,141,142,146,148,149,150,156,159,160,162,164,165,180,186,190,218,219,221,223,225,227,233,234,241,244,247,261,264,265,270,271,279,288,291,292,293,295,297,298,301,333,],[41,62,-178,-174,69,-177,62,-172,-42,62,-17,-173,-176,-175,-171,62,62,62,62,-42,62,62,62,-131,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,211,-130,-127,-128,-126,-125,-129,-32,-35,-34,-42,223,-37,-36,-38,227,-33,62,62,62,62,62,62,62,62,62,62,62,62,62,62,293,-42,227,-42,227,62,313,-39,62,62,62,-40,227,62,62,]),'ID':([0,1,3,10,15,19,22,23,25,26,27,28,30,33,34,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,84,86,88,91,94,95,97,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,155,157,166,167,169,171,177,180,181,182,183,184,185,186,190,209,210,211,215,216,218,219,221,222,223,225,227,229,231,233,234,241,244,247,249,253,272,279,283,289,292,293,294,295,301,310,312,313,314,327,328,329,332,333,335,],[28,-7,28,-4,28,-2,28,28,28,28,-5,-17,28,28,28,-6,-8,28,28,28,28,28,28,28,28,28,-131,28,-113,-3,28,-15,28,28,-115,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-130,-127,-128,-126,-125,-129,28,28,28,-9,-116,28,28,28,28,-18,28,28,-24,28,28,-179,-112,28,28,28,28,28,28,-16,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'SUCC':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[29,-7,29,-4,29,-2,29,29,29,-5,-6,-8,29,29,29,29,29,29,29,29,29,-131,29,-113,-3,29,-115,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-130,-127,-128,-126,-125,-129,-9,-116,29,29,29,-18,-24,29,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'SYN':([0,1,10,19,22,27,36,39,82,83,167,182,185,209,210,289,310,312,314,327,328,329,335,],[30,-7,-4,-2,30,-5,-6,-8,-113,-3,-9,-18,-24,-179,-112,30,30,30,30,30,30,30,30,]),'TO':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,273,274,275,281,290,300,302,304,307,324,325,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,301,-152,-155,-81,-57,301,301,-76,-82,301,-153,]),'BOOL':([28,84,86,97,157,183,222,225,231,249,272,294,295,313,332,333,],[-17,159,-15,159,159,159,-16,159,159,159,159,159,159,159,159,159,]),'CCONST':([3,15,26,41,44,45,53,62,69,74,80,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,139,140,141,142,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[64,64,64,64,64,64,64,64,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-130,-127,-128,-126,-125,-129,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'CHARS':([28,84,86,97,157,183,222,249,294,313,332,],[-17,161,-15,161,161,161,-16,161,161,161,161,]),'LOWER':([0,1,3,10,15,19,22,25,26,27,36,39,41,44,45,53,57,62,68,69,74,80,81,82,83,88,94,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,139,140,141,142,167,169,171,177,180,182,185,186,190,209,210,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[32,-7,32,-4,32,-2,32,32,32,-5,-6,-8,32,32,32,32,32,32,32,32,32,-131,32,-113,-3,32,-115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-130,-127,-128,-126,-125,-129,-9,-116,32,32,32,-18,-24,32,32,-179,-112,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'AND':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,118,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,-92,-99,-91,118,-94,118,-95,-89,118,-100,-96,118,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'TYPE':([0,1,10,19,22,27,36,39,82,83,167,182,185,209,210,289,310,312,314,327,328,329,335,],[33,-7,-4,-2,33,-5,-6,-8,-113,-3,-9,-18,-24,-179,-112,33,33,33,33,33,33,33,33,]),'SEMI':([3,6,9,11,12,14,16,18,28,35,37,40,42,46,47,48,49,50,51,52,54,55,56,58,59,60,61,63,64,65,66,67,71,75,85,87,89,90,93,96,98,99,100,102,103,104,109,110,127,129,130,132,138,146,147,148,149,150,151,152,153,154,159,160,162,163,164,165,168,170,173,174,176,178,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,214,217,220,224,228,230,235,236,237,238,239,242,251,252,257,269,271,275,276,281,284,287,290,291,296,297,298,299,304,307,309,317,318,321,322,323,331,334,336,337,338,339,341,],[-167,-160,-119,-123,-118,-120,-117,82,-17,-122,-159,-121,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-166,-56,-88,-109,-72,-74,-73,-107,-83,-58,167,-10,-142,171,-143,-168,182,-19,-25,185,-165,-170,-105,-106,-111,209,210,-162,-124,-32,-13,-35,-34,-41,-31,-28,-46,-45,-37,-36,-38,-30,-29,-33,-140,-141,-145,-146,-144,-158,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-133,-59,-12,-44,-11,-139,-22,-23,-20,-27,-26,-75,289,-132,-14,-138,-157,-155,-21,-81,310,312,-57,-39,-47,-40,-156,-150,-76,-82,327,-55,-49,-148,-154,-149,-183,-147,-181,-182,-187,-50,-180,]),'EXIT':([0,1,10,19,22,25,27,36,39,68,82,83,88,94,135,167,169,171,177,182,185,209,210,215,216,229,253,289,310,312,314,327,328,329,335,],[34,-7,-4,-2,34,34,-5,-6,-8,34,-113,-3,34,-115,34,-9,-116,34,34,-18,-24,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,]),'CHAR':([28,84,86,97,157,183,222,225,231,249,272,294,295,313,332,333,],[-17,162,-15,162,162,162,-16,162,162,162,162,162,162,162,162,162,]),'LE':([6,28,37,42,46,47,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,264,290,304,],[-160,-17,-159,-69,-66,-67,-68,-60,-65,-108,121,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,121,-99,121,121,-94,121,-95,121,121,-100,-96,121,-93,-98,-97,-101,-78,-161,-59,-75,-56,-57,-76,]),'RETURNS':([251,284,],[288,288,]),'RESULT':([0,1,10,19,22,25,27,36,39,68,82,83,88,94,135,167,169,171,177,182,185,209,210,215,216,229,253,289,310,312,314,327,328,329,335,],[26,-7,-4,-2,26,26,-5,-6,-8,26,-113,-3,26,-115,26,-9,-116,26,26,-18,-24,-179,-112,26,26,26,26,26,26,26,26,26,26,26,26,]),'NULL':([3,15,26,41,44,45,53,62,69,74,80,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,139,140,141,142,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[66,66,66,66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-130,-127,-128,-126,-125,-129,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'WHILE':([6,25,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,89,104,109,110,127,132,146,148,149,159,160,162,165,173,174,176,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,271,275,281,290,291,297,298,299,304,307,321,322,323,334,],[-160,95,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,95,-170,-105,-106,-111,-162,-32,-35,-34,-37,-36,-38,-33,-145,-146,-144,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,-157,-155,-81,-57,-39,-40,-156,-150,-76,-82,-148,-154,-149,-147,]),'DOWN':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,172,175,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,273,274,275,281,290,302,304,307,325,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-151,232,-169,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,300,-152,-155,-81,-57,324,-76,-82,-153,]),'COLON':([4,6,24,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,92,104,109,110,127,132,144,145,187,188,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,259,260,264,281,290,304,307,316,],[68,-160,-114,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,177,-170,-105,-106,-111,-162,219,-61,-169,241,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,292,-61,-56,-81,-57,-76,-82,-61,]),'ELSIF':([6,28,37,42,46,47,48,49,50,51,52,54,55,56,58,60,61,63,64,65,66,67,75,104,109,110,127,132,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,212,217,242,243,245,281,290,304,305,307,326,],[-160,-17,-159,-69,-66,-67,-80,-68,-60,-65,-108,-79,-70,-71,-110,-56,-88,-109,-72,-74,-73,-107,-58,-170,-105,-106,-111,-162,-169,244,-92,-99,-91,-90,-94,-102,-95,-89,-104,-100,-96,-103,-93,-98,-97,-101,-78,-161,-59,-75,-84,279,-81,-57,-76,-86,-82,-87,]),'ASSIGN':([6,14,17,24,28,37,60,72,73,75,76,77,78,79,86,97,101,104,132,146,147,148,149,150,151,152,153,154,159,160,162,163,164,165,172,175,179,187,212,217,222,224,290,291,296,297,317,318,339,],[-160,-60,80,-56,-17,-159,-56,136,137,-58,139,140,141,142,-15,180,183,-170,-162,-32,221,-35,-34,-41,-31,-28,-46,-45,-37,-36,-38,-30,-29,-33,-151,233,234,-169,-161,-59,-16,-44,-57,-39,-47,-40,-55,-49,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initialization':([147,],[220,]),'action_statement_list':([25,135,171,215,],[88,216,229,253,]),'procedure_statement':([0,22,289,310,312,314,327,328,329,335,],[1,1,1,1,1,1,1,1,1,1,]),'builtin_name':([0,3,15,22,25,26,41,44,45,53,57,62,68,69,74,81,88,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,171,177,180,186,190,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'integer_mode':([84,97,157,183,225,231,249,272,294,295,313,332,333,],[146,146,146,146,146,146,146,146,146,146,146,146,146,]),'for_control':([25,],[89,]),'label_id':([0,22,25,88,135,171,215,216,229,253,289,310,312,314,327,328,329,335,],[4,4,92,92,92,92,92,92,92,92,4,4,4,4,4,4,4,4,]),'mode_definition':([33,184,],[100,239,]),'builtin_call':([0,3,15,22,25,26,41,44,45,53,57,62,68,69,74,81,88,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,171,177,180,186,190,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'discrete_mode_name':([0,3,15,22,25,26,41,44,45,53,57,62,68,69,74,81,84,88,95,97,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,157,171,177,180,183,186,190,215,216,218,219,221,223,225,227,229,231,233,234,241,244,247,249,253,272,279,289,292,293,294,295,301,310,312,313,314,327,328,329,332,333,335,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,156,8,8,156,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,156,8,8,8,156,8,8,8,8,8,8,8,8,261,8,8,156,8,8,8,8,8,156,8,156,8,8,8,8,156,261,8,8,8,156,8,8,8,8,156,261,8,]),'parenthesized_expression':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'declaration_statement':([0,22,289,310,312,314,327,328,329,335,],[10,10,10,10,10,10,10,10,10,10,]),'literal_range':([223,225,227,293,295,333,],[258,262,268,258,262,262,]),'value_array_slice':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'do_action':([0,22,25,68,88,135,171,177,215,216,229,253,289,310,312,314,327,328,329,335,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'procedure_call':([0,3,15,22,25,26,41,44,45,53,57,62,68,69,74,81,88,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,171,177,180,186,190,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'conditional_expression':([3,15,26,41,44,62,69,74,81,95,107,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'synonym_list':([30,],[98,]),'call_action':([0,3,15,22,25,26,41,44,45,53,57,62,68,69,74,81,88,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,171,177,180,186,190,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[14,50,50,14,14,50,50,50,50,50,50,50,14,50,50,50,14,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,14,14,14,50,50,50,14,14,50,50,50,50,50,50,14,50,50,50,50,50,14,50,14,50,50,50,50,14,14,14,14,14,14,50,14,]),'else_expression':([191,245,],[246,280,]),'declaration':([23,166,],[87,228,]),'formal_parameter':([211,283,],[250,308,]),'mode':([84,97,157,183,249,294,313,332,],[147,179,224,238,285,317,285,317,]),'program':([0,],[21,]),'result_action':([0,22,25,68,88,135,171,177,215,216,229,253,289,310,312,314,327,328,329,335,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'step_value':([273,],[302,]),'discrete_range_mode':([84,97,157,183,225,231,249,272,294,295,313,332,333,],[148,148,148,148,148,148,148,148,148,148,148,148,148,]),'discrete_expression':([233,301,],[274,322,]),'character_mode':([84,97,157,183,225,231,249,272,294,295,313,332,333,],[149,149,149,149,149,149,149,149,149,149,149,149,149,]),'identifier':([0,3,15,22,23,25,26,30,33,34,41,44,45,53,57,62,68,69,74,81,84,88,91,95,97,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,155,157,166,171,177,180,181,183,184,186,190,211,215,216,218,219,221,223,225,227,229,231,233,234,241,244,247,249,253,272,279,283,289,292,293,294,295,301,310,312,313,314,327,328,329,332,333,335,],[24,60,60,24,86,24,60,86,86,103,60,60,60,60,60,60,60,60,60,60,150,24,172,60,150,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,24,222,150,86,24,60,60,86,150,86,60,60,86,24,24,60,60,60,60,264,60,24,270,60,60,60,60,60,150,24,270,60,86,24,60,60,150,264,60,24,24,150,24,24,24,24,150,264,24,]),'boolean_expression':([15,44,95,244,279,],[70,108,178,278,306,]),'result_spec':([251,284,],[287,309,]),'composite_mode':([84,97,157,183,249,294,313,332,],[151,151,151,151,151,151,151,151,]),'loop_counter':([91,],[175,]),'string_mode':([84,97,157,183,249,294,313,332,],[154,154,154,154,154,154,154,154,]),'if_action':([0,22,25,68,88,135,171,177,215,216,229,253,289,310,312,314,327,328,329,335,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression_list':([81,107,],[143,189,]),'control_part':([25,],[90,]),'operand':([3,15,26,41,44,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'synonym_statement':([0,22,289,310,312,314,327,328,329,335,],[27,27,27,27,27,27,27,27,27,27,]),'step_enumeration':([91,],[173,]),'range_enumeration':([91,],[174,]),'while_control':([25,89,],[93,170,]),'discrete_mode':([84,97,157,183,225,231,249,272,294,295,313,332,333,],[164,164,164,164,265,271,164,298,164,265,164,164,265,]),'newmode_list':([33,],[102,]),'action':([0,22,25,68,88,135,171,177,215,216,229,253,289,310,312,314,327,328,329,335,],[18,18,18,130,18,18,18,130,18,18,18,18,18,18,18,18,18,18,18,18,]),'start_value':([233,],[273,]),'assigning_operator':([17,],[74,]),'binop':([3,15,26,41,44,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[54,54,54,54,54,54,54,54,54,54,54,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'array_mode':([84,97,157,183,249,294,313,332,],[153,153,153,153,153,153,153,153,]),'then_expression':([108,278,306,],[191,305,326,]),'formal_parameter_list':([211,],[248,]),'mode_name':([84,97,157,183,249,294,313,332,],[152,152,152,152,152,152,152,152,]),'else_clause':([134,],[213,]),'index_mode_list':([295,],[319,]),'assignment_action':([0,22,25,68,88,135,171,177,215,216,229,253,289,310,312,314,327,328,329,335,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'statement':([0,22,289,310,312,314,327,328,329,335,],[19,83,19,19,19,83,19,83,83,83,]),'value_array_element':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'constant_expression':([180,234,],[235,276,]),'procedure_definition':([68,],[129,]),'identifier_list':([23,30,33,166,181,184,211,283,],[84,97,101,84,97,101,249,249,]),'location':([0,3,15,22,25,26,41,44,45,53,57,62,68,69,74,81,88,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,171,177,180,186,190,215,216,218,219,221,223,225,227,229,233,234,241,244,247,253,279,289,292,293,295,301,310,312,314,327,328,329,333,335,],[17,52,52,17,17,52,52,52,52,52,127,52,17,52,52,52,17,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,17,17,17,52,52,52,17,17,52,52,52,52,52,52,17,52,52,52,52,52,17,52,17,52,52,52,52,17,17,17,17,17,17,52,17,]),'parameter_list':([41,69,293,],[105,133,133,]),'end_value':([273,300,302,324,],[299,321,323,334,]),'newmode_statement':([0,22,289,310,312,314,327,328,329,335,],[36,36,36,36,36,36,36,36,36,36,]),'reference_mode':([84,97,157,183,249,294,313,332,],[163,163,163,163,163,163,163,163,]),'boolean_mode':([84,97,157,183,225,231,249,272,294,295,313,332,333,],[165,165,165,165,165,165,165,165,165,165,165,165,165,]),'array_primitive_value':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'literal':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'statement_list':([0,289,310,312,327,],[22,314,328,329,335,]),'lower_bound':([81,223,225,227,293,295,333,],[144,259,259,259,259,259,259,]),'primitive_value':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'synonym_definition':([30,181,],[99,237,]),'elsif_expression':([191,],[245,]),'parameter_spec':([249,313,],[286,330,]),'upper_bound':([219,292,],[256,315,]),'index_mode':([225,295,333,],[263,320,340,]),'declaration_list':([23,],[85,]),'referenced_location':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'operand1':([3,15,26,41,44,45,53,62,69,74,81,95,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[67,67,67,67,67,109,110,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'then_clause':([70,],[134,]),'string_length':([226,],[267,]),'return_action':([0,22,25,68,88,135,171,177,215,216,229,253,289,310,312,314,327,328,329,335,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'iteration':([91,],[176,]),'element_mode':([294,332,],[318,339,]),'action_statement':([0,22,25,88,135,171,215,216,229,253,289,310,312,314,327,328,329,335,],[39,39,94,169,94,94,94,169,169,169,39,39,39,39,39,39,39,39,]),'exit_action':([0,22,25,68,88,135,171,177,215,216,229,253,289,310,312,314,327,328,329,335,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'expression':([3,15,26,41,44,62,69,74,81,95,107,180,186,190,218,219,221,223,225,227,233,234,241,244,247,279,292,293,295,301,333,],[59,71,96,106,71,128,106,138,145,71,188,236,240,243,254,255,257,260,260,260,275,236,277,71,282,71,255,316,260,275,260,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
