
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7669D4C2E0049812FBCEACDC1190C1F2'
    
_lr_action_items = {'DO':([0,4,15,18,20,21,28,29,30,68,81,86,93,94,124,145,153,155,158,160,183,206,207,216,218,226,246,290,311,313,314,327,328,330,335,],[21,-4,-6,21,-2,21,-5,-7,-8,-113,21,-3,21,-115,21,-24,21,21,-116,-9,-18,21,21,-112,-179,21,21,21,21,21,21,21,21,21,21,]),'IF':([0,2,4,15,18,20,21,28,29,30,31,35,42,63,68,69,73,78,80,81,86,91,93,94,102,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[2,42,-4,-6,2,-2,2,-5,-7,-8,42,42,42,42,-113,42,-131,42,42,2,-3,42,2,-115,42,2,42,-127,-130,-126,-129,-128,-125,-24,2,2,-116,-9,42,-18,42,2,2,42,42,42,-112,-179,42,2,42,42,42,42,42,42,42,2,42,42,2,42,42,42,42,2,2,2,2,2,2,42,2,]),'SUCC':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[11,11,-4,-6,11,-2,11,-5,-7,-8,11,11,11,11,11,11,11,-113,11,-131,11,11,11,-3,11,11,-115,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-127,-130,-126,-129,-128,-125,-24,11,11,-116,-9,11,-18,11,11,11,11,11,11,-112,-179,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FOR':([21,],[87,]),'END':([4,15,20,28,29,30,68,86,145,160,183,216,218,314,328,330,335,],[-4,-6,-2,-5,-7,-8,-113,-3,-24,-9,-18,-112,-179,331,336,338,341,]),'EXIT':([0,4,15,18,20,21,28,29,30,68,81,86,93,94,124,145,153,155,158,160,183,206,207,216,218,226,246,290,311,313,314,327,328,330,335,],[6,-4,-6,6,-2,6,-5,-7,-8,-113,6,-3,6,-115,6,-24,6,6,-116,-9,-18,6,6,-112,-179,6,6,6,6,6,6,6,6,6,6,]),'SEMI':([1,3,17,19,23,26,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,65,66,67,70,77,82,85,89,90,92,95,96,98,99,101,103,105,122,125,130,140,141,143,149,151,152,154,156,157,161,162,165,166,167,168,169,171,172,174,175,176,177,178,179,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,208,212,214,219,221,225,227,230,233,236,237,238,239,245,247,255,257,262,263,275,276,280,283,287,289,291,292,297,302,303,305,307,310,316,317,318,323,324,331,332,336,337,338,340,341,],[-123,68,-159,-17,-117,-121,-167,-119,-160,-118,-122,-120,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-83,-65,-60,-165,-58,145,-25,-142,155,-143,160,-10,-168,-19,183,-166,-111,-105,-106,-170,-124,216,218,-146,-145,-144,-141,-158,-140,-28,-34,-30,-46,-36,-33,-45,-29,-35,-13,-31,-37,-41,-32,-38,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-133,-78,-169,-59,-26,-27,-139,-11,-44,-12,-22,-23,-20,-161,-132,-75,290,-157,-155,-138,-14,-21,-81,-57,311,313,-156,-150,-47,-40,-39,-82,-76,327,-148,-154,-149,-49,-55,-183,-147,-181,-187,-182,-50,-180,]),'ARRAY':([19,84,97,100,147,170,220,253,300,312,334,],[-17,-15,164,164,164,164,-16,164,164,164,164,]),'ELSIF':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,240,244,247,280,283,305,306,307,326,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,241,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,-161,277,-84,-75,-81,-57,-82,-86,-76,-87,]),'ARROW':([2,7,8,17,19,31,35,37,40,42,44,46,56,62,63,67,69,73,77,78,80,91,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,130,131,132,133,134,135,139,181,185,187,211,212,213,214,215,224,229,231,232,234,235,239,241,243,248,266,277,283,295,298,299,301,333,],[52,-56,77,-159,-17,52,52,-160,-60,52,-56,77,52,52,52,-60,52,-131,-58,52,52,52,52,77,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-170,-127,-130,-126,-129,-128,-125,52,-162,52,52,-169,52,-59,52,52,52,52,52,52,52,-161,52,52,52,-56,52,-57,52,52,52,52,52,]),'LENGTH':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[9,9,-4,-6,9,-2,9,-5,-7,-8,9,9,9,9,9,9,9,-113,9,-131,9,9,9,-3,9,9,-115,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-127,-130,-126,-129,-128,-125,-24,9,9,-116,-9,9,-18,9,9,9,9,9,9,-112,-179,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'TRUE':([2,31,35,42,56,62,63,69,73,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,131,132,133,134,135,139,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[48,48,48,48,48,48,48,48,-131,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-127,-130,-126,-129,-128,-125,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TO':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,260,261,262,280,283,294,296,305,307,315,319,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,-161,-75,295,-152,-155,-81,-57,295,295,-82,-76,-153,295,]),'RBRACKET':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,136,137,162,167,168,172,176,178,179,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,209,210,212,214,239,247,250,251,252,264,265,268,269,270,280,282,283,302,303,305,307,321,322,325,339,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,214,-63,-34,-36,-33,-35,-37,-32,-38,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,247,-63,-169,-59,-161,-75,-64,283,-62,297,-48,300,-54,-53,-81,307,-57,-40,-39,-82,-76,-51,334,-43,-52,]),'ELSE':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,68,77,94,105,122,123,124,125,130,158,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,208,212,214,216,239,240,244,247,280,283,305,306,307,326,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-113,-58,-115,-111,-105,206,-135,-106,-170,-116,-162,243,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-134,-78,-169,-59,-112,-161,243,-84,-75,-81,-57,-82,-86,-76,-87,]),'BY':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,260,261,262,280,283,305,307,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,-161,-75,293,-152,-155,-81,-57,-82,-76,]),'PRED':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[13,13,-4,-6,13,-2,13,-5,-7,-8,13,13,13,13,13,13,13,-113,13,-131,13,13,13,-3,13,13,-115,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-127,-130,-126,-129,-128,-125,-24,13,13,-116,-9,13,-18,13,13,13,13,13,13,-112,-179,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'INT':([19,84,97,100,147,170,220,222,229,253,259,299,300,312,333,334,],[-17,-15,167,167,167,167,-16,167,167,167,167,167,167,167,167,167,]),'TIMES':([7,8,17,19,37,40,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-56,71,-159,-17,-160,-60,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,108,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,108,108,-99,108,108,108,108,-101,-100,108,108,108,108,108,108,108,-78,-169,-59,-161,-75,-56,-57,-76,]),'SCONST':([2,31,35,42,56,62,63,69,73,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,131,132,133,134,135,139,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[50,50,50,50,50,50,50,50,-131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-127,-130,-126,-129,-128,-125,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ICONST':([2,31,35,42,56,62,63,69,73,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,131,132,133,134,135,139,181,187,211,213,215,224,228,229,231,232,234,235,241,243,248,277,293,295,298,299,301,333,],[51,51,51,51,51,51,51,51,-131,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-127,-130,-126,-129,-128,-125,51,51,51,51,51,51,265,51,51,51,51,51,51,51,51,51,315,51,51,51,51,51,]),'OD':([68,93,94,155,158,216,226,],[-113,157,-115,225,-116,-112,263,]),'UPPER':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[14,14,-4,-6,14,-2,14,-5,-7,-8,14,14,14,14,14,14,14,-113,14,-131,14,14,14,-3,14,14,-115,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-127,-130,-126,-129,-128,-125,-24,14,14,-116,-9,14,-18,14,14,14,14,14,14,-112,-179,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'THEN':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,61,65,66,67,77,104,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,279,280,283,304,305,307,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,124,-83,-65,-60,-58,187,-111,-105,-106,-170,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,-161,-75,187,-81,-57,187,-82,-76,]),'TYPE':([0,4,15,18,20,28,29,30,68,86,145,160,183,216,218,290,311,313,314,327,328,330,335,],[16,-4,-6,16,-2,-5,-7,-8,-113,-3,-24,-9,-18,-112,-179,16,16,16,16,16,16,16,16,]),'$end':([4,15,18,20,22,28,29,30,68,86,145,160,183,216,218,],[-4,-6,-1,-2,0,-5,-7,-8,-113,-3,-24,-9,-18,-112,-179,]),'CCONST':([2,31,35,42,56,62,63,69,73,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,131,132,133,134,135,139,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[41,41,41,41,41,41,41,41,-131,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-127,-130,-126,-129,-128,-125,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'FALSE':([2,31,35,42,56,62,63,69,73,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,131,132,133,134,135,139,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[57,57,57,57,57,57,57,57,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-127,-130,-126,-129,-128,-125,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'CHAR':([19,84,97,100,147,170,220,222,229,253,259,299,300,312,333,334,],[-17,-15,179,179,179,179,-16,179,179,179,179,179,179,179,179,179,]),'ID':([0,2,4,6,15,16,18,19,20,21,25,28,29,30,31,33,35,42,52,56,62,63,68,69,73,78,80,81,84,86,87,91,93,94,97,100,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,144,145,146,147,153,155,158,159,160,170,181,182,183,187,206,207,211,213,215,216,217,218,220,222,224,226,229,231,232,234,235,241,243,246,248,253,259,277,286,290,295,298,299,300,301,311,312,313,314,327,328,330,333,334,335,],[19,19,-4,19,-6,19,19,-17,-2,19,19,-5,-7,-8,19,19,19,19,19,19,19,19,-113,19,-131,19,19,19,-15,-3,19,19,19,-115,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-127,-130,-126,-129,-128,-125,19,-24,19,19,19,19,-116,19,-9,19,19,19,-18,19,19,19,19,19,19,-112,19,-179,-16,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NULL':([2,31,35,42,56,62,63,69,73,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,131,132,133,134,135,139,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[58,58,58,58,58,58,58,58,-131,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-127,-130,-126,-129,-128,-125,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'LT':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,120,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,120,120,-99,120,120,-94,-96,-101,-100,120,-93,120,-98,120,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'GE':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,111,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,111,111,-99,111,111,-94,-96,-101,-100,111,-93,111,-98,111,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'SYN':([0,4,15,18,20,28,29,30,68,86,145,160,183,216,218,290,311,313,314,327,328,330,335,],[33,-4,-6,33,-2,-5,-7,-8,-113,-3,-24,-9,-18,-112,-179,33,33,33,33,33,33,33,33,]),'AND':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,106,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,-89,106,-99,106,106,-94,-96,-101,-100,-92,-93,106,-98,-91,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'REF':([19,84,97,100,147,170,220,253,300,312,334,],[-17,-15,170,170,170,170,-16,170,170,170,170,]),'PROC':([81,],[142,]),'WHILE':([17,19,21,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,89,105,122,125,130,149,151,152,162,167,168,172,176,178,179,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,257,262,280,283,291,292,302,303,305,307,316,317,318,332,],[-159,-17,91,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,91,-111,-105,-106,-170,-146,-145,-144,-34,-36,-33,-35,-37,-32,-38,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,-161,-75,-157,-155,-81,-57,-156,-150,-40,-39,-82,-76,-148,-154,-149,-147,]),'NUM':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[24,24,-4,-6,24,-2,24,-5,-7,-8,24,24,24,24,24,24,24,-113,24,-131,24,24,24,-3,24,24,-115,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-127,-130,-126,-129,-128,-125,-24,24,24,-116,-9,24,-18,24,24,24,24,24,24,-112,-179,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'DCL':([0,4,15,18,20,28,29,30,68,86,145,160,183,216,218,290,311,313,314,327,328,330,335,],[25,-4,-6,25,-2,-5,-7,-8,-113,-3,-24,-9,-18,-112,-179,25,25,25,25,25,25,25,25,]),'OR':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,110,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,-89,110,-99,110,-90,-94,-96,-101,-100,-92,-93,110,-98,-91,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'LOWER':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[27,27,-4,-6,27,-2,27,-5,-7,-8,27,27,27,27,27,27,27,-113,27,-131,27,27,27,-3,27,27,-115,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-127,-130,-126,-129,-128,-125,-24,27,27,-116,-9,27,-18,27,27,27,27,27,27,-112,-179,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'CHARS':([19,84,97,100,147,170,220,253,300,312,334,],[-17,-15,163,163,163,163,-16,163,163,163,163,]),'NEQ':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,115,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,115,115,-99,115,115,-94,-96,-101,-100,-92,-93,115,-98,-91,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'READ':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[32,32,-4,-6,32,-2,32,-5,-7,-8,32,32,32,32,32,32,32,-113,32,-131,32,32,32,-3,32,32,-115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-127,-130,-126,-129,-128,-125,-24,32,32,-116,-9,32,-18,32,32,32,32,32,32,-112,-179,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'GT':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,116,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,116,116,-99,116,116,-94,-96,-101,-100,116,-93,116,-98,116,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'IN':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,148,150,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,223,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,117,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,222,-151,-162,-89,117,-99,117,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,259,-161,-75,-56,-57,-76,]),'MINUS':([2,7,8,17,19,31,35,37,40,41,42,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,63,66,67,69,73,77,78,80,91,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,130,131,132,133,134,135,139,181,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,211,212,213,214,215,224,229,231,232,234,235,239,241,243,247,248,266,277,283,295,298,299,301,307,333,],[56,-56,74,-159,-17,56,56,-160,-60,-72,56,-66,-56,-108,-88,-71,-110,-74,-69,-67,118,-107,-70,-73,-68,-109,56,-65,-60,56,-131,-58,56,56,56,56,-111,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-105,-106,56,-170,-127,-130,-126,-129,-128,-125,56,-162,56,118,118,-99,118,118,118,118,-101,-100,118,118,118,-98,118,118,-97,-78,56,-169,56,-59,56,56,56,56,56,56,56,-161,56,56,-75,56,-56,56,-57,56,56,56,56,-76,56,]),'DOWN':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,148,150,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,260,261,262,280,283,296,305,307,315,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,223,-151,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,-161,-75,294,-152,-155,-81,-57,319,-82,-76,-153,]),'PRINT':([0,2,4,15,18,20,21,28,29,30,31,35,42,52,56,62,63,68,69,73,78,80,81,86,91,93,94,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,139,145,153,155,158,160,181,183,187,206,207,211,213,215,216,218,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[10,10,-4,-6,10,-2,10,-5,-7,-8,10,10,10,10,10,10,10,-113,10,-131,10,10,10,-3,10,10,-115,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-127,-130,-126,-129,-128,-125,-24,10,10,-116,-9,10,-18,10,10,10,10,10,10,-112,-179,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'COLON':([7,12,17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,88,105,122,125,130,137,138,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,210,212,214,239,247,266,271,272,280,283,305,307,320,],[-114,81,-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,153,-111,-105,-106,-170,-61,215,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,248,-169,-59,-161,-75,-56,-61,301,-81,-57,-82,-76,-61,]),'LBRACKET':([7,8,17,19,37,40,41,43,44,46,48,49,50,51,53,57,58,59,64,66,67,77,105,130,163,164,185,208,212,214,239,247,266,283,307,],[-56,78,-159,-17,-160,-60,-72,-66,-56,78,-71,-77,-74,-69,-67,-70,-73,-68,127,-65,-60,-58,78,-170,228,229,-162,-78,-169,-59,-161,-75,-56,-57,-76,]),'EQ':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,119,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,119,119,-99,119,119,-94,-96,-101,-100,-92,-93,119,-98,-91,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'RESULT':([0,4,15,18,20,21,28,29,30,68,81,86,93,94,124,145,153,155,158,160,183,206,207,216,218,226,246,290,311,313,314,327,328,330,335,],[31,-4,-6,31,-2,31,-5,-7,-8,-113,31,-3,31,-115,31,-24,31,31,-116,-9,-18,31,31,-112,-179,31,31,31,31,31,31,31,31,31,31,]),'FI':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,68,77,94,105,122,123,124,125,130,158,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,212,214,216,239,242,246,247,278,280,281,283,305,307,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-113,-58,-115,-111,-105,204,-135,-106,-170,-116,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,245,-137,-134,-78,-169,-59,-112,-161,280,-136,-75,305,-81,-85,-57,-82,-76,]),'COMMA':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,82,83,84,85,95,96,97,99,100,101,105,122,125,128,129,130,136,137,161,162,165,166,167,168,169,171,172,174,175,176,177,178,179,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,209,210,212,214,219,220,221,227,230,233,236,237,238,239,247,249,250,252,253,254,256,268,269,270,275,276,280,283,284,285,297,302,303,305,307,308,309,320,321,322,323,324,325,339,340,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,-58,144,146,-15,-25,159,-10,146,-19,146,182,-111,-105,-106,211,-163,-170,213,-63,-28,-34,-30,-46,-36,-33,-45,-29,-35,-13,-31,-37,-41,-32,-38,211,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,213,-63,-169,-59,-26,-16,-27,-11,-44,-12,-22,-23,-20,-161,-75,-164,-64,-62,146,286,-184,299,-54,-53,-14,-21,-81,-57,-186,-189,-47,-40,-39,-82,-76,-188,-185,-163,-51,333,-49,-55,-43,-52,-50,]),'LOC':([19,161,162,165,166,167,168,169,171,172,175,176,177,178,179,230,285,297,302,303,323,324,340,],[-17,-28,-34,-30,-46,-36,-33,-45,-29,-35,-31,-37,-41,-32,-38,-44,308,-47,-40,-39,-49,-55,-50,]),'DIVIDE':([7,8,17,19,37,40,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-56,76,-159,-17,-160,-60,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,114,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,114,114,-99,114,114,114,114,-101,-100,114,114,114,114,114,114,114,-78,-169,-59,-161,-75,-56,-57,-76,]),'RETURNS':([255,287,],[288,288,]),'NOT':([2,17,19,31,35,37,41,42,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,63,66,67,69,73,77,78,80,91,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,130,131,132,133,134,135,139,181,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,211,212,213,214,215,224,229,231,232,234,235,239,241,243,247,248,266,277,283,295,298,299,301,307,333,],[62,-159,-17,62,62,-160,-72,62,-66,-56,-108,-88,-71,-110,-74,-69,-67,107,-107,-70,-73,-68,-109,62,-65,-60,62,-131,-58,62,62,62,62,-111,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-105,-106,62,-170,-127,-130,-126,-129,-128,-125,62,-162,62,-89,-102,-99,107,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,62,-169,62,-59,62,62,62,62,62,62,62,-161,62,62,-75,62,-56,62,-57,62,62,62,62,-76,62,]),'MOD':([7,8,17,19,37,40,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-56,75,-159,-17,-160,-60,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,113,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,113,113,-99,113,113,113,113,-101,-100,113,113,113,113,113,113,113,-78,-169,-59,-161,-75,-56,-57,-76,]),'RETURN':([0,4,15,18,20,21,28,29,30,68,81,86,93,94,124,145,153,155,158,160,183,206,207,216,218,226,246,290,311,313,314,327,328,330,335,],[35,-4,-6,35,-2,35,-5,-7,-8,-113,35,-3,35,-115,35,-24,35,35,-116,-9,-18,35,35,-112,-179,35,35,35,35,35,35,35,35,35,35,]),'LPAREN':([2,5,7,9,10,11,13,14,19,24,27,31,32,34,35,42,44,56,62,63,69,73,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,131,132,133,134,135,139,142,162,167,168,171,172,173,176,177,178,179,181,187,211,213,215,224,229,231,232,234,235,241,243,248,257,258,266,267,270,277,288,291,295,298,299,301,302,303,333,],[63,69,-42,-176,-178,-173,-172,-174,-17,-171,-175,63,-177,102,63,63,-42,63,63,63,63,-131,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-127,-130,-126,-129,-128,-125,217,-34,-36,-33,231,-35,232,-37,-42,-32,-38,63,63,63,63,63,63,63,63,63,63,63,63,63,63,231,-42,-42,298,231,63,312,231,63,63,63,63,-40,-39,63,]),'LE':([17,19,37,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-159,-17,-160,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,112,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,112,112,-99,112,112,-94,-96,-101,-100,112,-93,112,-98,112,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'BOOL':([19,84,97,100,147,170,220,222,229,253,259,299,300,312,333,334,],[-17,-15,176,176,176,176,-16,176,176,176,176,176,176,176,176,176,]),'ASSIGN':([7,8,17,19,37,40,44,71,72,74,75,76,77,79,83,84,100,130,148,150,161,162,165,166,167,168,169,171,172,174,175,176,177,178,179,180,185,212,214,220,230,239,283,297,302,303,323,324,340,],[-56,73,-159,-17,-160,-60,-56,131,132,133,134,135,-58,139,147,-15,181,-170,224,-151,-28,-34,-30,-46,-36,-33,-45,-29,-35,234,-31,-37,-41,-32,-38,235,-162,-169,-59,-16,-44,-161,-57,-47,-40,-39,-49,-55,-50,]),'CONCAT':([7,8,17,19,37,40,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-56,72,-159,-17,-160,-60,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,109,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'PLUS':([7,8,17,19,37,40,41,43,44,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,77,105,122,125,130,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,239,247,266,283,307,],[-56,79,-159,-17,-160,-60,-72,-66,-56,-108,-88,-71,-110,-74,-69,-67,121,-107,-70,-73,-68,-109,-65,-60,-58,-111,-105,-106,-170,-162,121,121,-99,121,121,121,121,-101,-100,121,121,121,-98,121,121,-97,-78,-169,-59,-161,-75,-56,-57,-76,]),'RPAREN':([17,19,37,41,43,44,45,46,47,48,49,50,51,53,54,55,57,58,59,60,66,67,69,77,102,105,122,125,126,128,129,130,161,162,165,166,167,168,169,171,172,175,176,177,178,179,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,212,214,217,230,239,247,249,252,254,256,273,274,280,283,284,285,297,298,302,303,305,307,308,309,320,323,324,325,329,340,],[-159,-17,-160,-72,-66,-56,-80,-108,-88,-71,-110,-74,-69,-67,-79,-107,-70,-73,-68,-109,-65,-60,130,-58,185,-111,-105,-106,208,212,-163,-170,-28,-34,-30,-46,-36,-33,-45,-29,-35,-31,-37,-41,-32,-38,239,-162,-89,-102,-99,-104,-90,-94,-96,-101,-100,-92,-93,-103,-98,-91,-95,-97,-78,-169,-59,255,-44,-161,-75,-164,-62,287,-184,302,303,-81,-57,-186,-189,-47,185,-40,-39,-82,-76,-188,-185,-163,-49,-55,-43,337,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loop_counter':([87,],[148,]),'action':([0,18,21,81,93,124,153,155,206,207,226,246,290,311,313,314,327,328,330,335,],[3,3,3,141,3,3,141,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'newmode_statement':([0,18,290,311,313,314,327,328,330,335,],[15,15,15,15,15,15,15,15,15,15,]),'mode_name':([97,100,147,170,253,300,312,334,],[161,161,161,161,161,161,161,161,]),'step_value':([260,],[296,]),'identifier_list':([16,25,33,144,159,182,217,286,],[83,97,100,83,97,100,253,253,]),'conditional_expression':([2,31,35,42,63,69,78,80,91,102,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'location':([0,2,18,21,31,35,42,52,56,62,63,69,78,80,81,91,93,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,153,155,181,187,206,207,211,213,215,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[8,46,8,8,46,46,46,105,46,46,46,46,46,46,8,46,8,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,8,46,8,8,46,46,8,8,46,46,46,46,8,46,46,46,46,46,46,46,8,46,46,8,46,46,46,46,8,8,8,8,8,8,46,8,]),'literal':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'discrete_mode':([97,100,147,170,222,229,253,259,299,300,312,333,334,],[171,171,171,171,257,270,171,291,270,171,171,270,171,]),'declaration_list':([25,],[95,]),'parameter_list':([69,102,298,],[128,184,184,]),'then_clause':([61,],[123,]),'for_control':([21,],[89,]),'control_part':([21,],[90,]),'index_mode':([229,299,333,],[268,321,339,]),'statement_list':([0,290,311,313,327,],[18,314,328,330,335,]),'statement':([0,18,290,311,313,314,327,328,330,335,],[20,86,20,20,20,86,20,86,86,86,]),'newmode_list':([16,],[82,]),'program':([0,],[22,]),'primitive_value':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'synonym_list':([33,],[101,]),'mode_definition':([16,144,],[85,219,]),'end_value':([260,294,296,319,],[292,316,318,332,]),'action_statement':([0,18,21,93,124,155,206,207,226,246,290,311,313,314,327,328,330,335,],[30,30,94,158,94,94,94,158,158,158,30,30,30,30,30,30,30,30,]),'array_mode':([97,100,147,170,253,300,312,334,],[166,166,166,166,166,166,166,166,]),'declaration':([25,159,],[96,227,]),'string_mode':([97,100,147,170,253,300,312,334,],[169,169,169,169,169,169,169,169,]),'discrete_expression':([224,295,],[261,317,]),'parenthesized_expression':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'referenced_location':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'upper_bound':([215,301,],[251,325,]),'return_action':([0,18,21,81,93,124,153,155,206,207,226,246,290,311,313,314,327,328,330,335,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'composite_mode':([97,100,147,170,253,300,312,334,],[175,175,175,175,175,175,175,175,]),'lower_bound':([78,229,231,232,298,299,333,],[138,272,272,272,272,272,272,]),'assigning_operator':([8,],[80,]),'synonym_definition':([33,182,],[99,238,]),'integer_mode':([97,100,147,170,222,229,253,259,299,300,312,333,334,],[178,178,178,178,178,178,178,178,178,178,178,178,178,]),'result_action':([0,18,21,81,93,124,153,155,206,207,226,246,290,311,313,314,327,328,330,335,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'else_expression':([186,240,],[242,278,]),'start_value':([224,],[260,]),'element_mode':([300,334,],[323,340,]),'declaration_statement':([0,18,290,311,313,314,327,328,330,335,],[4,4,4,4,4,4,4,4,4,4,]),'builtin_name':([0,2,18,21,31,35,42,52,56,62,63,69,78,80,81,91,93,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,153,155,181,187,206,207,211,213,215,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'value_array_element':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'identifier':([0,2,6,16,18,21,25,31,33,35,42,52,56,62,63,69,78,80,81,87,91,93,97,100,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,144,146,147,153,155,159,170,181,182,187,206,207,211,213,215,217,222,224,226,229,231,232,234,235,241,243,246,248,253,259,277,286,290,295,298,299,300,301,311,312,313,314,327,328,330,333,334,335,],[7,44,70,84,7,7,84,44,84,44,44,44,44,44,44,44,44,44,44,150,44,7,177,177,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,7,44,84,220,177,44,7,84,177,44,84,44,7,7,44,44,44,84,258,44,7,266,44,44,44,44,44,44,7,44,177,258,44,84,7,44,44,266,177,44,7,177,7,7,7,7,7,266,177,7,]),'parameter_spec':([253,312,],[284,329,]),'else_clause':([123,],[205,]),'boolean_mode':([97,100,147,170,222,229,253,259,299,300,312,333,334,],[168,168,168,168,168,168,168,168,168,168,168,168,168,]),'operand':([2,31,35,42,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'constant_expression':([181,235,],[236,276,]),'label_id':([0,18,21,93,124,155,206,207,226,246,290,311,313,314,327,328,330,335,],[12,12,88,88,88,88,88,88,88,88,12,12,12,12,12,12,12,12,]),'elsif_expression':([186,],[240,]),'discrete_range_mode':([97,100,147,170,222,229,253,259,299,300,312,333,334,],[172,172,172,172,172,172,172,172,172,172,172,172,172,]),'discrete_mode_name':([0,2,18,21,31,35,42,52,56,62,63,69,78,80,81,91,93,97,100,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,147,153,155,170,181,187,206,207,211,213,215,222,224,226,229,231,232,234,235,241,243,246,248,253,259,277,290,295,298,299,300,301,311,312,313,314,327,328,330,333,334,335,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,173,173,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,173,34,34,173,34,34,34,34,34,34,34,173,34,34,267,34,34,34,34,34,34,34,34,173,173,34,34,34,34,267,173,34,34,173,34,34,34,34,34,267,173,34,]),'builtin_call':([0,2,18,21,31,35,42,52,56,62,63,69,78,80,81,91,93,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,153,155,181,187,206,207,211,213,215,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'procedure_call':([0,2,18,21,31,35,42,52,56,62,63,69,78,80,81,91,93,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,153,155,181,187,206,207,211,213,215,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'assignment_action':([0,18,21,81,93,124,153,155,206,207,226,246,290,311,313,314,327,328,330,335,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'formal_parameter_list':([217,],[254,]),'formal_parameter':([217,286,],[256,309,]),'literal_range':([229,231,232,298,299,333,],[269,273,274,274,269,269,]),'array_primitive_value':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'expression_list':([78,127,],[136,209,]),'if_action':([0,18,21,81,93,124,153,155,206,207,226,246,290,311,313,314,327,328,330,335,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'character_mode':([97,100,147,170,222,229,253,259,299,300,312,333,334,],[162,162,162,162,162,162,162,162,162,162,162,162,162,]),'exit_action':([0,18,21,81,93,124,153,155,206,207,226,246,290,311,313,314,327,328,330,335,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'range_enumeration':([87,],[149,]),'synonym_statement':([0,18,290,311,313,314,327,328,330,335,],[28,28,28,28,28,28,28,28,28,28,]),'while_control':([21,89,],[92,154,]),'procedure_statement':([0,18,290,311,313,314,327,328,330,335,],[29,29,29,29,29,29,29,29,29,29,]),'reference_mode':([97,100,147,170,253,300,312,334,],[165,165,165,165,165,165,165,165,]),'action_statement_list':([21,124,155,206,],[93,207,226,246,]),'result_spec':([255,287,],[289,310,]),'binop':([2,31,35,42,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[54,54,54,54,54,54,54,54,54,54,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'procedure_definition':([81,],[143,]),'step_enumeration':([87,],[151,]),'operand1':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[55,55,55,55,122,125,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'boolean_expression':([2,42,91,241,277,],[61,104,156,279,304,]),'string_length':([228,],[264,]),'initialization':([174,],[233,]),'mode':([97,100,147,170,253,300,312,334,],[174,180,221,230,285,324,285,324,]),'do_action':([0,18,21,81,93,124,153,155,206,207,226,246,290,311,313,314,327,328,330,335,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'expression':([2,31,35,42,63,69,78,80,91,102,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[65,98,103,65,126,129,137,140,65,129,210,237,244,249,250,252,262,271,271,271,275,237,65,281,282,65,262,320,271,252,271,]),'value_array_slice':([2,31,35,42,56,62,63,69,78,80,91,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,181,187,211,213,215,224,229,231,232,234,235,241,243,248,277,295,298,299,301,333,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'then_expression':([104,279,304,],[186,306,326,]),'call_action':([0,2,18,21,31,35,42,52,56,62,63,69,78,80,81,91,93,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,153,155,181,187,206,207,211,213,215,224,226,229,231,232,234,235,241,243,246,248,277,290,295,298,299,301,311,313,314,327,328,330,333,335,],[40,67,40,40,67,67,67,67,67,67,67,67,67,67,40,67,40,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,40,67,40,40,67,67,40,40,67,67,67,67,40,67,67,67,67,67,67,67,40,67,67,40,67,67,67,67,40,40,40,40,40,40,67,40,]),'index_mode_list':([299,],[322,]),'iteration':([87,],[152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
