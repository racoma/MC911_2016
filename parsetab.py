
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DE9B72D645079689682821FB34D899A6'
    
_lr_action_items = {'SUCC':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[1,-8,1,1,-5,-7,1,1,-4,1,-6,-2,1,1,-3,1,1,1,1,1,1,-113,-115,1,1,1,1,-131,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-9,1,1,-116,1,-18,1,-24,-130,-126,-128,-127,-125,-129,1,1,-112,-179,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'PLUS':([20,23,30,34,38,40,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-60,-56,-160,101,-71,-69,-72,-88,-74,124,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,124,124,-98,-101,124,124,124,-100,124,124,124,-99,-97,124,124,124,-78,-59,-75,-56,-57,-76,]),'END':([3,9,10,21,25,37,43,72,134,170,174,210,212,309,327,331,337,],[-8,-5,-7,-4,-6,-2,-3,-113,-9,-18,-24,-112,-179,328,335,338,341,]),'CHARS':([20,74,76,89,144,173,217,250,295,310,332,],[-17,137,-15,137,137,137,-16,137,137,137,137,]),'LOWER':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[5,-8,5,5,-5,-7,5,5,-4,5,-6,-2,5,5,-3,5,5,5,5,5,5,-113,-115,5,5,5,5,-131,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-9,5,5,-116,5,-18,5,-24,-130,-126,-128,-127,-125,-129,5,5,-112,-179,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ELSE':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,72,79,102,105,107,110,129,130,156,157,161,186,188,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,225,237,242,244,247,281,303,304,305,307,326,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-113,-115,-58,-162,-170,-105,-111,-106,223,-135,-116,-161,-169,243,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-112,-134,-59,-75,243,-84,-81,-57,-76,-82,-86,-87,]),'ICONST':([8,11,17,41,42,51,52,58,62,81,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,179,180,182,183,184,185,187,192,214,216,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,301,333,],[47,47,47,47,47,47,47,47,47,47,47,47,-131,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-130,-126,-128,-127,-125,-129,47,47,47,254,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,325,47,]),'NUM':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[29,-8,29,29,-5,-7,29,29,-4,29,-6,-2,29,29,-3,29,29,29,29,29,29,-113,-115,29,29,29,29,-131,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-9,29,29,-116,29,-18,29,-24,-130,-126,-128,-127,-125,-129,29,29,-112,-179,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'OR':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,125,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,-91,125,-98,-101,-92,-89,-96,-100,-93,-94,125,-99,-97,-90,125,-95,-78,-59,-75,-56,-57,-76,]),'DOWN':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,102,105,107,110,129,130,163,164,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,269,270,271,281,299,303,304,305,325,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-151,226,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,-155,298,-152,-81,322,-57,-76,-82,-153,]),'RESULT':([0,3,7,9,10,21,22,25,37,43,71,72,79,83,134,157,158,161,168,170,174,210,212,223,225,229,265,284,308,309,314,327,330,331,337,],[11,-8,11,-5,-7,-4,11,-6,-2,-3,11,-113,-115,11,-9,11,11,-116,11,-18,-24,-112,-179,11,11,11,11,11,11,11,11,11,11,11,11,]),'CCONST':([8,11,17,41,42,51,52,58,62,81,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,179,180,182,183,184,185,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[48,48,48,48,48,48,48,48,48,48,48,48,-131,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-130,-126,-128,-127,-125,-129,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'GT':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,120,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,120,120,-98,-101,120,120,-96,-100,-93,-94,120,-99,-97,120,120,-95,-78,-59,-75,-56,-57,-76,]),'SCONST':([8,11,17,41,42,51,52,58,62,81,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,179,180,182,183,184,185,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[50,50,50,50,50,50,50,50,50,50,50,50,-131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-130,-126,-128,-127,-125,-129,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'EQ':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,112,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,-91,112,-98,-101,-92,112,-96,-100,-93,-94,112,-99,-97,112,112,-95,-78,-59,-75,-56,-57,-76,]),'INT':([20,74,76,89,144,173,217,221,227,250,266,295,296,310,332,333,],[-17,148,-15,148,148,148,-16,148,148,148,148,148,148,148,148,148,]),'MINUS':([8,11,17,20,23,30,34,38,40,41,42,44,47,48,49,50,52,53,54,55,56,57,58,60,63,64,65,66,67,68,69,81,94,97,99,102,105,107,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,172,179,180,182,183,184,185,186,187,188,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,219,220,221,228,232,237,238,239,241,242,243,246,262,280,292,294,296,300,303,304,333,],[51,51,51,-17,-159,-60,-56,-160,96,51,51,-71,-69,-72,-88,-74,51,114,-108,-109,-110,-67,51,-60,-70,-65,-66,-68,-56,-73,-107,51,51,51,-131,-58,-162,-170,51,-105,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-111,-106,51,-130,-126,-128,-127,-125,-129,-161,51,-169,51,114,114,-98,-101,114,114,114,-100,114,114,114,-99,-97,114,114,114,-78,51,51,51,51,51,51,-59,51,51,51,-75,51,51,-56,51,51,51,51,51,-57,-76,51,]),'LOC':([20,138,139,140,142,143,145,146,147,148,150,152,153,154,155,218,286,290,291,293,317,318,339,],[-17,-38,-45,-28,-34,-33,-30,-35,-41,-36,-29,-32,-46,-31,-37,-44,311,-47,-39,-40,-55,-49,-50,]),'RETURN':([0,3,7,9,10,21,22,25,37,43,71,72,79,83,134,157,158,161,168,170,174,210,212,223,225,229,265,284,308,309,314,327,330,331,337,],[8,-8,8,-5,-7,-4,8,-6,-2,-3,8,-113,-115,8,-9,8,8,-116,8,-18,-24,-112,-179,8,8,8,8,8,8,8,8,8,8,8,8,]),'ASSIGN':([20,23,30,34,38,40,67,76,89,91,95,96,98,100,101,102,103,105,107,136,138,139,140,142,143,145,146,147,148,150,152,153,154,155,163,164,171,186,188,217,218,237,290,291,293,303,317,318,339,],[-17,-159,-60,-56,-160,99,-56,-15,172,173,179,180,182,183,184,-58,185,-162,-170,214,-38,-45,-28,-34,-33,-30,-35,-41,-36,-29,-32,-46,-31,-37,-151,228,232,-161,-169,-16,-44,-59,-47,-39,-40,-57,-55,-49,-50,]),'IF':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,52,58,71,72,79,81,83,94,97,99,109,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[17,-8,17,52,-5,-7,52,52,-4,17,-6,-2,52,52,-3,52,52,17,-113,-115,52,17,52,52,-131,52,-9,17,17,-116,17,-18,52,-24,-130,-126,-128,-127,-125,-129,52,52,-112,-179,52,52,52,52,17,17,52,17,52,52,52,52,52,52,17,52,17,52,52,52,52,17,17,17,17,17,17,52,17,]),'WHILE':([20,22,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,82,102,105,107,110,129,130,138,142,143,146,148,152,155,165,166,167,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,267,269,281,291,293,297,302,303,304,305,321,323,324,334,],[-17,81,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,81,-58,-162,-170,-105,-111,-106,-38,-34,-33,-35,-36,-32,-37,-145,-146,-144,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,-157,-155,-81,-39,-40,-156,-150,-57,-76,-82,-148,-149,-154,-147,]),'ARRAY':([20,74,76,89,144,173,217,250,295,310,332,],[-17,151,-15,151,151,151,-16,151,151,151,151,]),'GE':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,121,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,121,121,-98,-101,121,121,-96,-100,-93,-94,121,-99,-97,121,121,-95,-78,-59,-75,-56,-57,-76,]),'RBRACKET':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,102,105,107,110,129,130,138,142,143,146,148,152,155,176,177,186,188,189,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,253,254,259,261,263,274,275,276,277,281,291,293,303,304,305,315,319,320,340,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-38,-34,-33,-35,-36,-32,-37,-63,237,-161,-169,-63,242,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,290,-48,-54,295,-53,-64,-62,303,304,-81,-39,-40,-57,-76,-82,-43,332,-51,-52,]),'UPPER':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[19,-8,19,19,-5,-7,19,19,-4,19,-6,-2,19,19,-3,19,19,19,19,19,19,-113,-115,19,19,19,19,-131,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-9,19,19,-116,19,-18,19,-24,-130,-126,-128,-127,-125,-129,19,19,-112,-179,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LENGTH':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[24,-8,24,24,-5,-7,24,24,-4,24,-6,-2,24,24,-3,24,24,24,24,24,24,-113,-115,24,24,24,24,-131,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-9,24,24,-116,24,-18,24,-24,-130,-126,-128,-127,-125,-129,24,24,-112,-179,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'MOD':([20,23,30,34,38,40,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-60,-56,-160,103,-71,-69,-72,-88,-74,115,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,115,115,115,-101,115,115,115,-100,115,115,115,-99,115,115,115,115,-78,-59,-75,-56,-57,-76,]),'ELSIF':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,244,247,281,303,304,305,307,326,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,246,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,280,-84,-81,-57,-76,-82,-86,-87,]),'TIMES':([20,23,30,34,38,40,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-60,-56,-160,100,-71,-69,-72,-88,-74,123,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,123,123,123,-101,123,123,123,-100,123,123,123,-99,123,123,123,123,-78,-59,-75,-56,-57,-76,]),'DO':([0,3,7,9,10,21,22,25,37,43,71,72,79,83,134,157,158,161,168,170,174,210,212,223,225,229,265,284,308,309,314,327,330,331,337,],[22,-8,22,-5,-7,-4,22,-6,-2,-3,22,-113,-115,22,-9,22,22,-116,22,-18,-24,-112,-179,22,22,22,22,22,22,22,22,22,22,22,22,]),'TO':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,269,270,271,281,298,299,303,304,305,322,325,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,-155,300,-152,-81,300,300,-57,-76,-82,300,-153,]),'BY':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,269,270,271,281,303,304,305,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,-155,301,-152,-81,-57,-76,-82,]),'ID':([0,3,7,8,9,10,11,16,17,20,21,22,25,28,32,37,39,41,42,43,51,52,58,61,62,71,72,74,76,79,81,83,85,89,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,135,141,144,157,158,161,168,169,170,172,173,174,175,179,180,182,183,184,185,187,192,210,211,212,214,217,219,220,221,223,225,227,228,229,232,238,239,241,243,246,250,265,266,280,284,288,292,294,295,296,300,308,309,310,314,327,330,331,332,333,337,],[20,-8,20,20,-5,-7,20,20,20,-17,-4,20,-6,20,20,-2,20,20,20,-3,20,20,20,20,20,20,-113,20,-15,-115,20,20,20,20,20,20,-131,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-9,20,20,20,20,20,-116,20,20,-18,20,20,-24,20,-130,-126,-128,-127,-125,-129,20,20,-112,20,-179,20,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LBRACKET':([20,23,30,34,38,40,44,46,47,48,50,54,56,57,60,63,64,65,66,67,68,102,105,107,129,137,151,186,188,209,237,242,262,303,304,],[-17,-159,-60,-56,-160,94,-71,109,-69,-72,-74,94,-77,-67,-60,-70,-65,-66,-68,-56,-73,-58,-162,-170,94,216,221,-161,-169,-78,-59,-75,-56,-57,-76,]),'IN':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,163,164,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,226,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,113,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-151,227,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,113,-99,-97,-90,113,-95,-78,266,-59,-75,-56,-57,-76,]),'LE':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,118,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,118,118,-98,-101,118,118,-96,-100,-93,-94,118,-99,-97,118,118,-95,-78,-59,-75,-56,-57,-76,]),'CHAR':([20,74,76,89,144,173,217,221,227,250,266,295,296,310,332,333,],[-17,138,-15,138,138,138,-16,138,138,138,138,138,138,138,138,138,]),'LPAREN':([1,2,4,5,8,11,17,19,20,24,27,29,34,35,36,41,42,51,52,58,62,67,81,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,138,142,143,146,147,148,149,150,152,155,172,179,180,182,183,184,185,187,192,214,219,220,221,228,232,238,239,241,243,246,260,262,263,267,268,280,285,291,292,293,294,296,297,300,333,],[-173,41,42,-175,58,58,58,-174,-17,-176,-178,-171,-42,-172,-177,58,58,58,58,58,58,-42,58,58,58,-131,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,211,-38,-34,-33,-35,-42,-36,219,220,-32,-37,58,-130,-126,-128,-127,-125,-129,58,58,58,58,58,58,58,58,58,58,58,58,58,294,-42,220,220,-42,58,310,-39,58,-40,58,58,220,58,58,]),'$end':([3,7,9,10,12,21,25,37,43,72,134,170,174,210,212,],[-8,-1,-5,-7,0,-4,-6,-2,-3,-113,-9,-18,-24,-112,-179,]),'DIVIDE':([20,23,30,34,38,40,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-60,-56,-160,98,-71,-69,-72,-88,-74,119,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,119,119,119,-101,119,119,119,-100,119,119,119,-99,119,119,119,119,-78,-59,-75,-56,-57,-76,]),'FI':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,72,79,102,105,107,110,129,130,156,157,161,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,222,223,225,237,242,245,265,278,279,281,303,304,305,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-113,-115,-58,-162,-170,-105,-111,-106,224,-135,-116,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-112,264,-137,-134,-59,-75,281,-136,-85,305,-81,-57,-76,-82,]),'PRINT':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[27,-8,27,27,-5,-7,27,27,-4,27,-6,-2,27,27,-3,27,27,27,27,27,27,-113,-115,27,27,27,27,-131,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-9,27,27,-116,27,-18,27,-24,-130,-126,-128,-127,-125,-129,27,27,-112,-179,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'EXIT':([0,3,7,9,10,21,22,25,37,43,71,72,79,83,134,157,158,161,168,170,174,210,212,223,225,229,265,284,308,309,314,327,330,331,337,],[28,-8,28,-5,-7,-4,28,-6,-2,-3,28,-113,-115,28,-9,28,28,-116,28,-18,-24,-112,-179,28,28,28,28,28,28,28,28,28,28,28,28,]),'COMMA':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,73,74,75,76,88,89,90,91,92,93,102,104,105,106,107,108,110,129,130,136,138,139,140,142,143,145,146,147,148,150,152,153,154,155,176,177,186,188,189,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,215,217,218,231,233,234,235,236,237,240,242,249,250,251,252,259,261,263,273,274,275,281,286,287,290,291,293,303,304,305,311,312,315,316,317,318,319,320,339,340,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,135,141,-10,-15,169,141,-19,141,-25,175,-58,-163,-162,187,-170,187,-105,-111,-106,-13,-38,-45,-28,-34,-33,-30,-35,-41,-36,-29,-32,-46,-31,-37,-63,238,-161,-169,-63,238,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-11,-12,-16,-44,-20,-23,-22,-27,-26,-59,-164,-75,-184,141,288,-14,-54,296,-53,-21,-64,-62,-81,-189,-186,-47,-39,-40,-57,-76,-82,-188,-185,-43,-163,-55,-49,333,-51,-50,-52,]),'REF':([20,74,76,89,144,173,217,250,295,310,332,],[-17,144,-15,144,144,144,-16,144,144,144,144,]),'SEMI':([6,8,14,15,18,20,23,26,30,31,33,38,44,45,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,70,73,75,77,82,84,86,87,88,90,92,93,102,105,107,110,129,130,131,133,136,138,139,140,142,143,145,146,147,148,150,152,153,154,155,159,160,162,165,166,167,181,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,215,218,224,230,231,233,234,235,236,237,242,248,252,264,267,269,272,273,281,283,289,290,291,293,297,302,303,304,305,313,317,318,321,323,324,328,334,335,336,338,339,341,],[-122,-167,72,-119,-121,-17,-159,-117,-120,-118,-123,-160,-71,-166,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-168,134,-10,-83,-142,-143,168,-165,170,-19,-25,174,-58,-162,-170,-105,-111,-106,210,212,-13,-38,-45,-28,-34,-33,-30,-35,-41,-36,-29,-32,-46,-31,-37,-158,-141,-140,-145,-146,-144,-124,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-11,-12,-44,-133,-139,-20,-23,-22,-27,-26,-59,-75,284,-14,-132,-157,-155,-138,-21,-81,308,314,-47,-39,-40,-156,-150,-57,-76,-82,330,-55,-49,-148,-149,-154,-183,-147,-182,-187,-181,-50,-180,]),'ARROW':([8,11,17,20,23,30,34,38,40,41,42,51,52,54,58,60,62,67,81,94,97,99,102,105,107,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,172,179,180,182,183,184,185,186,187,188,192,214,219,220,221,228,232,237,238,239,241,243,246,262,280,292,294,296,300,303,333,],[61,61,61,-17,-159,-60,-56,-160,102,61,61,61,61,102,61,-60,61,-56,61,61,61,-131,-58,-162,-170,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,102,61,-130,-126,-128,-127,-125,-129,-161,61,-169,61,61,61,61,61,61,61,-59,61,61,61,61,61,-56,61,61,61,61,61,-57,61,]),'PROC':([71,],[132,]),'TRUE':([8,11,17,41,42,51,52,58,62,81,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,179,180,182,183,184,185,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[44,44,44,44,44,44,44,44,44,44,44,44,-131,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-130,-126,-128,-127,-125,-129,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'CONCAT':([20,23,30,34,38,40,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-60,-56,-160,95,-71,-69,-72,-88,-74,122,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,-56,-57,-76,]),'RETURNS':([248,289,],[285,285,]),'FALSE':([8,11,17,41,42,51,52,58,62,81,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,179,180,182,183,184,185,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[63,63,63,63,63,63,63,63,63,63,63,63,-131,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-130,-126,-128,-127,-125,-129,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'SYN':([0,3,7,9,10,21,25,37,43,72,134,170,174,210,212,284,308,309,314,327,330,331,337,],[32,-8,32,-5,-7,-4,-6,-2,-3,-113,-9,-18,-24,-112,-179,32,32,32,32,32,32,32,32,]),'RPAREN':([20,23,38,41,42,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,102,104,105,106,107,108,110,128,129,130,138,139,140,142,143,145,146,147,148,150,152,153,154,155,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,218,237,240,242,249,251,256,258,275,281,286,287,290,291,293,294,303,304,305,311,312,315,316,317,318,329,339,],[-17,-159,-160,105,107,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-58,-163,-162,186,-170,188,-105,209,-111,-106,-38,-45,-28,-34,-33,-30,-35,-41,-36,-29,-32,-46,-31,-37,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,248,-44,-59,-164,-75,-184,289,291,293,-62,-81,-189,-186,-47,-39,-40,105,-57,-76,-82,-188,-185,-43,-163,-55,-49,336,-50,]),'PRED':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[35,-8,35,35,-5,-7,35,35,-4,35,-6,-2,35,35,-3,35,35,35,35,35,35,-113,-115,35,35,35,35,-131,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-9,35,35,-116,35,-18,35,-24,-130,-126,-128,-127,-125,-129,35,35,-112,-179,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'READ':([0,3,7,8,9,10,11,17,21,22,25,37,41,42,43,51,52,58,61,62,71,72,79,81,83,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,157,158,161,168,170,172,174,179,180,182,183,184,185,187,192,210,212,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[36,-8,36,36,-5,-7,36,36,-4,36,-6,-2,36,36,-3,36,36,36,36,36,36,-113,-115,36,36,36,36,-131,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-9,36,36,-116,36,-18,36,-24,-130,-126,-128,-127,-125,-129,36,36,-112,-179,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'COLON':([13,20,23,34,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,80,102,105,107,110,129,130,176,178,186,188,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,255,257,262,281,303,304,305,316,],[71,-17,-159,-114,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,158,-58,-162,-170,-105,-111,-106,-61,239,-161,-169,241,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,-61,292,-56,-81,-57,-76,-82,-61,]),'NULL':([8,11,17,41,42,51,52,58,62,81,94,97,99,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,179,180,182,183,184,185,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[68,68,68,68,68,68,68,68,68,68,68,68,-131,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-130,-126,-128,-127,-125,-129,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'DCL':([0,3,7,9,10,21,25,37,43,72,134,170,174,210,212,284,308,309,314,327,330,331,337,],[16,-8,16,-5,-7,-4,-6,-2,-3,-113,-9,-18,-24,-112,-179,16,16,16,16,16,16,16,16,]),'FOR':([22,],[85,]),'NEQ':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,116,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,-91,116,-98,-101,-92,116,-96,-100,-93,-94,116,-99,-97,116,116,-95,-78,-59,-75,-56,-57,-76,]),'TYPE':([0,3,7,9,10,21,25,37,43,72,134,170,174,210,212,284,308,309,314,327,330,331,337,],[39,-8,39,-5,-7,-4,-6,-2,-3,-113,-9,-18,-24,-112,-179,39,39,39,39,39,39,39,39,]),'OD':([72,79,83,161,168,210,229,],[-113,-115,162,-116,230,-112,272,]),'THEN':([20,23,38,44,47,48,49,50,53,54,55,56,57,59,60,63,64,65,66,67,68,69,77,78,102,105,107,110,111,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,281,282,303,304,305,306,],[-17,-159,-160,-71,-69,-72,-88,-74,-79,-108,-109,-110,-67,-80,-60,-70,-65,-66,-68,-56,-73,-107,-83,157,-58,-162,-170,-105,192,-111,-106,-161,-169,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,-104,-99,-97,-90,-102,-95,-78,-59,-75,-81,192,-57,-76,-82,192,]),'NOT':([8,11,17,20,23,38,41,42,44,47,48,49,50,52,53,54,55,56,57,58,60,63,64,65,66,67,68,69,81,94,97,99,102,105,107,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,172,179,180,182,183,184,185,186,187,188,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,219,220,221,228,232,237,238,239,241,242,243,246,262,280,292,294,296,300,303,304,333,],[62,62,62,-17,-159,-160,62,62,-71,-69,-72,-88,-74,62,126,-108,-109,-110,-67,62,-60,-70,-65,-66,-68,-56,-73,-107,62,62,62,-131,-58,-162,-170,62,-105,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-111,-106,62,-130,-126,-128,-127,-125,-129,-161,62,-169,62,-91,-103,-98,-101,-92,-89,-96,-100,-93,-94,126,-99,-97,-90,-102,-95,-78,62,62,62,62,62,62,-59,62,62,62,-75,62,62,-56,62,62,62,62,62,-57,-76,62,]),'LT':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,127,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,127,127,-98,-101,127,127,-96,-100,-93,-94,127,-99,-97,127,127,-95,-78,-59,-75,-56,-57,-76,]),'AND':([20,23,38,44,47,48,49,50,53,54,55,56,57,60,63,64,65,66,67,68,69,102,105,107,110,129,130,186,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,237,242,262,303,304,],[-17,-159,-160,-71,-69,-72,-88,-74,117,-108,-109,-110,-67,-60,-70,-65,-66,-68,-56,-73,-107,-58,-162,-170,-105,-111,-106,-161,-169,-91,117,-98,-101,-92,-89,-96,-100,-93,-94,117,-99,-97,117,117,-95,-78,-59,-75,-56,-57,-76,]),'BOOL':([20,74,76,89,144,173,217,221,227,250,266,295,296,310,332,333,],[-17,155,-15,155,155,155,-16,155,155,155,155,155,155,155,155,155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'index_mode_list':([296,],[319,]),'builtin_name':([0,7,8,11,17,22,41,42,51,52,58,61,62,71,81,83,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,158,168,172,187,192,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'synonym_list':([32,],[88,]),'expression':([8,11,17,41,42,52,58,81,94,97,109,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[45,70,77,104,104,77,128,77,176,181,189,233,240,247,252,255,255,255,269,233,274,275,277,278,77,77,275,316,255,269,255,]),'synonym_definition':([32,169,],[90,231,]),'return_action':([0,7,22,71,83,157,158,168,223,225,229,265,284,308,309,314,327,330,331,337,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'discrete_mode':([74,89,144,173,221,227,250,266,295,296,310,332,333,],[150,150,150,150,263,267,150,297,150,263,150,150,263,]),'call_action':([0,7,8,11,17,22,41,42,51,52,58,61,62,71,81,83,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,158,168,172,187,192,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[30,30,60,60,60,30,60,60,60,60,60,60,60,30,60,30,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,30,30,30,60,60,60,60,60,60,60,30,30,60,30,60,60,60,60,60,60,30,60,30,60,60,60,60,30,30,30,30,30,30,60,30,]),'discrete_expression':([228,300,],[271,324,]),'procedure_statement':([0,7,284,308,309,314,327,330,331,337,],[10,10,10,10,10,10,10,10,10,10,]),'action_statement':([0,7,22,83,157,168,223,225,229,265,284,308,309,314,327,330,331,337,],[3,3,79,161,79,79,79,161,161,161,3,3,3,3,3,3,3,3,]),'program':([0,],[12,]),'parameter_spec':([250,310,],[287,329,]),'literal_range':([219,220,221,294,296,333,],[256,258,259,256,259,259,]),'then_expression':([111,282,306,],[191,307,326,]),'discrete_range_mode':([74,89,144,173,221,227,250,266,295,296,310,332,333,],[146,146,146,146,146,146,146,146,146,146,146,146,146,]),'character_mode':([74,89,144,173,221,227,250,266,295,296,310,332,333,],[142,142,142,142,142,142,142,142,142,142,142,142,142,]),'range_enumeration':([85,],[166,]),'exit_action':([0,7,22,71,83,157,158,168,223,225,229,265,284,308,309,314,327,330,331,337,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'integer_mode':([74,89,144,173,221,227,250,266,295,296,310,332,333,],[152,152,152,152,152,152,152,152,152,152,152,152,152,]),'binop':([8,11,17,41,42,52,58,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[53,53,53,53,53,53,53,53,53,53,53,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'result_action':([0,7,22,71,83,157,158,168,223,225,229,265,284,308,309,314,327,330,331,337,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'else_clause':([156,],[222,]),'identifier_list':([16,32,39,135,169,175,211,288,],[74,89,91,74,89,91,250,250,]),'string_mode':([74,89,144,173,250,295,310,332,],[139,139,139,139,139,139,139,139,]),'if_action':([0,7,22,71,83,157,158,168,223,225,229,265,284,308,309,314,327,330,331,337,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'boolean_mode':([74,89,144,173,221,227,250,266,295,296,310,332,333,],[143,143,143,143,143,143,143,143,143,143,143,143,143,]),'step_value':([270,],[299,]),'loop_counter':([85,],[164,]),'end_value':([270,298,299,322,],[302,321,323,334,]),'procedure_call':([0,7,8,11,17,22,41,42,51,52,58,61,62,71,81,83,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,158,168,172,187,192,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'string_length':([216,],[253,]),'identifier':([0,7,8,11,16,17,22,28,32,39,41,42,51,52,58,61,62,71,74,81,83,85,89,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,135,141,144,157,158,168,169,172,173,175,187,192,211,214,219,220,221,223,225,227,228,229,232,238,239,241,243,246,250,265,266,280,284,288,292,294,295,296,300,308,309,310,314,327,330,331,332,333,337,],[34,34,67,67,76,67,34,87,76,76,67,67,67,67,67,67,67,67,147,67,34,163,147,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,76,217,147,34,67,34,76,67,147,76,67,67,76,67,67,67,262,34,34,268,67,34,67,67,67,67,67,67,147,34,268,67,34,76,67,67,147,262,67,34,34,147,34,34,34,34,147,262,34,]),'parenthesized_expression':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'initialization':([136,],[215,]),'iteration':([85,],[167,]),'value_array_slice':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'declaration':([16,135,],[75,213,]),'location':([0,7,8,11,17,22,41,42,51,52,58,61,62,71,81,83,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,158,168,172,187,192,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[40,40,54,54,54,40,54,54,54,54,54,129,54,40,54,40,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,40,40,40,54,54,54,54,54,54,54,40,40,54,40,54,54,54,54,54,54,40,54,40,54,54,54,54,40,40,40,40,40,40,54,40,]),'newmode_list':([39,],[93,]),'elsif_expression':([191,],[244,]),'result_spec':([248,289,],[283,313,]),'then_clause':([78,],[156,]),'array_primitive_value':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'statement_list':([0,284,308,314,330,],[7,309,327,331,337,]),'synonym_statement':([0,7,284,308,309,314,327,330,331,337,],[9,9,9,9,9,9,9,9,9,9,]),'parameter_list':([41,42,294,],[106,108,106,]),'element_mode':([295,332,],[318,339,]),'action':([0,7,22,71,83,157,158,168,223,225,229,265,284,308,309,314,327,330,331,337,],[14,14,14,131,14,14,131,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'label_id':([0,7,22,83,157,168,223,225,229,265,284,308,309,314,327,330,331,337,],[13,13,80,80,80,80,80,80,80,80,13,13,13,13,13,13,13,13,]),'upper_bound':([239,292,],[276,315,]),'assignment_action':([0,7,22,71,83,157,158,168,223,225,229,265,284,308,309,314,327,330,331,337,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'for_control':([22,],[82,]),'constant_expression':([172,232,],[234,273,]),'step_enumeration':([85,],[165,]),'reference_mode':([74,89,144,173,250,295,310,332,],[145,145,145,145,145,145,145,145,]),'discrete_mode_name':([0,7,8,11,17,22,41,42,51,52,58,61,62,71,74,81,83,89,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,144,157,158,168,172,173,187,192,214,219,220,221,223,225,227,228,229,232,238,239,241,243,246,250,265,266,280,284,292,294,295,296,300,308,309,310,314,327,330,331,332,333,337,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,149,2,2,149,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,149,2,2,2,2,149,2,2,2,2,2,260,2,2,149,2,2,2,2,2,2,2,2,149,2,149,2,2,2,2,149,260,2,2,2,149,2,2,2,2,149,260,2,]),'composite_mode':([74,89,144,173,250,295,310,332,],[154,154,154,154,154,154,154,154,]),'index_mode':([221,296,333,],[261,320,340,]),'array_mode':([74,89,144,173,250,295,310,332,],[153,153,153,153,153,153,153,153,]),'mode_name':([74,89,144,173,250,295,310,332,],[140,140,140,140,140,140,140,140,]),'referenced_location':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'action_statement_list':([22,157,168,223,],[83,225,229,265,]),'primitive_value':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'mode':([74,89,144,173,250,295,310,332,],[136,171,218,235,286,317,286,317,]),'newmode_statement':([0,7,284,308,309,314,327,330,331,337,],[25,25,25,25,25,25,25,25,25,25,]),'start_value':([228,],[270,]),'else_expression':([191,244,],[245,279,]),'lower_bound':([94,219,220,221,294,296,333,],[178,257,257,257,257,257,257,]),'boolean_expression':([17,52,81,246,280,],[78,111,159,282,306,]),'formal_parameter':([211,288,],[249,312,]),'declaration_statement':([0,7,284,308,309,314,327,330,331,337,],[21,21,21,21,21,21,21,21,21,21,]),'mode_definition':([39,175,],[92,236,]),'expression_list':([94,109,],[177,190,]),'do_action':([0,7,22,71,83,157,158,168,223,225,229,265,284,308,309,314,327,330,331,337,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'declaration_list':([16,],[73,]),'assigning_operator':([40,],[97,]),'literal':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'operand1':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[69,69,69,69,69,110,69,69,130,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'value_array_element':([8,11,17,41,42,51,52,58,62,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'statement':([0,7,284,308,309,314,327,330,331,337,],[37,43,37,37,43,37,43,37,43,43,]),'builtin_call':([0,7,8,11,17,22,41,42,51,52,58,61,62,71,81,83,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,158,168,172,187,192,214,219,220,221,223,225,228,229,232,238,239,241,243,246,265,280,284,292,294,296,300,308,309,314,327,330,331,333,337,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'while_control':([22,82,],[84,160,]),'control_part':([22,],[86,]),'formal_parameter_list':([211,],[251,]),'operand':([8,11,17,41,42,52,58,81,94,97,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'procedure_definition':([71,],[133,]),'conditional_expression':([8,11,17,41,42,52,58,81,94,97,109,172,187,192,214,219,220,221,228,232,238,239,241,243,246,280,292,294,296,300,333,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',512),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',517),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',518),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',523),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',524),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',526),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',538),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',543),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',548),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',553),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',558),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',563),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',564),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',572),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',578),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',579),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',584),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',585),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',593),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',594),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',605),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',609),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',610),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',618),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',622),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',623),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',631),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',632),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',645),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',649),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',650),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',652),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',665),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',666),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',675),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',679),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',683),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',684),
]
