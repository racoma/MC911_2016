
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6D607BFFC1A6AD23A840B4B22C47E847'
    
_lr_action_items = {'EQ':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,116,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,116,-93,-94,116,116,116,116,-59,-169,-75,-56,-57,-76,]),'INT':([21,42,76,98,107,156,187,221,223,251,266,295,296,310,332,333,],[-17,-15,138,138,138,138,-16,138,138,138,138,138,138,138,138,138,]),'RPAREN':([11,21,36,45,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,87,101,108,109,110,112,113,114,115,138,139,140,141,142,143,144,145,146,147,148,152,153,155,182,183,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,222,228,235,240,246,249,250,252,255,273,277,288,289,290,292,293,294,303,304,307,311,314,315,316,317,318,329,339,],[-160,-17,-159,108,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,182,-162,189,-163,-106,-111,193,-105,-36,-30,-32,-29,-28,-34,-41,-31,-45,-33,-37,-35,-46,-38,-170,235,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,248,-44,-59,-169,-164,-75,287,-184,290,292,-62,-81,-189,-186,-40,-39,-47,108,-57,-82,-76,-185,-188,-43,-163,-55,-49,336,-50,]),'DOWN':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,165,166,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,267,268,269,277,300,303,304,307,324,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-151,224,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-59,-169,-75,299,-155,-152,-81,323,-57,-82,-76,-153,]),'ASSIGN':([5,11,13,21,30,36,42,44,71,87,88,91,92,93,94,95,98,108,138,139,140,141,142,143,144,145,146,147,148,150,152,153,155,165,166,181,182,187,189,222,228,235,290,292,293,303,317,318,339,],[-56,-160,-60,-17,90,-159,-15,107,-56,-58,168,172,173,174,175,176,180,-162,-36,-30,-32,-29,-28,-34,-41,-31,-45,-33,-37,219,-35,-46,-38,-151,225,234,-170,-16,-161,-44,-59,-169,-40,-39,-47,-57,-55,-49,-50,]),'COLON':([5,11,15,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,82,87,108,112,113,115,170,171,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,228,235,246,253,254,261,277,303,304,307,316,],[-114,-160,72,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,160,-58,-162,-106,-111,-105,-61,230,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,247,-59,-169,-75,-61,291,-56,-81,-57,-82,-76,-61,]),'COMMA':([11,21,36,41,42,43,44,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,74,75,76,87,97,98,99,108,109,110,112,113,115,138,139,140,141,142,143,144,145,146,147,148,150,152,153,155,169,170,182,183,186,187,188,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,215,218,222,228,231,232,233,235,240,246,249,250,251,256,259,260,263,271,273,274,277,288,289,290,292,293,303,304,307,311,314,315,316,317,318,319,320,339,340,],[-160,-17,-159,-25,-15,104,106,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-10,136,106,-58,178,106,-19,-162,190,-163,-106,-111,-105,-36,-30,-32,-29,-28,-34,-41,-31,-45,-33,-37,-13,-35,-46,-38,229,-63,-170,190,-26,-16,-27,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,229,-63,-11,-12,-44,-59,-20,-23,-22,-169,-164,-75,286,-184,106,-14,-54,-53,296,-64,-62,-21,-81,-189,-186,-40,-39,-47,-57,-82,-76,-185,-188,-43,-163,-55,-49,333,-51,-50,-52,]),'ARRAY':([21,42,76,98,107,156,187,251,295,310,332,],[-17,-15,154,154,154,154,-16,154,154,154,154,]),'RBRACKET':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,138,140,143,147,148,152,155,169,170,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,228,235,246,257,258,259,260,263,271,272,273,277,282,290,292,303,304,307,315,319,320,340,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-36,-32,-34,-33,-37,-35,-38,228,-63,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,246,-63,-59,-169,-75,293,-48,-54,-53,295,-64,303,-62,-81,307,-40,-39,-57,-82,-76,-43,332,-51,-52,]),'OR':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,125,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,125,125,125,-59,-169,-75,-56,-57,-76,]),'READ':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[33,-8,-6,33,-7,33,-2,-5,33,33,33,-4,33,33,33,33,33,33,33,-3,-113,-115,33,33,33,-131,33,33,-24,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-9,-116,33,33,-125,-127,-128,-129,-130,-126,-18,33,33,33,33,-179,-112,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'PRINT':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[2,-8,-6,2,-7,2,-2,-5,2,2,2,-4,2,2,2,2,2,2,2,-3,-113,-115,2,2,2,-131,2,2,-24,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-9,-116,2,2,-125,-127,-128,-129,-130,-126,-18,2,2,2,2,-179,-112,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'TYPE':([0,1,7,16,22,23,25,39,77,78,105,137,179,212,214,283,308,309,312,328,330,331,338,],[4,-8,-6,-7,-2,-5,4,-4,-3,-113,-24,-9,-18,-179,-112,4,4,4,4,4,4,4,4,]),'LOC':([21,138,139,140,141,142,143,144,145,146,147,148,152,153,155,222,288,290,292,293,317,318,339,],[-17,-36,-30,-32,-29,-28,-34,-41,-31,-45,-33,-37,-35,-46,-38,-44,314,-40,-39,-47,-55,-49,-50,]),'IF':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,58,72,77,78,79,80,81,89,90,96,101,105,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[38,-8,-6,52,-7,52,-2,-5,38,38,52,-4,52,52,52,38,-3,-113,-115,38,52,52,-131,52,52,-24,52,-9,-116,38,38,-125,-127,-128,-129,-130,-126,-18,52,38,52,52,-179,-112,52,52,52,52,52,38,52,52,52,38,38,52,52,52,38,52,38,52,52,52,52,38,38,38,38,38,38,52,38,]),'WHILE':([11,21,29,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,83,87,108,112,113,115,138,140,143,147,148,152,155,162,163,164,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,264,268,277,290,292,297,298,303,304,307,321,322,325,334,],[-160,-17,81,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,81,-58,-162,-106,-111,-105,-36,-32,-34,-33,-37,-35,-38,-146,-145,-144,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-59,-169,-75,-157,-155,-81,-40,-39,-156,-150,-57,-82,-76,-148,-149,-154,-147,]),'NOT':([11,12,18,21,36,38,45,46,47,48,49,50,52,55,56,57,58,60,62,63,64,65,67,68,69,70,71,81,87,89,90,96,101,108,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,182,189,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,216,217,219,221,225,228,229,230,234,235,242,244,246,247,261,280,291,294,296,302,303,307,333,],[-160,53,53,-17,-159,53,53,-74,-65,-107,-88,-70,53,-71,-60,-72,53,130,-109,-67,-69,-108,-66,-73,-110,-68,-56,53,-58,53,-131,53,53,-162,-106,-111,-105,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-125,-127,-128,-129,-130,-126,53,-170,-161,53,53,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,130,53,53,53,53,53,-59,53,53,53,-169,53,53,-75,53,-56,53,53,53,53,53,-57,-76,53,]),'CONCAT':([5,11,13,21,30,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-56,-160,-60,-17,94,-159,-74,-65,-107,-88,-70,-71,-60,-72,131,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-59,-169,-75,-56,-57,-76,]),'ARROW':([5,11,12,13,18,21,30,36,38,45,52,53,56,58,59,65,71,81,87,89,90,96,101,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,182,189,190,192,216,217,219,221,225,228,229,230,234,235,242,244,247,261,280,291,294,296,302,303,333,],[-56,-160,54,-60,54,-17,87,-159,54,54,54,54,-60,54,54,87,-56,54,-58,54,-131,54,54,-162,87,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-125,-127,-128,-129,-130,-126,54,-170,-161,54,54,54,54,54,54,54,-59,54,54,54,-169,54,54,54,-56,54,54,54,54,54,-57,54,]),'BOOL':([21,42,76,98,107,156,187,221,223,251,266,295,296,310,332,333,],[-17,-15,148,148,148,148,-16,148,148,148,148,148,148,148,148,148,]),'PLUS':([5,11,13,21,30,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-56,-160,-60,-17,88,-159,-74,-65,-107,-88,-70,-71,-60,-72,117,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,117,-97,117,-98,-99,-100,117,117,-101,117,117,117,117,117,117,117,-59,-169,-75,-56,-57,-76,]),'LBRACKET':([5,11,13,21,30,36,46,47,50,55,56,57,61,63,64,65,67,68,69,70,71,87,108,113,151,154,182,189,193,228,235,246,261,303,307,],[-56,-160,-60,-17,89,-159,-74,-65,-70,-71,-60,-72,132,-67,-69,89,-66,-73,-77,-68,-56,-58,-162,89,220,221,-170,-161,-78,-59,-169,-75,-56,-57,-76,]),'GT':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,126,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,126,-97,-95,-98,-99,-100,-96,126,-101,126,-93,-94,126,126,126,126,-59,-169,-75,-56,-57,-76,]),'TIMES':([5,11,13,21,30,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-56,-160,-60,-17,91,-159,-74,-65,-107,-88,-70,-71,-60,-72,120,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,120,120,120,120,-99,-100,120,120,-101,120,120,120,120,120,120,120,-59,-169,-75,-56,-57,-76,]),'BY':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,267,268,269,277,303,304,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-59,-169,-75,301,-155,-152,-81,-57,-82,-76,]),'TRUE':([12,18,38,45,52,53,58,59,81,89,90,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[55,55,55,55,55,55,55,55,55,55,-131,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-125,-127,-128,-129,-130,-126,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LT':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,118,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,118,-97,-95,-98,-99,-100,-96,118,-101,118,-93,-94,118,118,118,118,-59,-169,-75,-56,-57,-76,]),'MOD':([5,11,13,21,30,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-56,-160,-60,-17,93,-159,-74,-65,-107,-88,-70,-71,-60,-72,124,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,124,124,124,124,-99,-100,124,124,-101,124,124,124,124,124,124,124,-59,-169,-75,-56,-57,-76,]),'SEMI':([3,6,8,10,11,13,18,20,21,26,28,36,41,43,46,47,48,49,50,51,55,56,57,60,62,63,64,65,66,67,68,69,70,71,73,74,75,83,85,86,87,97,99,100,103,108,112,113,115,133,135,138,139,140,141,142,143,144,145,146,147,148,150,152,153,155,158,159,161,162,163,164,177,182,186,188,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,218,222,227,228,231,232,233,235,238,246,248,256,264,268,270,274,275,277,284,287,290,292,293,297,298,303,304,307,313,317,318,321,322,325,327,334,335,336,337,339,341,],[-117,-123,-122,-121,-160,-120,-167,-118,-17,-119,78,-159,-25,105,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-168,-66,-73,-110,-68,-56,-166,-10,137,-142,167,-143,-58,179,-19,-165,-83,-162,-106,-111,-105,212,214,-36,-30,-32,-29,-28,-34,-41,-31,-45,-33,-37,-13,-35,-46,-38,-140,-158,-141,-146,-145,-144,-124,-170,-26,-27,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-11,-12,-44,-139,-59,-20,-23,-22,-169,-133,-75,283,-14,-157,-155,-138,-21,-132,-81,309,312,-40,-39,-47,-156,-150,-57,-82,-76,331,-55,-49,-148,-149,-154,-183,-147,-182,-187,-181,-50,-180,]),'RESULT':([0,1,7,16,22,23,25,29,39,72,77,78,79,80,105,137,157,160,167,179,185,212,214,226,237,239,276,283,308,309,312,328,330,331,338,],[12,-8,-6,-7,-2,-5,12,12,-4,12,-3,-113,-115,12,-24,-9,-116,12,12,-18,12,-179,-112,12,12,12,12,12,12,12,12,12,12,12,12,]),'ELSIF':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,243,245,246,277,303,304,306,307,326,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,244,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-59,-169,280,-84,-75,-81,-57,-82,-86,-76,-87,]),'LOWER':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[14,-8,-6,14,-7,14,-2,-5,14,14,14,-4,14,14,14,14,14,14,14,-3,-113,-115,14,14,14,-131,14,14,-24,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-9,-116,14,14,-125,-127,-128,-129,-130,-126,-18,14,14,14,14,-179,-112,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'AND':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,128,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,128,-93,-94,-89,128,128,128,-59,-169,-75,-56,-57,-76,]),'CCONST':([12,18,38,45,52,53,58,59,81,89,90,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[57,57,57,57,57,57,57,57,57,57,-131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-125,-127,-128,-129,-130,-126,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'PRED':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[17,-8,-6,17,-7,17,-2,-5,17,17,17,-4,17,17,17,17,17,17,17,-3,-113,-115,17,17,17,-131,17,17,-24,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-9,-116,17,17,-125,-127,-128,-129,-130,-126,-18,17,17,17,17,-179,-112,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'RETURN':([0,1,7,16,22,23,25,29,39,72,77,78,79,80,105,137,157,160,167,179,185,212,214,226,237,239,276,283,308,309,312,328,330,331,338,],[18,-8,-6,-7,-2,-5,18,18,-4,18,-3,-113,-115,18,-24,-9,-116,18,18,-18,18,-179,-112,18,18,18,18,18,18,18,18,18,18,18,18,]),'DCL':([0,1,7,16,22,23,25,39,77,78,105,137,179,212,214,283,308,309,312,328,330,331,338,],[19,-8,-6,-7,-2,-5,19,-4,-3,-113,-24,-9,-18,-179,-112,19,19,19,19,19,19,19,19,]),'LPAREN':([2,5,9,12,14,17,18,21,24,27,33,34,35,38,40,45,52,53,58,59,71,81,89,90,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,138,140,141,143,144,147,148,149,152,155,168,172,173,174,175,176,180,190,192,216,217,219,221,225,229,230,234,242,244,247,260,261,262,264,265,280,285,290,291,292,294,296,297,302,333,],[-178,-42,45,58,-175,-172,58,-17,-176,-174,-177,-171,101,58,-173,58,58,58,58,58,-42,58,58,-131,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,213,-36,-32,216,-34,-42,-33,-37,217,-35,-38,-125,-127,-128,-129,-130,-126,58,58,58,58,58,58,58,58,58,58,58,58,58,58,216,-42,294,216,-42,58,310,-40,58,-39,58,58,216,58,58,]),'MINUS':([5,11,12,13,18,21,30,36,38,45,46,47,48,49,50,52,55,56,57,58,60,62,63,64,65,67,68,69,70,71,81,87,89,90,96,101,108,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,182,189,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,216,217,219,221,225,228,229,230,234,235,242,244,246,247,261,280,291,294,296,302,303,307,333,],[-56,-160,59,-60,59,-17,95,-159,59,59,-74,-65,-107,-88,-70,59,-71,-60,-72,59,119,-109,-67,-69,-108,-66,-73,-110,-68,-56,59,-58,59,-131,59,59,-162,-106,-111,-105,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-125,-127,-128,-129,-130,-126,59,-170,-161,59,59,-78,119,-97,119,-98,-99,-100,119,119,-101,119,119,119,119,119,119,119,59,59,59,59,59,-59,59,59,59,-169,59,59,-75,59,-56,59,59,59,59,59,-57,-76,59,]),'ID':([0,1,4,7,12,16,18,19,21,22,23,25,29,31,32,38,39,42,45,52,53,54,58,59,72,76,77,78,79,80,81,84,89,90,96,98,101,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,156,157,160,167,168,172,173,174,175,176,178,179,180,185,187,190,192,212,213,214,216,217,219,221,223,225,226,229,230,234,237,239,242,244,247,251,266,276,280,283,286,291,294,295,296,302,308,309,310,312,328,330,331,332,333,338,],[21,-8,21,-6,21,-7,21,21,-17,-2,-5,21,21,21,21,21,-4,-15,21,21,21,21,21,21,21,21,-3,-113,-115,21,21,21,21,-131,21,21,21,21,-24,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-9,21,-116,21,21,-125,-127,-128,-129,-130,-126,21,-18,21,21,-16,21,21,-179,21,-112,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'DIVIDE':([5,11,13,21,30,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-56,-160,-60,-17,92,-159,-74,-65,-107,-88,-70,-71,-60,-72,121,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,121,121,121,121,-99,-100,121,121,-101,121,121,121,121,121,121,121,-59,-169,-75,-56,-57,-76,]),'ELSE':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,78,79,87,108,112,113,115,157,182,184,185,189,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,228,235,239,243,245,246,277,303,304,306,307,326,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-113,-115,-58,-162,-106,-111,-105,-116,-170,237,-135,-161,242,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-112,-59,-169,-134,242,-84,-75,-81,-57,-82,-86,-76,-87,]),'LENGTH':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[24,-8,-6,24,-7,24,-2,-5,24,24,24,-4,24,24,24,24,24,24,24,-3,-113,-115,24,24,24,-131,24,24,-24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-9,-116,24,24,-125,-127,-128,-129,-130,-126,-18,24,24,24,24,-179,-112,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'DO':([0,1,7,16,22,23,25,29,39,72,77,78,79,80,105,137,157,160,167,179,185,212,214,226,237,239,276,283,308,309,312,328,330,331,338,],[29,-8,-6,-7,-2,-5,29,29,-4,29,-3,-113,-115,29,-24,-9,-116,29,29,-18,29,-179,-112,29,29,29,29,29,29,29,29,29,29,29,29,]),'PROC':([72,],[134,]),'FOR':([29,],[84,]),'FI':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,78,79,87,108,112,113,115,157,182,184,185,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,228,235,236,237,239,241,246,276,277,278,279,303,304,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-113,-115,-58,-162,-106,-111,-105,-116,-170,238,-135,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-112,-59,-169,275,-137,-134,277,-75,-136,-81,-85,304,-57,-82,-76,]),'SUCC':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[40,-8,-6,40,-7,40,-2,-5,40,40,40,-4,40,40,40,40,40,40,40,-3,-113,-115,40,40,40,-131,40,40,-24,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-9,-116,40,40,-125,-127,-128,-129,-130,-126,-18,40,40,40,40,-179,-112,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'END':([1,7,16,22,23,39,77,78,105,137,179,212,214,308,328,330,338,],[-8,-6,-7,-2,-5,-4,-3,-113,-24,-9,-18,-179,-112,327,335,337,341,]),'TO':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,267,268,269,277,299,300,303,304,307,323,324,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-59,-169,-75,302,-155,-152,-81,302,302,-57,-82,-76,302,-153,]),'$end':([1,7,16,22,23,25,37,39,77,78,105,137,179,212,214,],[-8,-6,-7,-2,-5,-1,0,-4,-3,-113,-24,-9,-18,-179,-112,]),'UPPER':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[27,-8,-6,27,-7,27,-2,-5,27,27,27,-4,27,27,27,27,27,27,27,-3,-113,-115,27,27,27,-131,27,27,-24,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-9,-116,27,27,-125,-127,-128,-129,-130,-126,-18,27,27,27,27,-179,-112,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ICONST':([12,18,38,45,52,53,58,59,81,89,90,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,190,192,216,217,219,220,221,225,229,230,234,242,244,247,280,291,294,296,301,302,333,],[64,64,64,64,64,64,64,64,64,64,-131,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-125,-127,-128,-129,-130,-126,64,64,64,64,64,64,258,64,64,64,64,64,64,64,64,64,64,64,64,324,64,64,]),'IN':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,165,166,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,224,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,129,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-151,223,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,129,129,266,-59,-169,-75,-56,-57,-76,]),'SCONST':([12,18,38,45,52,53,58,59,81,89,90,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[46,46,46,46,46,46,46,46,46,46,-131,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-125,-127,-128,-129,-130,-126,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'OD':([78,79,80,157,167,214,226,],[-113,-115,158,-116,227,-112,270,]),'NULL':([12,18,38,45,52,53,58,59,81,89,90,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[68,68,68,68,68,68,68,68,68,68,-131,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-125,-127,-128,-129,-130,-126,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'SYN':([0,1,7,16,22,23,25,39,77,78,105,137,179,212,214,283,308,309,312,328,330,331,338,],[31,-8,-6,-7,-2,-5,31,-4,-3,-113,-24,-9,-18,-179,-112,31,31,31,31,31,31,31,31,]),'EXIT':([0,1,7,16,22,23,25,29,39,72,77,78,79,80,105,137,157,160,167,179,185,212,214,226,237,239,276,283,308,309,312,328,330,331,338,],[32,-8,-6,-7,-2,-5,32,32,-4,32,-3,-113,-115,32,-24,-9,-116,32,32,-18,32,-179,-112,32,32,32,32,32,32,32,32,32,32,32,32,]),'LE':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,122,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,122,-97,-95,-98,-99,-100,-96,122,-101,122,-93,-94,122,122,122,122,-59,-169,-75,-56,-57,-76,]),'NEQ':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,123,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,123,-93,-94,123,123,123,123,-59,-169,-75,-56,-57,-76,]),'NUM':([0,1,7,12,16,18,22,23,25,29,38,39,45,52,53,54,58,59,72,77,78,79,80,81,89,90,96,101,105,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,157,160,167,168,172,173,174,175,176,179,180,185,190,192,212,214,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[34,-8,-6,34,-7,34,-2,-5,34,34,34,-4,34,34,34,34,34,34,34,-3,-113,-115,34,34,34,-131,34,34,-24,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-9,-116,34,34,-125,-127,-128,-129,-130,-126,-18,34,34,34,34,-179,-112,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RETURNS':([248,287,],[285,285,]),'CHARS':([21,42,76,98,107,156,187,251,295,310,332,],[-17,-15,151,151,151,151,-16,151,151,151,151,]),'CHAR':([21,42,76,98,107,156,187,221,223,251,266,295,296,310,332,333,],[-17,-15,155,155,155,155,-16,155,155,155,155,155,155,155,155,155,]),'GE':([11,21,36,46,47,48,49,50,55,56,57,60,62,63,64,65,67,68,69,70,71,87,108,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,261,303,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-71,-60,-72,127,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,-162,-106,-111,-105,-170,-161,-78,127,-97,-95,-98,-99,-100,-96,127,-101,127,-93,-94,127,127,127,127,-59,-169,-75,-56,-57,-76,]),'REF':([21,42,76,98,107,156,187,251,295,310,332,],[-17,-15,156,156,156,156,-16,156,156,156,156,]),'THEN':([11,21,36,46,47,48,49,50,51,55,56,57,60,62,63,64,65,67,68,69,70,71,87,102,103,108,111,112,113,115,182,189,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,228,235,246,277,281,303,304,305,307,],[-160,-17,-159,-74,-65,-107,-88,-70,-80,-71,-60,-72,-79,-109,-67,-69,-108,-66,-73,-110,-68,-56,-58,185,-83,-162,192,-106,-111,-105,-170,-161,-78,-91,-97,-95,-98,-99,-100,-96,-92,-101,-90,-93,-94,-89,-103,-102,-104,-59,-169,-75,-81,192,-57,-82,192,-76,]),'FALSE':([12,18,38,45,52,53,58,59,81,89,90,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,168,172,173,174,175,176,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[50,50,50,50,50,50,50,50,50,50,-131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-125,-127,-128,-129,-130,-126,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'literal_range':([216,217,221,294,296,333,],[252,255,259,255,259,259,]),'start_value':([225,],[267,]),'literal':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'operand1':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[48,48,48,48,48,112,48,115,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'discrete_mode':([76,98,107,156,221,223,251,266,295,296,310,332,333,],[141,141,141,141,260,264,141,297,141,260,141,141,260,]),'array_primitive_value':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'action_statement_list':([29,167,185,237,],[80,226,239,276,]),'operand':([12,18,38,45,52,58,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'result_spec':([248,287,],[284,313,]),'statement_list':([0,283,309,312,331,],[25,308,328,330,338,]),'string_mode':([76,98,107,156,251,295,310,332,],[146,146,146,146,146,146,146,146,]),'discrete_mode_name':([0,12,18,25,29,38,45,52,53,54,58,59,72,76,80,81,89,96,98,101,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,156,160,167,180,185,190,192,216,217,219,221,223,225,226,229,230,234,237,239,242,244,247,251,266,276,280,283,291,294,295,296,302,308,309,310,312,328,330,331,332,333,338,],[9,9,9,9,9,9,9,9,9,9,9,9,9,149,9,9,9,9,149,9,149,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,149,9,9,9,9,9,9,9,9,9,262,149,9,9,9,9,9,9,9,9,9,9,149,149,9,9,9,9,9,149,262,9,9,9,149,9,9,9,9,149,262,9,]),'synonym_definition':([31,178,],[99,231,]),'program':([0,],[37,]),'discrete_range_mode':([76,98,107,156,221,223,251,266,295,296,310,332,333,],[152,152,152,152,152,152,152,152,152,152,152,152,152,]),'elsif_expression':([191,],[243,]),'assignment_action':([0,25,29,72,80,160,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'procedure_statement':([0,25,283,308,309,312,328,330,331,338,],[16,16,16,16,16,16,16,16,16,16,]),'for_control':([29,],[83,]),'range_enumeration':([84,],[162,]),'call_action':([0,12,18,25,29,38,45,52,53,54,58,59,72,80,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,160,167,180,185,190,192,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[13,56,56,13,13,56,56,56,56,56,56,56,13,13,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,13,13,56,13,56,56,56,56,56,56,56,13,56,56,56,13,13,56,56,56,13,56,13,56,56,56,56,13,13,13,13,13,13,56,13,]),'reference_mode':([76,98,107,156,251,295,310,332,],[139,139,139,139,139,139,139,139,]),'integer_mode':([76,98,107,156,221,223,251,266,295,296,310,332,333,],[140,140,140,140,140,140,140,140,140,140,140,140,140,]),'boolean_expression':([38,52,81,244,280,],[102,111,159,281,305,]),'statement':([0,25,283,308,309,312,328,330,331,338,],[22,77,22,77,22,22,77,77,22,77,]),'iteration':([84,],[164,]),'else_expression':([191,243,],[241,279,]),'exit_action':([0,25,29,72,80,160,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'character_mode':([76,98,107,156,221,223,251,266,295,296,310,332,333,],[143,143,143,143,143,143,143,143,143,143,143,143,143,]),'step_value':([267,],[300,]),'composite_mode':([76,98,107,156,251,295,310,332,],[145,145,145,145,145,145,145,145,]),'action':([0,25,29,72,80,160,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[28,28,28,135,28,135,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'location':([0,12,18,25,29,38,45,52,53,54,58,59,72,80,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,160,167,180,185,190,192,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[30,65,65,30,30,65,65,65,65,113,65,65,30,30,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,30,30,65,30,65,65,65,65,65,65,65,30,65,65,65,30,30,65,65,65,30,65,30,65,65,65,65,30,30,30,30,30,30,65,30,]),'primitive_value':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'value_array_element':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'index_mode':([221,296,333,],[263,320,340,]),'element_mode':([295,332,],[318,339,]),'index_mode_list':([296,],[319,]),'parenthesized_expression':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'conditional_expression':([12,18,38,45,52,58,81,89,96,101,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'parameter_spec':([251,310,],[289,329,]),'while_control':([29,83,],[86,161,]),'declaration_statement':([0,25,283,308,309,312,328,330,331,338,],[39,39,39,39,39,39,39,39,39,39,]),'discrete_expression':([225,302,],[269,325,]),'action_statement':([0,25,29,80,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[1,1,79,157,79,79,157,79,157,157,1,1,1,1,1,1,1,1,]),'assigning_operator':([30,],[96,]),'upper_bound':([230,291,],[272,315,]),'declaration_list':([19,],[75,]),'mode_name':([76,98,107,156,251,295,310,332,],[142,142,142,142,142,142,142,142,]),'if_action':([0,25,29,72,80,160,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'builtin_name':([0,12,18,25,29,38,45,52,53,54,58,59,72,80,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,160,167,180,185,190,192,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'identifier':([0,4,12,18,19,25,29,31,32,38,45,52,53,54,58,59,72,76,80,81,84,89,96,98,101,104,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,156,160,167,178,180,185,190,192,213,216,217,219,221,223,225,226,229,230,234,237,239,242,244,247,251,266,276,280,283,286,291,294,295,296,302,308,309,310,312,328,330,331,332,333,338,],[5,42,71,71,42,5,5,42,100,71,71,71,71,71,71,71,71,144,5,71,165,71,71,144,71,42,187,144,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,42,144,71,5,42,71,5,71,71,42,71,71,71,261,265,71,5,71,71,71,5,5,71,71,71,144,265,5,71,5,42,71,71,144,261,71,5,5,144,5,5,5,5,144,261,5,]),'result_action':([0,25,29,72,80,160,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'newmode_statement':([0,25,283,308,309,312,328,330,331,338,],[7,7,7,7,7,7,7,7,7,7,]),'return_action':([0,25,29,72,80,160,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'newmode_list':([4,],[43,]),'builtin_call':([0,12,18,25,29,38,45,52,53,54,58,59,72,80,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,160,167,180,185,190,192,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'array_mode':([76,98,107,156,251,295,310,332,],[153,153,153,153,153,153,153,153,]),'mode_definition':([4,104,],[41,186,]),'step_enumeration':([84,],[163,]),'label_id':([0,25,29,80,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[15,15,82,82,82,82,82,82,82,82,15,15,15,15,15,15,15,15,]),'formal_parameter':([213,286,],[250,311,]),'do_action':([0,25,29,72,80,160,167,185,226,237,239,276,283,308,309,312,328,330,331,338,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'procedure_definition':([72,],[133,]),'binop':([12,18,38,45,52,58,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[60,60,60,60,60,60,60,60,60,60,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'referenced_location':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'synonym_statement':([0,25,283,308,309,312,328,330,331,338,],[23,23,23,23,23,23,23,23,23,23,]),'else_clause':([184,],[236,]),'then_clause':([102,],[184,]),'value_array_slice':([12,18,38,45,52,53,58,59,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'expression_list':([89,132,],[169,210,]),'declaration':([19,136,],[74,215,]),'identifier_list':([4,19,31,104,136,178,213,286,],[44,76,98,44,76,98,251,251,]),'loop_counter':([84,],[166,]),'boolean_mode':([76,98,107,156,221,223,251,266,295,296,310,332,333,],[147,147,147,147,147,147,147,147,147,147,147,147,147,]),'control_part':([29,],[85,]),'synonym_list':([31,],[97,]),'expression':([12,18,38,45,52,58,81,89,96,101,132,180,190,192,216,217,219,221,225,229,230,234,242,244,247,280,291,294,296,302,333,],[66,73,103,110,103,114,103,170,177,110,211,232,240,245,253,253,256,253,268,271,273,232,278,103,282,103,273,316,253,268,253,]),'mode':([76,98,107,156,251,295,310,332,],[150,181,188,222,288,317,288,317,]),'then_expression':([111,281,305,],[191,306,326,]),'parameter_list':([45,101,294,],[109,183,109,]),'string_length':([220,],[257,]),'constant_expression':([180,234,],[233,274,]),'procedure_call':([0,12,18,25,29,38,45,52,53,54,58,59,72,80,81,89,96,101,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,160,167,180,185,190,192,216,217,219,221,225,226,229,230,234,237,239,242,244,247,276,280,283,291,294,296,302,308,309,312,328,330,331,333,338,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'end_value':([267,299,300,323,],[298,321,322,334,]),'formal_parameter_list':([213,],[249,]),'lower_bound':([89,216,217,221,294,296,333,],[171,254,254,254,254,254,254,]),'initialization':([150,],[218,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
