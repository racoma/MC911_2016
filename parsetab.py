
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '399964A1D17C76D574BDEBD8043A1C85'
    
_lr_action_items = {'IF':([0,1,10,11,12,13,16,17,21,22,32,39,41,55,68,70,75,76,87,89,93,94,98,99,102,105,110,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[1,41,-5,41,-8,-6,-4,-2,1,-7,1,41,41,41,1,-131,41,41,-113,-3,41,1,-115,41,41,41,1,-128,-130,-129,-126,-125,-127,-18,41,-9,-24,-116,1,1,41,1,1,-112,-179,41,41,41,41,41,41,41,41,41,1,41,41,41,1,41,1,41,41,41,41,1,1,1,1,1,1,41,1,]),'FOR':([32,],[100,]),'ID':([0,1,6,7,10,11,12,13,15,16,17,19,21,22,27,32,39,41,48,49,51,55,68,70,75,76,80,82,85,87,89,93,94,98,99,100,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,142,148,157,158,164,165,167,168,169,174,175,183,187,191,194,211,212,213,214,215,218,220,221,224,226,228,232,234,236,237,241,243,245,248,250,273,277,283,287,292,295,296,297,301,309,312,313,314,327,328,331,332,333,336,],[15,15,15,15,-5,15,-8,-6,-17,-4,-2,15,15,-7,15,15,15,15,15,15,15,15,15,-131,15,15,-15,15,15,-113,-3,15,15,-115,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-128,-130,-129,-126,-125,-127,-18,15,15,15,15,-9,15,-24,15,15,-116,15,15,15,15,15,15,-112,-179,15,15,15,15,15,-16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FALSE':([1,11,39,41,48,49,55,70,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[62,62,62,62,62,62,62,-131,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-128,-130,-129,-126,-125,-127,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'SYN':([0,10,12,13,16,17,21,22,87,89,141,164,167,212,213,287,309,312,314,327,328,331,336,],[6,-5,-8,-6,-4,-2,6,-7,-113,-3,-18,-9,-24,-112,-179,6,6,6,6,6,6,6,6,]),'REF':([15,80,82,85,148,169,224,250,297,313,333,],[-17,-15,148,148,148,148,-16,148,148,148,148,]),'RETURN':([0,10,12,13,16,17,21,22,32,68,87,89,94,98,110,141,164,167,174,175,183,191,194,212,213,237,248,287,309,312,314,327,328,331,336,],[11,-5,-8,-6,-4,-2,11,-7,11,11,-113,-3,11,-115,11,-18,-9,-24,-116,11,11,11,11,-112,-179,11,11,11,11,11,11,11,11,11,11,]),'DCL':([0,10,12,13,16,17,21,22,87,89,141,164,167,212,213,287,309,312,314,327,328,331,336,],[7,-5,-8,-6,-4,-2,7,-7,-113,-3,-18,-9,-24,-112,-179,7,7,7,7,7,7,7,7,]),'LOWER':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[31,31,-5,31,-8,-6,-4,-2,31,-7,31,31,31,31,31,31,31,31,-131,31,31,-113,-3,31,31,-115,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-128,-130,-129,-126,-125,-127,-18,31,-9,-24,-116,31,31,31,31,31,-112,-179,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'SEMI':([11,14,15,18,23,24,25,28,30,33,34,36,42,43,44,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,79,81,83,84,86,88,90,91,96,97,101,103,106,107,108,129,130,135,144,145,146,147,149,150,151,152,153,155,156,159,161,162,166,172,173,176,177,178,179,182,185,190,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,217,219,222,223,227,229,230,231,233,238,239,246,247,252,256,268,270,274,276,280,284,289,290,291,293,294,300,303,305,307,310,319,320,322,323,325,329,334,335,337,338,340,341,],[-167,-119,-17,87,-120,-121,-159,-118,-123,-122,-117,-160,-108,-88,-83,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,141,-19,164,-10,-166,-165,-25,167,-143,-142,183,-168,-105,-106,-111,212,213,-124,-30,-33,-35,-46,-45,-41,-29,-28,-31,-34,-38,-32,-36,-37,-13,-162,-140,-141,-158,-144,-145,-146,-170,-78,-133,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-20,-44,-22,-23,-11,-12,-26,-27,-161,-139,-169,-75,-132,287,-21,-14,-155,-157,-138,-81,309,314,-57,-40,-39,-47,-150,-156,-82,-76,328,-55,-49,-148,-154,-149,-183,-147,-181,-187,-182,-50,-180,]),'OD':([87,94,98,174,183,212,237,],[-113,173,-115,-116,238,-112,276,]),'RETURNS':([252,284,],[288,288,]),'IN':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,180,181,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,235,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,121,-58,-105,-106,-111,-162,-151,236,-170,-78,-94,-100,-96,121,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,121,-59,-161,273,-169,-75,-56,-57,-76,]),'UPPER':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[8,8,-5,8,-8,-6,-4,-2,8,-7,8,8,8,8,8,8,8,8,-131,8,8,-113,-3,8,8,-115,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-128,-130,-129,-126,-125,-127,-18,8,-9,-24,-116,8,8,8,8,8,-112,-179,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'PLUS':([5,9,15,23,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[77,-56,-17,-60,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,122,-58,-105,-106,-111,-162,-170,-78,122,-100,122,122,-101,122,122,122,122,122,-97,122,-99,-98,122,122,-59,-161,-169,-75,-56,-57,-76,]),'TIMES':([5,9,15,23,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[78,-56,-17,-60,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,124,-58,-105,-106,-111,-162,-170,-78,124,-100,124,124,-101,124,124,124,124,124,124,124,-99,124,124,124,-59,-161,-169,-75,-56,-57,-76,]),'MINUS':([1,5,9,11,15,23,25,36,39,41,42,43,45,47,50,52,53,54,55,56,58,60,61,62,63,64,65,66,67,70,72,75,76,93,99,102,105,106,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,172,185,187,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,214,215,216,218,220,221,226,228,232,233,234,239,241,243,245,246,266,277,290,292,295,296,301,307,332,],[48,74,-56,48,-17,-60,-159,-160,48,48,-108,-88,-65,-56,-67,-73,-74,-60,48,-69,-110,-72,-68,-70,-107,-66,-109,-71,125,-131,-58,48,48,48,48,48,48,-105,-106,-111,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-128,-130,-129,-126,-125,-127,48,-162,-170,48,-78,125,-100,125,125,-101,125,125,125,125,125,-97,125,-99,-98,125,125,48,48,-59,48,48,48,48,48,48,-161,48,-169,48,48,48,-75,-56,48,-57,48,48,48,48,-76,48,]),'WHILE':([15,25,32,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,97,106,107,108,145,146,155,156,159,161,162,172,178,179,182,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,270,274,280,290,291,293,300,303,305,307,322,323,325,334,],[-17,-159,99,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,99,-105,-106,-111,-33,-35,-34,-38,-32,-36,-37,-162,-144,-145,-146,-170,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,-155,-157,-81,-57,-40,-39,-150,-156,-82,-76,-148,-154,-149,-147,]),'GT':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,126,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,126,-101,-95,126,126,126,126,-97,126,-99,-98,-93,126,-59,-161,-169,-75,-56,-57,-76,]),'NOT':([1,11,15,25,36,39,41,42,43,45,47,50,52,53,54,55,56,58,60,61,62,63,64,65,66,67,70,72,75,76,93,99,102,105,106,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,172,185,187,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,214,215,216,218,220,221,226,228,232,233,234,239,241,243,245,246,266,277,290,292,295,296,301,307,332,],[49,49,-17,-159,-160,49,49,-108,-88,-65,-56,-67,-73,-74,-60,49,-69,-110,-72,-68,-70,-107,-66,-109,-71,127,-131,-58,49,49,49,49,49,49,-105,-106,-111,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-128,-130,-129,-126,-125,-127,49,-162,-170,49,-78,-94,-100,-96,127,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,49,49,-59,49,49,49,49,49,49,-161,49,-169,49,49,49,-75,-56,49,-57,49,49,49,49,-76,49,]),'OR':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,119,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,119,-101,-95,-91,-90,-89,119,-97,-92,-99,-98,-93,119,-59,-161,-169,-75,-56,-57,-76,]),'ASSIGN':([5,9,15,23,25,36,47,69,71,72,73,74,77,78,80,82,92,143,144,145,146,147,149,150,151,152,153,155,156,159,161,162,166,172,180,181,185,216,219,224,233,239,290,291,293,294,319,320,340,],[70,-56,-17,-60,-159,-160,-56,131,132,-58,133,134,139,140,-15,157,169,218,-30,-33,-35,-46,-45,-41,-29,-28,-31,-34,-38,-32,-36,-37,228,-162,-151,234,-170,-59,-44,-16,-161,-169,-57,-40,-39,-47,-55,-49,-50,]),'ARROW':([1,5,9,11,15,23,25,36,39,41,42,47,48,49,54,55,70,72,75,76,93,99,102,105,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,172,185,187,214,215,216,218,220,221,226,228,232,233,234,239,241,243,245,266,277,290,292,295,296,301,332,],[51,72,-56,51,-17,-60,-159,-160,51,51,72,-56,51,51,-60,51,-131,-58,51,51,51,51,51,51,72,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-128,-130,-129,-126,-125,-127,51,-162,-170,51,51,51,-59,51,51,51,51,51,51,-161,51,-169,51,51,51,-56,51,-57,51,51,51,51,51,]),'EXIT':([0,10,12,13,16,17,21,22,32,68,87,89,94,98,110,141,164,167,174,175,183,191,194,212,213,237,248,287,309,312,314,327,328,331,336,],[19,-5,-8,-6,-4,-2,19,-7,19,19,-113,-3,19,-115,19,-18,-9,-24,-116,19,19,19,19,-112,-179,19,19,19,19,19,19,19,19,19,19,]),'ELSIF':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,186,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,240,244,246,280,290,305,306,307,326,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,-105,-106,-111,-162,-170,241,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,277,-84,-75,-81,-57,-82,-86,-76,-87,]),'PROC':([68,],[128,]),'FI':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,87,98,106,107,108,110,111,172,174,185,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,216,233,239,242,246,248,278,280,281,290,305,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,-113,-115,-105,-106,-111,-135,193,-162,-116,-170,-78,-134,247,-137,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-112,-59,-161,-169,280,-75,-136,305,-81,-85,-57,-82,-76,]),'LBRACKET':([5,9,15,23,25,36,42,45,46,47,50,52,53,54,56,58,60,61,62,64,66,72,108,160,163,172,185,190,216,233,239,246,266,290,307,],[76,-56,-17,-60,-159,-160,76,-65,105,-56,-67,-73,-74,-60,-69,-77,-72,-68,-70,-66,-71,-58,76,225,226,-162,-170,-78,-59,-161,-169,-75,-56,-57,-76,]),'CHARS':([15,80,82,85,148,169,224,250,297,313,333,],[-17,-15,160,160,160,160,-16,160,160,160,160,]),'AND':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,120,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,120,-101,-95,-91,120,-89,120,-97,-92,-99,-98,-93,120,-59,-161,-169,-75,-56,-57,-76,]),'NULL':([1,11,39,41,48,49,55,70,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[52,52,52,52,52,52,52,-131,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-128,-130,-129,-126,-125,-127,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LT':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,117,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,117,-101,-95,117,117,117,117,-97,117,-99,-98,-93,117,-59,-161,-169,-75,-56,-57,-76,]),'LENGTH':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[20,20,-5,20,-8,-6,-4,-2,20,-7,20,20,20,20,20,20,20,20,-131,20,20,-113,-3,20,20,-115,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-128,-130,-129,-126,-125,-127,-18,20,-9,-24,-116,20,20,20,20,20,-112,-179,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'DOWN':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,106,107,108,172,180,181,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,270,271,272,280,290,302,305,307,321,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,-105,-106,-111,-162,-151,235,-170,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,-155,-152,299,-81,-57,324,-82,-76,-153,]),'SCONST':([1,11,39,41,48,49,55,70,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[53,53,53,53,53,53,53,-131,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-128,-130,-129,-126,-125,-127,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LOC':([15,144,145,146,147,149,150,151,152,153,155,156,159,161,162,219,285,291,293,294,319,320,340,],[-17,-30,-33,-35,-46,-45,-41,-29,-28,-31,-34,-38,-32,-36,-37,-44,311,-40,-39,-47,-55,-49,-50,]),'$end':([3,10,12,13,16,17,21,22,87,89,141,164,167,212,213,],[0,-5,-8,-6,-4,-2,-1,-7,-113,-3,-18,-9,-24,-112,-179,]),'BOOL':([15,80,82,85,148,169,224,226,236,250,273,296,297,313,332,333,],[-17,-15,162,162,162,162,-16,162,162,162,162,162,162,162,162,162,]),'PRINT':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[2,2,-5,2,-8,-6,-4,-2,2,-7,2,2,2,2,2,2,2,2,-131,2,2,-113,-3,2,2,-115,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-128,-130,-129,-126,-125,-127,-18,2,-9,-24,-116,2,2,2,2,2,-112,-179,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'READ':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[38,38,-5,38,-8,-6,-4,-2,38,-7,38,38,38,38,38,38,38,38,-131,38,38,-113,-3,38,38,-115,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-128,-130,-129,-126,-125,-127,-18,38,-9,-24,-116,38,38,38,38,38,-112,-179,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DIVIDE':([5,9,15,23,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[69,-56,-17,-60,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,113,-58,-105,-106,-111,-162,-170,-78,113,-100,113,113,-101,113,113,113,113,113,113,113,-99,113,113,113,-59,-161,-169,-75,-56,-57,-76,]),'LPAREN':([1,2,8,9,11,15,20,26,29,31,35,37,38,39,40,41,47,48,49,55,70,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,132,133,134,139,140,145,146,150,151,154,155,156,157,159,161,162,187,214,215,218,220,221,226,228,232,234,241,243,245,264,265,266,274,275,277,288,291,292,293,295,296,301,303,332,],[55,-178,-174,-42,55,-17,-176,-171,93,-175,102,-173,-177,55,-172,55,-42,55,55,55,-131,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,211,-128,-130,-129,-126,-125,-127,-33,-35,-42,220,221,-34,-38,55,-32,-36,-37,55,55,55,55,55,55,55,55,55,55,55,55,55,295,220,-42,220,-42,55,313,-40,55,-39,55,55,55,220,55,]),'ICONST':([1,11,39,41,48,49,55,70,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,187,214,215,218,220,221,225,226,228,232,234,241,243,245,277,292,295,296,298,301,332,],[56,56,56,56,56,56,56,-131,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-128,-130,-129,-126,-125,-127,56,56,56,56,56,56,56,262,56,56,56,56,56,56,56,56,56,56,56,321,56,56,]),'TO':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,270,271,272,280,290,299,302,305,307,321,324,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,-155,-152,301,-81,-57,301,301,-82,-76,-153,301,]),'MOD':([5,9,15,23,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[73,-56,-17,-60,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,116,-58,-105,-106,-111,-162,-170,-78,116,-100,116,116,-101,116,116,116,116,116,116,116,-99,116,116,116,-59,-161,-169,-75,-56,-57,-76,]),'INT':([15,80,82,85,148,169,224,226,236,250,273,296,297,313,332,333,],[-17,-15,161,161,161,161,-16,161,161,161,161,161,161,161,161,161,]),'THEN':([15,25,36,42,43,44,45,47,50,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,72,104,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,279,280,290,304,305,307,],[-17,-159,-160,-108,-88,-83,-65,-56,-67,-73,-74,-60,-69,-80,-110,110,-72,-68,-70,-107,-66,-109,-71,-79,-58,187,-105,-106,-111,-162,-170,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,187,-81,-57,187,-82,-76,]),'CCONST':([1,11,39,41,48,49,55,70,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[60,60,60,60,60,60,60,-131,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-128,-130,-129,-126,-125,-127,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'TYPE':([0,10,12,13,16,17,21,22,87,89,141,164,167,212,213,287,309,312,314,327,328,331,336,],[27,-5,-8,-6,-4,-2,27,-7,-113,-3,-18,-9,-24,-112,-179,27,27,27,27,27,27,27,27,]),'EQ':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,118,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,118,-101,-95,-91,118,118,118,-97,-92,-99,-98,-93,118,-59,-161,-169,-75,-56,-57,-76,]),'NUM':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[26,26,-5,26,-8,-6,-4,-2,26,-7,26,26,26,26,26,26,26,26,-131,26,26,-113,-3,26,26,-115,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-128,-130,-129,-126,-125,-127,-18,26,-9,-24,-116,26,26,26,26,26,-112,-179,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'END':([10,12,13,16,17,22,87,89,141,164,167,212,213,312,327,331,336,],[-5,-8,-6,-4,-2,-7,-113,-3,-18,-9,-24,-112,-179,329,335,338,341,]),'NEQ':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,123,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,123,-101,-95,-91,123,123,123,-97,-92,-99,-98,-93,123,-59,-161,-169,-75,-56,-57,-76,]),'DO':([0,10,12,13,16,17,21,22,32,68,87,89,94,98,110,141,164,167,174,175,183,191,194,212,213,237,248,287,309,312,314,327,328,331,336,],[32,-5,-8,-6,-4,-2,32,-7,32,32,-113,-3,32,-115,32,-18,-9,-24,-116,32,32,32,32,-112,-179,32,32,32,32,32,32,32,32,32,32,]),'CHAR':([15,80,82,85,148,169,224,226,236,250,273,296,297,313,332,333,],[-17,-15,156,156,156,156,-16,156,156,156,156,156,156,156,156,156,]),'BY':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,270,271,272,280,290,305,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,-155,-152,298,-81,-57,-82,-76,]),'LE':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,114,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,114,-101,-95,114,114,114,114,-97,114,-99,-98,-93,114,-59,-161,-169,-75,-56,-57,-76,]),'CONCAT':([5,9,15,23,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[71,-56,-17,-60,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,115,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,-56,-57,-76,]),'COMMA':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,79,80,81,82,83,84,85,90,91,92,106,107,108,136,138,144,145,146,147,149,150,151,152,153,155,156,159,161,162,166,170,171,172,184,185,188,189,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,217,219,222,223,224,227,229,230,231,233,239,246,249,250,251,253,255,256,263,265,267,268,269,280,285,286,290,291,293,294,305,307,308,311,315,316,317,318,319,320,339,340,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,142,-15,-19,158,165,-10,158,-25,168,158,-105,-106,-111,-63,215,-30,-33,-35,-46,-45,-41,-29,-28,-31,-34,-38,-32,-36,-37,-13,232,-163,-162,232,-170,-63,215,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-20,-44,-22,-23,-16,-11,-12,-26,-27,-161,-169,-75,283,158,-184,-62,-64,-21,-54,-53,296,-14,-164,-81,-189,-186,-57,-40,-39,-47,-82,-76,-185,-188,-43,-163,-51,332,-55,-49,-52,-50,]),'RPAREN':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,93,102,106,107,108,109,144,145,146,147,149,150,151,152,153,155,156,159,161,162,170,171,172,184,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,219,233,239,246,249,251,253,257,260,269,280,285,286,290,291,293,294,295,305,307,308,311,315,316,319,320,330,340,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,172,185,-105,-106,-111,190,-30,-33,-35,-46,-45,-41,-29,-28,-31,-34,-38,-32,-36,-37,233,-163,-162,239,-170,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,252,-59,-44,-161,-169,-75,284,-184,-62,291,293,-164,-81,-189,-186,-57,-40,-39,-47,172,-82,-76,-185,-188,-43,-163,-55,-49,337,-50,]),'ELSE':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,87,98,106,107,108,110,111,172,174,185,186,190,191,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,216,233,239,240,244,246,280,290,305,306,307,326,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,-113,-115,-105,-106,-111,-135,194,-162,-116,-170,243,-78,-134,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-112,-59,-161,-169,243,-84,-75,-81,-57,-82,-86,-76,-87,]),'TRUE':([1,11,39,41,48,49,55,70,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[66,66,66,66,66,66,66,-131,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-128,-130,-129,-126,-125,-127,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RESULT':([0,10,12,13,16,17,21,22,32,68,87,89,94,98,110,141,164,167,174,175,183,191,194,212,213,237,248,287,309,312,314,327,328,331,336,],[39,-5,-8,-6,-4,-2,39,-7,39,39,-113,-3,39,-115,39,-18,-9,-24,-116,39,39,39,39,-112,-179,39,39,39,39,39,39,39,39,39,39,]),'SUCC':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[37,37,-5,37,-8,-6,-4,-2,37,-7,37,37,37,37,37,37,37,37,-131,37,37,-113,-3,37,37,-115,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-128,-130,-129,-126,-125,-127,-18,37,-9,-24,-116,37,37,37,37,37,-112,-179,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'COLON':([4,9,15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,95,106,107,108,136,137,172,185,188,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,258,259,266,280,290,305,307,316,],[68,-114,-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,175,-105,-106,-111,-61,214,-162,-170,245,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,-61,292,-56,-81,-57,-82,-76,-61,]),'GE':([15,25,36,42,43,45,47,50,52,53,54,56,58,60,61,62,63,64,65,66,67,72,106,107,108,172,185,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,266,290,307,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-110,-72,-68,-70,-107,-66,-109,-71,112,-58,-105,-106,-111,-162,-170,-78,-94,-100,-96,112,-101,-95,112,112,112,112,-97,112,-99,-98,-93,112,-59,-161,-169,-75,-56,-57,-76,]),'RBRACKET':([15,25,36,42,43,45,47,50,52,53,54,56,57,58,60,61,62,63,64,65,66,67,72,106,107,108,136,138,145,146,155,156,159,161,162,172,185,188,189,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,233,239,246,253,254,255,261,262,263,265,267,280,282,290,291,293,305,307,315,317,318,339,],[-17,-159,-160,-108,-88,-65,-56,-67,-73,-74,-60,-69,-80,-110,-72,-68,-70,-107,-66,-109,-71,-79,-58,-105,-106,-111,-63,216,-33,-35,-34,-38,-32,-36,-37,-162,-170,-63,246,-78,-94,-100,-96,-104,-101,-95,-91,-90,-89,-103,-97,-92,-99,-98,-93,-102,-59,-161,-169,-75,-62,290,-64,294,-48,-54,-53,297,-81,307,-57,-40,-39,-82,-76,-43,-51,333,-52,]),'PRED':([0,1,10,11,12,13,16,17,21,22,32,39,41,48,49,51,55,68,70,75,76,87,89,93,94,98,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,139,140,141,157,164,167,174,175,183,187,191,194,212,213,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[40,40,-5,40,-8,-6,-4,-2,40,-7,40,40,40,40,40,40,40,40,-131,40,40,-113,-3,40,40,-115,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-128,-130,-129,-126,-125,-127,-18,40,-9,-24,-116,40,40,40,40,40,-112,-179,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ARRAY':([15,80,82,85,148,169,224,250,297,313,333,],[-17,-15,163,163,163,163,-16,163,163,163,163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([93,102,295,],[170,184,170,]),'program':([0,],[3,]),'result_spec':([252,284,],[289,310,]),'literal_range':([220,221,226,295,296,332,],[257,260,263,260,263,263,]),'string_mode':([82,85,148,169,250,297,313,333,],[149,149,149,149,149,149,149,149,]),'assigning_operator':([5,],[75,]),'discrete_mode_name':([0,1,11,21,32,39,41,48,49,51,55,68,75,76,82,85,93,94,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,148,157,169,175,183,187,191,194,214,215,218,220,221,226,228,232,234,236,237,241,243,245,248,250,273,277,287,292,295,296,297,301,309,312,313,314,327,328,331,332,333,336,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,154,154,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,154,29,154,29,29,29,29,29,29,29,29,29,29,264,29,29,29,154,29,29,29,29,29,154,154,29,29,29,29,264,154,29,29,29,154,29,29,29,29,264,154,29,]),'expression':([1,11,39,41,55,75,76,93,99,102,105,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[44,86,103,44,109,135,136,171,44,171,188,223,244,253,255,223,258,258,258,268,269,270,44,281,282,44,253,316,258,270,258,]),'iteration':([100,],[178,]),'discrete_mode':([82,85,148,169,226,236,250,273,296,297,313,332,333,],[151,151,151,151,265,274,151,303,265,151,151,265,151,]),'end_value':([272,299,302,324,],[300,322,325,334,]),'declaration':([7,165,],[84,227,]),'synonym_statement':([0,21,287,309,312,314,327,328,331,336,],[10,10,10,10,10,10,10,10,10,10,]),'boolean_expression':([1,41,99,241,277,],[59,104,177,279,304,]),'integer_mode':([82,85,148,169,226,236,250,273,296,297,313,332,333,],[159,159,159,159,159,159,159,159,159,159,159,159,159,]),'discrete_expression':([234,301,],[271,323,]),'formal_parameter_list':([211,],[249,]),'statement':([0,21,287,309,312,314,327,328,331,336,],[17,89,17,17,89,17,89,17,89,89,]),'start_value':([234,],[272,]),'action_statement':([0,21,32,94,110,183,191,194,237,248,287,309,312,314,327,328,331,336,],[12,12,98,174,98,98,174,98,174,174,12,12,12,12,12,12,12,12,]),'boolean_mode':([82,85,148,169,226,236,250,273,296,297,313,332,333,],[145,145,145,145,145,145,145,145,145,145,145,145,145,]),'discrete_range_mode':([82,85,148,169,226,236,250,273,296,297,313,332,333,],[146,146,146,146,146,146,146,146,146,146,146,146,146,]),'mode':([82,85,148,169,250,297,313,333,],[143,166,219,231,285,319,285,319,]),'exit_action':([0,21,32,68,94,110,175,183,191,194,237,248,287,309,312,314,327,328,331,336,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'procedure_call':([0,1,11,21,32,39,41,48,49,51,55,68,75,76,93,94,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,175,183,187,191,194,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'reference_mode':([82,85,148,169,250,297,313,333,],[144,144,144,144,144,144,144,144,]),'conditional_expression':([1,11,39,41,55,75,76,93,99,102,105,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'primitive_value':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'procedure_definition':([68,],[130,]),'step_value':([272,],[302,]),'composite_mode':([82,85,148,169,250,297,313,333,],[153,153,153,153,153,153,153,153,]),'result_action':([0,21,32,68,94,110,175,183,191,194,237,248,287,309,312,314,327,328,331,336,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'upper_bound':([214,292,],[254,315,]),'value_array_element':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'string_length':([225,],[261,]),'parameter_spec':([250,313,],[286,330,]),'parenthesized_expression':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'referenced_location':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'loop_counter':([100,],[181,]),'builtin_call':([0,1,11,21,32,39,41,48,49,51,55,68,75,76,93,94,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,175,183,187,191,194,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'declaration_statement':([0,21,287,309,312,314,327,328,331,336,],[16,16,16,16,16,16,16,16,16,16,]),'mode_definition':([27,168,],[90,230,]),'expression_list':([76,105,],[138,189,]),'synonym_definition':([6,142,],[81,217,]),'range_enumeration':([100,],[182,]),'element_mode':([297,333,],[320,340,]),'action_statement_list':([32,110,183,194,],[94,191,237,248,]),'synonym_list':([6,],[79,]),'label_id':([0,21,32,94,110,183,191,194,237,248,287,309,312,314,327,328,331,336,],[4,4,95,95,95,95,95,95,95,95,4,4,4,4,4,4,4,4,]),'while_control':([32,97,],[96,176,]),'location':([0,1,11,21,32,39,41,48,49,51,55,68,75,76,93,94,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,175,183,187,191,194,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[5,42,42,5,5,42,42,42,42,108,42,5,42,42,42,5,42,42,42,5,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,5,5,42,5,5,42,42,42,42,42,42,42,42,42,5,42,42,42,5,42,5,42,42,42,42,5,5,5,5,5,5,42,5,]),'constant_expression':([157,218,],[222,256,]),'operand':([1,11,39,41,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'elsif_expression':([186,],[240,]),'literal':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'identifier':([0,1,6,7,11,19,21,27,32,39,41,48,49,51,55,68,75,76,82,85,93,94,99,100,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,142,148,157,158,165,168,169,175,183,187,191,194,211,214,215,218,220,221,226,228,232,234,236,237,241,243,245,248,250,273,277,283,287,292,295,296,297,301,309,312,313,314,327,328,331,332,333,336,],[9,47,80,80,47,88,9,80,9,47,47,47,47,47,47,47,47,47,150,150,47,9,47,180,47,47,9,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,80,150,47,224,80,80,150,47,9,47,9,9,80,47,47,47,47,47,266,47,47,47,275,9,47,47,47,9,150,275,47,80,9,47,47,266,150,47,9,9,150,9,9,9,9,266,150,9,]),'array_primitive_value':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'index_mode_list':([296,],[318,]),'value_array_slice':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'index_mode':([226,296,332,],[267,317,339,]),'for_control':([32,],[97,]),'assignment_action':([0,21,32,68,94,110,175,183,191,194,237,248,287,309,312,314,327,328,331,336,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'then_clause':([59,],[111,]),'binop':([1,11,39,41,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[67,67,67,67,67,67,67,67,67,67,67,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'formal_parameter':([211,283,],[251,308,]),'action':([0,21,32,68,94,110,175,183,191,194,237,248,287,309,312,314,327,328,331,336,],[18,18,18,129,18,18,129,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'else_clause':([111,],[192,]),'operand1':([1,11,39,41,48,49,55,75,76,93,99,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,187,214,215,218,220,221,226,228,232,234,241,243,245,277,292,295,296,301,332,],[63,63,63,63,106,107,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'statement_list':([0,287,309,314,328,],[21,312,327,331,336,]),'procedure_statement':([0,21,287,309,312,314,327,328,331,336,],[22,22,22,22,22,22,22,22,22,22,]),'call_action':([0,1,11,21,32,39,41,48,49,51,55,68,75,76,93,94,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,175,183,187,191,194,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[23,54,54,23,23,54,54,54,54,54,54,23,54,54,54,23,54,54,54,23,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,23,23,54,23,23,54,54,54,54,54,54,54,54,54,23,54,54,54,23,54,23,54,54,54,54,23,23,23,23,23,23,54,23,]),'array_mode':([82,85,148,169,250,297,313,333,],[147,147,147,147,147,147,147,147,]),'declaration_list':([7,],[83,]),'step_enumeration':([100,],[179,]),'newmode_list':([27,],[91,]),'mode_name':([82,85,148,169,250,297,313,333,],[152,152,152,152,152,152,152,152,]),'newmode_statement':([0,21,287,309,312,314,327,328,331,336,],[13,13,13,13,13,13,13,13,13,13,]),'lower_bound':([76,220,221,226,295,296,332,],[137,259,259,259,259,259,259,]),'initialization':([166,],[229,]),'character_mode':([82,85,148,169,226,236,250,273,296,297,313,332,333,],[155,155,155,155,155,155,155,155,155,155,155,155,155,]),'then_expression':([104,279,304,],[186,306,326,]),'return_action':([0,21,32,68,94,110,175,183,191,194,237,248,287,309,312,314,327,328,331,336,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'if_action':([0,21,32,68,94,110,175,183,191,194,237,248,287,309,312,314,327,328,331,336,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'identifier_list':([6,7,27,142,165,168,211,283,],[82,85,92,82,85,92,250,250,]),'builtin_name':([0,1,11,21,32,39,41,48,49,51,55,68,75,76,93,94,99,102,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,157,175,183,187,191,194,214,215,218,220,221,226,228,232,234,237,241,243,245,248,277,287,292,295,296,301,309,312,314,327,328,331,332,336,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'control_part':([32,],[101,]),'else_expression':([186,240,],[242,278,]),'do_action':([0,21,32,68,94,110,175,183,191,194,237,248,287,309,312,314,327,328,331,336,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lyaparser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lyaparser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lyaparser.py',35),
  ('statement -> declaration_statement','statement',1,'p_statement','lyaparser.py',44),
  ('statement -> synonym_statement','statement',1,'p_statement','lyaparser.py',45),
  ('statement -> newmode_statement','statement',1,'p_statement','lyaparser.py',46),
  ('statement -> procedure_statement','statement',1,'p_statement','lyaparser.py',47),
  ('statement -> action_statement','statement',1,'p_statement','lyaparser.py',48),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','lyaparser.py',55),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lyaparser.py',63),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','lyaparser.py',64),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','lyaparser.py',69),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','lyaparser.py',70),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','lyaparser.py',75),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','lyaparser.py',79),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','lyaparser.py',80),
  ('identifier -> ID','identifier',1,'p_identifier','lyaparser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','lyaparser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','lyaparser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','lyaparser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','lyaparser.py',105),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','lyaparser.py',106),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','lyaparser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','lyaparser.py',120),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','lyaparser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','lyaparser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','lyaparser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','lyaparser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','lyaparser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','lyaparser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','lyaparser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','lyaparser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','lyaparser.py',156),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','lyaparser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','lyaparser.py',164),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','lyaparser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','lyaparser.py',174),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','lyaparser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','lyaparser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','lyaparser.py',186),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','lyaparser.py',190),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','lyaparser.py',191),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','lyaparser.py',196),
  ('string_length -> ICONST','string_length',1,'p_string_length','lyaparser.py',200),
  ('array_mode -> ARRAY LBRACKET index_mode RBRACKET element_mode','array_mode',5,'p_array_mode','lyaparser.py',204),
  ('array_mode -> ARRAY LBRACKET index_mode COMMA index_mode_list RBRACKET element_mode','array_mode',7,'p_array_mode','lyaparser.py',205),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','lyaparser.py',213),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','lyaparser.py',214),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','lyaparser.py',219),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','lyaparser.py',220),
  ('element_mode -> mode','element_mode',1,'p_element_mode','lyaparser.py',225),
  ('location -> identifier','location',1,'p_location','lyaparser.py',232),
  ('location -> location LBRACKET lower_bound COLON upper_bound RBRACKET','location',6,'p_location','lyaparser.py',233),
  ('location -> location ARROW','location',2,'p_location','lyaparser.py',234),
  ('location -> location LBRACKET expression_list RBRACKET','location',4,'p_location','lyaparser.py',235),
  ('location -> call_action','location',1,'p_location','lyaparser.py',236),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','lyaparser.py',248),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','lyaparser.py',252),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lyaparser.py',256),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','lyaparser.py',257),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','lyaparser.py',265),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','lyaparser.py',266),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','lyaparser.py',267),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','lyaparser.py',268),
  ('literal -> ICONST','literal',1,'p_literal','lyaparser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','lyaparser.py',274),
  ('literal -> TRUE','literal',1,'p_literal','lyaparser.py',275),
  ('literal -> CCONST','literal',1,'p_literal','lyaparser.py',276),
  ('literal -> NULL','literal',1,'p_literal','lyaparser.py',277),
  ('literal -> SCONST','literal',1,'p_literal','lyaparser.py',278),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','lyaparser.py',294),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','lyaparser.py',299),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','lyaparser.py',304),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','lyaparser.py',309),
  ('expression -> binop','expression',1,'p_expression','lyaparser.py',314),
  ('expression -> conditional_expression','expression',1,'p_expression','lyaparser.py',315),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','lyaparser.py',320),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','lyaparser.py',321),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','lyaparser.py',329),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','lyaparser.py',334),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','lyaparser.py',339),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','lyaparser.py',344),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','lyaparser.py',345),
  ('binop -> operand','binop',1,'p_binop','lyaparser.py',363),
  ('binop -> binop AND binop','binop',3,'p_binop','lyaparser.py',364),
  ('binop -> binop OR binop','binop',3,'p_binop','lyaparser.py',365),
  ('binop -> binop EQ binop','binop',3,'p_binop','lyaparser.py',366),
  ('binop -> binop NEQ binop','binop',3,'p_binop','lyaparser.py',367),
  ('binop -> binop GT binop','binop',3,'p_binop','lyaparser.py',368),
  ('binop -> binop GE binop','binop',3,'p_binop','lyaparser.py',369),
  ('binop -> binop LT binop','binop',3,'p_binop','lyaparser.py',370),
  ('binop -> binop LE binop','binop',3,'p_binop','lyaparser.py',371),
  ('binop -> binop PLUS binop','binop',3,'p_binop','lyaparser.py',372),
  ('binop -> binop MINUS binop','binop',3,'p_binop','lyaparser.py',373),
  ('binop -> binop TIMES binop','binop',3,'p_binop','lyaparser.py',374),
  ('binop -> binop DIVIDE binop','binop',3,'p_binop','lyaparser.py',375),
  ('binop -> binop MOD binop','binop',3,'p_binop','lyaparser.py',376),
  ('binop -> binop NOT binop','binop',3,'p_binop','lyaparser.py',377),
  ('binop -> binop IN binop','binop',3,'p_binop','lyaparser.py',378),
  ('binop -> binop CONCAT binop','binop',3,'p_binop','lyaparser.py',379),
  ('operand -> MINUS operand1','operand',2,'p_operand','lyaparser.py',387),
  ('operand -> NOT operand1','operand',2,'p_operand','lyaparser.py',388),
  ('operand -> operand1','operand',1,'p_operand','lyaparser.py',389),
  ('operand1 -> location','operand1',1,'p_operand1','lyaparser.py',397),
  ('operand1 -> referenced_location','operand1',1,'p_operand1','lyaparser.py',398),
  ('operand1 -> primitive_value','operand1',1,'p_operand1','lyaparser.py',399),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','lyaparser.py',404),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','lyaparser.py',410),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','lyaparser.py',411),
  ('label_id -> identifier','label_id',1,'p_label_id','lyaparser.py',419),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','lyaparser.py',424),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','lyaparser.py',425),
  ('action -> if_action','action',1,'p_action','lyaparser.py',433),
  ('action -> do_action','action',1,'p_action','lyaparser.py',434),
  ('action -> assignment_action','action',1,'p_action','lyaparser.py',435),
  ('action -> call_action','action',1,'p_action','lyaparser.py',436),
  ('action -> exit_action','action',1,'p_action','lyaparser.py',437),
  ('action -> return_action','action',1,'p_action','lyaparser.py',438),
  ('action -> result_action','action',1,'p_action','lyaparser.py',439),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','lyaparser.py',444),
  ('assigning_operator -> PLUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',449),
  ('assigning_operator -> MINUS ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',450),
  ('assigning_operator -> TIMES ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',451),
  ('assigning_operator -> DIVIDE ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',452),
  ('assigning_operator -> MOD ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',453),
  ('assigning_operator -> CONCAT ASSIGN','assigning_operator',2,'p_assigning_operator','lyaparser.py',454),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','lyaparser.py',455),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','lyaparser.py',462),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','lyaparser.py',463),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','lyaparser.py',471),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','lyaparser.py',472),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','lyaparser.py',480),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','lyaparser.py',481),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','lyaparser.py',490),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','lyaparser.py',491),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','lyaparser.py',492),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','lyaparser.py',502),
  ('control_part -> for_control','control_part',1,'p_control_part','lyaparser.py',503),
  ('control_part -> while_control','control_part',1,'p_control_part','lyaparser.py',504),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','lyaparser.py',514),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','lyaparser.py',519),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','lyaparser.py',520),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','lyaparser.py',525),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',526),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','lyaparser.py',527),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','lyaparser.py',528),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','lyaparser.py',540),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','lyaparser.py',545),
  ('step_value -> BY ICONST','step_value',2,'p_step_value','lyaparser.py',550),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','lyaparser.py',555),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','lyaparser.py',560),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','lyaparser.py',565),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','lyaparser.py',566),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','lyaparser.py',574),
  ('call_action -> procedure_call','call_action',1,'p_call_action','lyaparser.py',580),
  ('call_action -> builtin_call','call_action',1,'p_call_action','lyaparser.py',581),
  ('procedure_call -> discrete_mode_name LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','lyaparser.py',586),
  ('procedure_call -> discrete_mode_name LPAREN RPAREN','procedure_call',3,'p_procedure_call','lyaparser.py',587),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lyaparser.py',595),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lyaparser.py',596),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','lyaparser.py',607),
  ('return_action -> RETURN expression','return_action',2,'p_return_action','lyaparser.py',611),
  ('return_action -> RETURN','return_action',1,'p_return_action','lyaparser.py',612),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','lyaparser.py',620),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','lyaparser.py',624),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','lyaparser.py',625),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','lyaparser.py',633),
  ('builtin_name -> PRED','builtin_name',1,'p_builtin_name','lyaparser.py',634),
  ('builtin_name -> SUCC','builtin_name',1,'p_builtin_name','lyaparser.py',635),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','lyaparser.py',636),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','lyaparser.py',637),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','lyaparser.py',638),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','lyaparser.py',639),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','lyaparser.py',640),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','lyaparser.py',647),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','lyaparser.py',651),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',652),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','lyaparser.py',653),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','lyaparser.py',654),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','lyaparser.py',667),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','lyaparser.py',668),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','lyaparser.py',677),
  ('result_spec -> RETURNS LPAREN parameter_spec RPAREN','result_spec',4,'p_result_spec','lyaparser.py',681),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','lyaparser.py',685),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','lyaparser.py',686),
]
