/*
i - 0
j - 1
r - 2
x - 3
y - 4
*/

dcl i,j int, r ref int;

p: proc(x int, y ref int) returns (int); //label 1
  dcl b bool;
  read(b);
  if b then
     y = -> i;
     result y->;
  else //label 4
     y = r;
     result r->;
  fi;//label 5
  //label 2  
end;//label 3

read(i);
r = -> i;
print(p(i,->j)); 

/*

[
  ('stp'),
  ('alc', 3),
  
  ('jmp', 3),
  
  ('lbl', 1),
  ('enf', 1),
  ('alc', 1),
  
  read
  ('rdv'),
  
  if
  ('stv', 1, 0),
  ('ldv', 1, 0),
  ('jof', 4),
  ('ldr', 0, 0),
  ('stv', 1, -4),
  ('lrv', 1, -4),
  ('stv', 1, -5),
  ('jmp', 5),
  
  else
  ('lbl', 4),
  ('ldv', 0, 2),
  ('stv', 1, -4),
  ('lrv', 0, 2),
  ('stv', 1, -5),
  
  fi
  ('lbl', 5),
  ?
  ('lbl', 2),
  ('dlc', 1),
  ('ret', 1, 2), ???????
  end
  ('lbl', 3),
  
  read
  ('rdv'),
  ('stv', 0, 0),

  r = -> i;
  ('ldr', 0, 0),
  ('stv', 0, 2),
  
  ('alc', 1), ??????
  ('ldr', 0, 1),
  ('ldv', 0, 0),
  ('cfu', 1),
  ('prv'),
  ('dlc', 3),
  ('end'),
]

'''
Scope level for ProcStmt p: 1
  formal parameters & their offsets
  x : -3
  _ret : -5
  y : -4
  variables & their offsets
  b : 0
  constants & their values
  new types & their raw types
  functions, return types & labels
'''
'''
Scope level for Program : 0
  variables & their offsets
  r : 2
  i : 0
  j : 1
  constants & their values
  new types & their raw types
  functions, return types & labels
  p : int, labels start=1, end=3
'''
*/
