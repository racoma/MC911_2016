1,197d0
< Program: 
<   StmtList: 
<     DclStmt: 
<       Decl: 
<         ID: v (at line: 3)
<         Mode: 
<           ArrayMode: 
<             Range: 
<               Expr: 
<                 Constant: 0, int (at line: 3)
<               Expr: 
<                 Constant: 100, int (at line: 3)
<             Mode: 
<               DiscreteMode: int (at line: 3)
<     DclStmt: 
<       Decl: 
<         ID: n (at line: 4)
<         ID: c (at line: 4)
<         ID: d (at line: 4)
<         ID: swap (at line: 4)
<         Mode: 
<           DiscreteMode: int (at line: 4)
<     ActionStmt: 
<       Call: 
<         Func: print
<         Param: 
<           Expr: 
<             Constant: "Enter number of elements: ", string (at line: 5)
<     ActionStmt: 
<       Call: 
<         Func: read
<         Param: 
<           Expr: 
<             ID: n (at line: 6)
<     ActionStmt: 
<       Call: 
<         Func: print
<         Param: 
<           Expr: 
<             Constant: "Enter ", string (at line: 7)
<           Expr: 
<             ID: n (at line: 7)
<           Expr: 
<             Constant: " integers\n", string (at line: 7)
<     ActionStmt: 
<       DoAction: 
<         Control: 
<           ForControl: 
<             StepEnum: =
<               ID: c (at line: 9)
<               Expr: 
<                 Constant: 0, int (at line: 9)
<               Expr: 
<                 Binop: - (at line: 9)
<                   ID: n (at line: 9)
<                   Constant: 1, int (at line: 9)
<         ActionStmt: 
<           Call: 
<             Func: read
<             Param: 
<               Expr: 
<                 Array: 
<                   ID: v (at line: 10)
<                   Expr: 
<                     ID: c (at line: 10)
<     ActionStmt: 
<       DoAction: 
<         Control: 
<           ForControl: 
<             StepEnum: =
<               ID: c (at line: 13)
<               Expr: 
<                 Constant: 0, int (at line: 13)
<               Expr: 
<                 Binop: - (at line: 13)
<                   ID: n (at line: 13)
<                   Constant: 2, int (at line: 13)
<         ActionStmt: 
<           DoAction: 
<             Control: 
<               ForControl: 
<                 StepEnum: =
<                   ID: d (at line: 15)
<                   Expr: 
<                     Constant: 0, int (at line: 15)
<                   Expr: 
<                     Binop: - (at line: 15)
<                       Binop: - (at line: 15)
<                         ID: n (at line: 15)
<                         ID: c (at line: 15)
<                       Constant: 2, int (at line: 15)
<             ActionStmt: 
<               IfAction: 
<                 BoolExpr: 
<                   Expr: 
<                     Binop: > (at line: 17)
<                       Array: 
<                         ID: v (at line: 17)
<                         Expr: 
<                           ID: d (at line: 17)
<                       Array: 
<                         ID: v (at line: 17)
<                         Expr: 
<                           Binop: + (at line: 17)
<                             ID: d (at line: 17)
<                             Constant: 1, int (at line: 17)
<                 ThenClause: 
<                   ActionStmt: 
<                     Assignment: =
<                       ID: swap (at line: 18)
<                       Expr: 
<                         Array: 
<                           ID: v (at line: 18)
<                           Expr: 
<                             ID: d (at line: 18)
<                   ActionStmt: 
<                     Assignment: =
<                       Array: 
<                         ID: v (at line: 19)
<                         Expr: 
<                           ID: d (at line: 19)
<                       Expr: 
<                         Array: 
<                           ID: v (at line: 19)
<                           Expr: 
<                             Binop: + (at line: 19)
<                               ID: d (at line: 19)
<                               Constant: 1, int (at line: 19)
<                   ActionStmt: 
<                     Assignment: =
<                       Array: 
<                         ID: v (at line: 20)
<                         Expr: 
<                           Binop: + (at line: 20)
<                             ID: d (at line: 20)
<                             Constant: 1, int (at line: 20)
<                       Expr: 
<                         ID: swap (at line: 20)
<     ActionStmt: 
<       Call: 
<         Func: print
<         Param: 
<           Expr: 
<             Constant: "Sorted list in ascending order:\n", string (at line: 24)
<     ActionStmt: 
<       DoAction: 
<         Control: 
<           ForControl: 
<             StepEnum: =
<               ID: c (at line: 26)
<               Expr: 
<                 Constant: 0, int (at line: 26)
<               Expr: 
<                 Binop: - (at line: 26)
<                   ID: n (at line: 26)
<                   Constant: 1, int (at line: 26)
<         ActionStmt: 
<           Call: 
<             Func: print
<             Param: 
<               Expr: 
<                 Array: 
<                   ID: v (at line: 27)
<                   Expr: 
<                     ID: c (at line: 27)
<               Expr: 
<                 Constant: " ", string (at line: 27)
< <lyasem.ExprType object at 0x101c09d30>
< <lyasem.ExprType object at 0x101c09d30>
< <lyasem.ExprType object at 0x101c09d30>
< <lyasem.ExprType object at 0x101c09d30>
< <lyasem.ExprType object at 0x101c09d30>
< <lyasem.ExprType object at 0x101c09d30>
< <lyaparser.ID object at 0x101d49d30>
< <lyasem.ExprType object at 0x101c09d30>
< <lyaparser.Array object at 0x101d49278>
< <lyasem.ExprType object at 0x101c09d30>
< <lyaparser.Array object at 0x10364d240>
< <lyasem.ExprType object at 0x101c09d30>
< true
< <lyasem.ExprType object at 0x101c09d30>
< true
< <lyasem.ExprType object at 0x101c09d30>
< true
< <lyasem.ExprType object at 0x101c09d30>
< true
< true
< <lyasem.ExprType object at 0x101c09d30>
< true
< <lyasem.ExprType object at 0x101c09d30>
< true
< <lyasem.ExprType object at 0x101c09d30>
< <lyasem.ExprType object at 0x101c09d30>
< <lyasem.ExprType object at 0x101c09d30>
< true
< <lyasem.ExprType object at 0x101c09d30>
< Program {'swap': {'scope': 0, 'node': <lyaparser.Decl object at 0x103654438>, 'type': None, 'number': 104}, 'v': {'scope': 0, 'node': <lyaparser.Decl object at 0x1036544e0>, 'type': 'array', 'number': 0}, 'string': <lyasem.ExprType object at 0x101c09e10>, 'int': <lyasem.ExprType object at 0x101c09d30>, 'bool': <lyasem.ExprType object at 0x101c60550>, 'c': {'scope': 0, 'node': <lyaparser.Decl object at 0x103654438>, 'type': None, 'number': 102}, 'd': {'scope': 0, 'node': <lyaparser.Decl object at 0x103654438>, 'type': None, 'number': 103}, 'char': <lyasem.ExprType object at 0x101c09da0>, 'n': {'scope': 0, 'node': <lyaparser.Decl object at 0x103654438>, 'type': None, 'number': 101}}
201,202c4
<     ('ldc', '"Enter number of elements: "'),
<     ('prv'),
---
>     ('prc', 0),
205,206c7
<     ('ldc', '"Enter "'),
<     ('prv'),
---
>     ('prc', 1),
209,210c10
<     ('ldc', '" integers\\n"'),
<     ('prv'),
---
>     ('prc', 2),
239c39
<     ('ldr', 0, 0),
---
>     ('ldr', 0, 0), ------ ldv
245c45
<     ('ldr', 0, 0),
---
>     ('ldr', 0, 0),   ---- ldv
312,313c112
<     ('ldc', '"Sorted list in ascending order:\\n"'),
<     ('prv'),
---
>     ('prc', 3),
324,325c123
<     ('ldc', '" "'),
<     ('prv'),
---
>     ('prc', 4),
340,341c138
< ]
< 
---
> ]
\ No newline at end of file
